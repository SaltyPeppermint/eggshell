# This file is automatically generated by pyo3_stub_gen
# ruff: noqa: E501, F401

import numpy
import numpy.typing
import typing

class PyAst:
    r"""
    Wrapper type for Python
    """
    name: str
    is_leaf: bool
    arity: int
    def __new__(cls,s_expr_str:str, featurizer:PyFeaturizer): ...
    def __str__(self) -> str:
        ...

    def __repr__(self) -> str:
        ...

    def size(self) -> int:
        ...

    def depth(self) -> int:
        ...

    def count_symbols(self, featurizer:PyFeaturizer) -> list[int]:
        ...

    def feature_vec_simple(self, featurizer:PyFeaturizer) -> list[float]:
        ...

    def feature_vec_ml(self) -> list[float]:
        ...

    def node_id(self) -> int:
        ...


class PyFeaturizer:
    r"""
    Wrapper type for Python
    """
    def __new__(cls,variable_names,ignore_unknown = ...): ...
    def feature_names_simple(self) -> list[str]:
        ...


def eqsat_check(start:PyAst,goals:typing.Sequence[PyAst]) -> str:
    ...

def many_eqsat_check(starts:typing.Sequence[PyAst],goals:typing.Sequence[typing.Sequence[PyAst]]) -> list[str]:
    ...

def many_featurize_simple(expression_strings:typing.Sequence[str],featurizer:PyFeaturizer) -> numpy.typing.NDArray[numpy.float64]:
    ...

