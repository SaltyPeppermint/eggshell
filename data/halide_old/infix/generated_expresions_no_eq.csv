"(max(min(min(1999, min(v2 + v3, 2000) + -1), ((((v4*1008) + v5) + -10) + (min(v6 - (v4*1008), 998) + 18)) - 1) + 1, min(max(max(0, max(v3, 0)), ((v4*1008) + v5) + -10), (min(v6 - (v4*1008), 998) + 18) + (((v4*1008) + v5) + -10))) <= min(max(max(0, max(v3, 0)), ((v4*1008) + v5) + -10), (min(v6 - (v4*1008), 998) + 18) + (((v4*1008) + v5) + -10)))"
(((((((uint1)1 && (((((((v0*32) + v1) + v2) + v3) + -15) % 16) <= ((((((v0*32) + v1) + v2) + v3) + -15) % 16))) && (((((((v0*32) + v1) + v2) + v3) + -15) % 16) >= ((((((v0*32) + v1) + v2) + v3) + -15) % 16))) && (((((v4 + v5)*4) + 0) + -7) <= (((v4 + v5)*4) + -7))) && (((((v4 + v5)*4) + 3) + -7) >= ((((v4 + v5)*4) + 3) + -7))) && (v6 <= v6)) && (v6 >= v6))
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= ((v0*4) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + v1) + 3))) && ((v2/4) <= (v2/4))) && (((v2/4) + 32) >= ((v2/4) + 32))) && (v3 <= v3)) && (((v4 + v3) + -1) >= ((v4 + v3) - 1)))
"(max(0, min(1, (0 + (((v0 % 4) + 47)/16)) - 1) + 1) <= 0)"
"(0 >= ((0 + ((max(v0, 0) + 138)/4)) - 1))"
"(((((((uint1)1 && (((((0*4) + (max((v2*2) + v3, (min(((v4 + v5) + -1)/250, v2 + 3)*2) + ((max(min(v2 - (((v4 + v5) + -1)/250), 0), -3)*2) + v3))*4)) + 0) + -5) <= (((v2*8) + ((v3*4) + max(max(min(v2 - (((v4 + v5) + -1)/250), 0), -3)*8, 0))) + -5))) && (((((((min(min((((v4 + v5) + -1)/250) - v2, 3)*8, -3) + 3)/4)*4) + max(((v2*2) + v3)*4, (((min(((v4 + v5) + -1)/250, v2 + 3)*2) + v3)*4) + 3)) + 3) + -5) >= (((min(((v4 + v5) + -1)/250, v2 + 3)*8) + ((v3*4) + 3)) + -5))) && (((((v6/((v7/4) + 1)) + (v8/250))*8) + -5) <= ((((v6/((v7/4) + 1)) + (v8/250))*8) + -5))) && (((((v6/((v7/4) + 1)) + (v8/250))*8) + ((8 + -5) - 1)) >= ((((v6/((v7/4) + 1)) + (v8/250))*8) + ((8 + -5) - 1)))) && (v9 <= v9)) && (v9 >= v9))"
"(((v0*16) + -36) == ((((v0*16) + -36) + ((min(v1, -1)*16) + 48)) - 1))"
"(0 == ((0 + (18 - (max(v0, 5)*3))) - 1))"
((0 - ((v0 + v1)*2)) > (499 - ((v0 + v1)*2)))
"(max(min((183 - v0)/64, (0 + 2) - 1) + 1, min(max(0 - (v0/64), 0), 2 + 0)) <= min(max(0 - (v0/64), 0), 2 + 0))"
"((((v0*2) + v1) + 1) < (max((v0 + 1)*2, -1) + v1))"
(((((((uint1)1 && ((0 + v0) <= (0 + v0))) && ((3 + v0) >= (((4 + 0) - 1) + v0))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (v3 <= v3)) && (v3 >= v3))
(((((v0 % ((v1 + 180)/168))*-168)/4)*4) == ((v0 % ((v1 + 180)/168))*-168))
((((v0*-1000)/4)*4) == (v0*-1000))
((v0 + -5) >= (((v0 - 1) + 1) + 1))
"(max(min(17, ((v1*5) + 5) - 1) + 1, min(max(0, v1*5), 5 + (v1*5))) <= min(max(0, v1*5), 5 + (v1*5)))"
"(max(min((v0*-16) + 62, (0 + 16) - 1) + 1, min(max((v0*-16) + 62, 0), 16 + 0)) <= min(max((v0*-16) + 62, 0), 16 + 0))"
"(max(min(min(1999, min(v1 + v2, 2000) + -1), (v4 + v3) - 1) + 1, min(max(max(max(max(0, 0), max(v2, 0)), max(v2, 0)), v4), v3 + v4)) <= min(max(max(max(max(0, 0), max(v2, 0)), max(v2, 0)), v4), v3 + v4))"
(((((-136 - ((v0 + v1) % 8))/8)*2) + -8) >= ((((((-136 - ((v0 + v1) % 8))/8)*2) + -8) + ((((((v0 + v1) % 8) + 151)/8)*2) + 9)) - 1))
(((v0 + 76)/64) != 0)
((v0 + -2) >= (((v0 - 1) + 1) + 1))
((((v0*-136)/4)*4) == (v0*-136))
"(((min(v0, 253)*8) + -36) == ((((min(v0, 253)*8) + -36) + ((v1*8) + 16)) - 1))"
(((((((uint1)1 && ((0 + ((v0*128) + v1)) <= ((v0*128) + v1))) && ((3 + (((v0*128) + v1) + 124)) >= (((v0*128) + v1) + 127))) && (v2 <= v2)) && ((v2 + 1) >= (v2 + 1))) && (0 <= 0)) && (2 >= 2))
(((v0 + v1) + -11) < (((v0 + 1) + v1) + -14))
((((v0*8) + ((v1*3) + v2)) + -5) < (((v0*8) + ((v1*3) + (v2 + 1))) + -5))
"(max(0, min(((v0 % 4) + 54)/16, (0 + 5) - 1) + 1) <= 0)"
(((v0 + v1) + 125) < ((v0 + (v1 + 1)) + -5))
"(((min(v0*2, 251)*8) + -20) == ((((min(v0*2, 251)*8) + -20) + ((v1*8) + 208)) - 1))"
"(0 == ((0 + ((max(min(v0, -1), -3)*2) + 6)) - 1))"
(((v0 + 67)/64) != 0)
(((((((uint1)1 && ((0 + v0) <= (0 + v0))) && ((((255 + 0) - 1) + v0) >= (((255 + 0) - 1) + v0))) && ((((0*4) + v1) + 0) <= (((0*4) + 0) + v1))) && ((((7*4) + v1) + 3) >= (((((8 + 0) - 1)*4) + ((4 + 0) - 1)) + v1))) && (v2 <= v2)) && (v2 >= v2))
"(((min(v0*63, 62) + (v1 + v2)) + -10) >= ((((min(v0*63, 62) + (v1 + v2)) + -10) + 81) - 1))"
((((v0*-256)/4)*4) == (v0*-256))
"(((((((uint1)1 && ((0 + (((min(v0, 4) + v1) + -36)/16)) <= (-2 + (((min(v0, 4) + v1) + -4)/16)))) && ((3 + ((((min(v0, 4) + v1) + -36)/16) + ((((((((min(v0, 4) + v1) + 44)/16) + ((v2/4)*4)) - (((min(v0, 4) + v1) + -36)/16)) + 3)/4)*4))) >= (3 + ((((min(v0, 4) + v1) + 44)/16) + ((v2/4)*4))))) && ((max(v3*8, (v4*8) + 5) + -1) <= ((((((v4*2) + 0)*4) + 0) + -2) + 1))) && (((v4*8) + 11) >= ((((((v4*2) + 1)*4) + 3) + 3) + 1))) && (0 <= 0)) && (63 >= 63))"
"(((v0*4) + -177) == ((((v0*4) + -177) + ((min((((((v1 + v2) + -1)/250)*64) - (v3*35)) - ((v2/250)*64), -70)*4) + 423)) - 1))"
"(((((((uint1)1 && (((v0/4) + -2) <= (((0*4) + ((v0/4) + -2)) + 0))) && (((v0 + 531)/4) >= ((((((v0 % 4) + 539)/16)*4) + ((v0/4) + 130)) + 3))) && ((0 + min((v1/4)*4, (((v1/4) + (((v1 % 4) + 503)/4))*4) + -3)) <= ((v1/4)*4))) && ((3 + ((((v1/4) + (((v1 % 4) + 503)/4))*4) + -3)) >= ((((((v1 % 4) + 507)/4) + (v1/4)) - 1)*4))) && (v2 <= v2)) && (v2 >= v2))"
"(max(min(min(min((v2/128) + -1, (min(min(2127 - v1, v2), ((v3 + v4) - v1) + 127)/128) + -1), (1872 - v1)/128), (0 + ((v2 + 127)/128)) - 1) + 1, min(max(max(0 - (v1/128), max(((v4 - v1) + 127)/128, 0 - (v1/128))), 0), ((v2 + 127)/128) + 0)) <= min(max(max(0 - (v1/128), max(((v4 - v1) + 127)/128, 0 - (v1/128))), 0), ((v2 + 127)/128) + 0))"
((((v0*8) + 46)/36) != 0)
"(((((((uint1)1 && (((0 + (min(v0, 4) + v1)) + -4) <= (0 + ((min(v0, 4) + v1) + -4)))) && (((503 + ((((max(v0, 4) + -1)/500)*500) + (min(v0, 4) + v1))) + -4) >= (((4 + 0) - 1) + ((v0 + v1) + -4)))) && ((min(v2*63, 62) + v3) <= ((min(v2*63, 62) + 0) + v3))) && (((min(v2*63, 62) + v3) + 62) >= ((min(v2*63, 62) + ((63 + 0) - 1)) + v3))) && (v4 <= v4)) && (v4 >= v4))"
((((v0*-34)/17)*17) == (v0*-34))
"((((min(min((v3*32) + ((v2/4) + 31), ((v1 + v2) + 3)/4)*4, max(min((v3*32) + ((v2/4) + 29), ((v1 + v2) + 3)/4)*4, (v3*128) + (((v2/4)*4) + 109)) + 4)*-1)/4)*4) == (min(min((v3*32) + ((v2/4) + 31), ((v1 + v2) + 3)/4)*4, max(min((v3*32) + ((v2/4) + 29), ((v1 + v2) + 3)/4)*4, (v3*128) + (((v2/4)*4) + 109)) + 4)*-1))"
((((v0*500) + v1) + 499) < (((v0 + 1)*500) + v1))
((0 - ((v0 + v1)*2)) == (499 - ((v0 + v1)*2)))
"(0 == ((0 + (6 - (max(min(v0, 3), 1)*2))) - 1))"
"(((((((uint1)1 && ((((v0*63) + v1) + -11) <= (((v0*63) + v1) + -11))) && (((min(v0*63, 943) + v1) + 63) >= (((1018 - max(v0*63, 943)) + (((v0*63) + v1) + -11)) - 1))) && ((0 + v2) <= (((0*4) + 0) + v2))) && ((3 + (v2 + 12)) >= (((((4 + 0) - 1)*4) + ((4 + 0) - 1)) + v2))) && (v3 <= v3)) && (v3 >= v3))"
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (v2 <= (0 + v2))) && ((v2 + 124) >= (((125 + 0) - 1) + v2))) && (0 <= 0)) && (0 >= 0))
((((v0*8) + v1) + 8) < ((((v0 + 1)*8) + v1) + -3))
(((((((uint1)1 && (((((0*4) + v0) + -2) + 0) <= ((((0*4) + 0) + v0) + -2))) && (((((7*4) + v0) + ((6 + -2) - 1)) + 3) >= ((((7*4) + ((4 + 0) - 1)) + v0) + ((6 + -2) - 1)))) && ((-2 + v1) <= (-2 + v1))) && ((((6 + -2) - 1) + v1) >= (((6 + -2) - 1) + v1))) && (((v2*2) + v3) <= ((v2*2) + v3))) && (((v2*2) + v3) >= ((v2*2) + v3)))
(((v0 % 250) + 1999) >= 0)
(((((((uint1)1 && ((v0 + v1) <= (v0 + v1))) && ((v0 + v1) >= (v0 + v1))) && (0 <= 0)) && (0 >= 0)) && (((v2*4) + 0) <= ((v2*4) + 0))) && (((v2*4) + 3) >= ((v2*4) + ((4 + 0) - 1))))
(((((((uint1)1 && (0 <= 0)) && ((16 - 1) >= (16 - 1))) && ((((0*4) + ((v0*4) + ((v1*8) + v2))) + 0) <= ((v0*4) + ((v1*8) + v2)))) && ((((0*4) + ((v0*4) + ((v1*8) + v2))) + 3) >= (((v0*4) + ((v1*8) + v2)) + 3))) && (v3 <= v3)) && (v3 >= v3))
"(max(min(min(min(min(((v1 + v2)/4) + -1, ((v1 + v2) + -5)/4), ((v1 + v2) + -3)/4), ((v1 + v2) + -2)/4), ((v4 + -2) + (min(v3, 30) + 2)) - 1) + 1, min(max(max(max(max(v2/4, (v2 + -1)/4), (v2 + 1)/4), (v2 + 2)/4), v4 + -2), (min(v3, 30) + 2) + (v4 + -2))) <= min(max(max(max(max(v2/4, (v2 + -1)/4), (v2 + 1)/4), (v2 + 2)/4), v4 + -2), (min(v3, 30) + 2) + (v4 + -2)))"
"(((max(max(min(((v0*64) + v1)*2, 491), -8) - max(min(((v0*64) + v1)*2, 499), 0), max(min(((((v0*16) + v2)*4) + v1)*2, 491), -8) - max(min(((((v0*16) + v2)*4) + v1)*2, 499), 0))*4) + 40) <= 1024)"
"(((((min(v0, 4) + v1)/4) + (v2*16)) + 22) < ((((min(v0, 4) + v1)/4) + ((v2 + 1)*16)) + -3))"
(((((((uint1)1 && ((((((v0*2) + v1)*4) + v2) + 0) <= ((((v0*2) + v1)*4) + v2))) && ((((((v0*2) + v1)*4) + v2) + 3) >= (((((v0*2) + v1)*4) + 3) + v2))) && (0 <= 0)) && (0 >= 0)) && (v3 <= v3)) && (v3 >= v3))
(((((((uint1)1 && ((v0 + v1) <= (v0 + v1))) && ((v0 + v1) >= (v0 + v1))) && ((0 + (v2/4)) <= (v2/4))) && ((3 + ((v2/4) + 29)) >= ((v2/4) + 32))) && (0 <= 0)) && (2 >= 2))
"(((max(min((v0/125)*8, 125), 1)*16) + -20) == ((((max(min((v0/125)*8, 125), 1)*16) + -20) + ((v1*16) + 208)) - 1))"
"(0 == ((0 + (33 - max(v0*12, 21))) - 1))"
((4 - (((v0*4) + v1)*2)) > (509 - (((v0*4) + v1)*2)))
"(0 == ((0 + (62 - max(v0*16, 46))) - 1))"
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((1*4) + v0) + 3) >= (((((2 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && ((((v1*125) + v2) + v3) <= (((v1*125) + v2) + v3))) && ((((v1*125) + v2) + v3) >= (((v1*125) + v2) + v3))) && (v4 <= v4)) && (v4 >= v4))
(((((((uint1)1 && (((((v0*2) + v1)*2) + v2) <= ((((v0*2) + v1)*2) + v2))) && ((((((v0*2) + v1)*2) + v2) + 1) >= (((((v0*2) + v1)*2) + 1) + v2))) && (0 <= 0)) && (0 >= 0)) && (((v3*4) + 0) <= ((v3*4) + 0))) && (((v3*4) + 3) >= ((v3*4) + ((4 + 0) - 1))))
"((((min(v0*2, 123) + v1) + v2) + 1) < ((min(v0*2, 123) + v1) + (v2 + 1)))"
"((((min(((v0*8) - min((v0*8) + ((v1*8)*8), (v2*64) + 81)) + ((v1*8)*8), 7)*-4)/4)*4) == (min(((v0*8) - min((v0*8) + ((v1*8)*8), (v2*64) + 81)) + ((v1*8)*8), 7)*-4))"
((((v0*2) + 77)/65) != 0)
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && ((v2 + v3) <= (v2 + v3))) && ((v2 + v3) >= (v2 + v3))) && (((v4*3) + v5) <= ((v4*3) + v5))) && (((v4*3) + v5) >= ((v4*3) + v5)))
"((max(v0*63, 62) + -124) == (((max(v0*63, 62) + -124) + (129 - max(v0*63, 62))) - 1))"
"(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((1*4) + v0) + 3) >= (((((2 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && (((v1*2) + v2) <= (((v1*2) + 0) + v2))) && ((((v1*2) + v2) + 1) >= (((v1*2) + ((2 + 0) - 1)) + v2))) && ((min(v3*69, 68) + v4) <= (min(v3*69, 68) + v4))) && ((min(v3*69, 68) + v4) >= (min(v3*69, 68) + v4)))"
"(((((((uint1)1 && ((0 + ((min(max(v0*252, -13), (v0*252) + 248) + v1) + 3)) <= ((0 + ((v0*252) + v1)) + -10))) && ((3 + (min((((min(v0*252, -13)/4)*4) + (max(v0*252, -13) + v1)) + 16, (v0*252) + v1) + 251)) >= ((3 + (((v0*252) + v1) + 252)) + 2))) && ((v2 + -7) <= (v2 + -7))) && ((v3 + 4) >= (v3 + 4))) && (0 <= 0)) && (2 >= 2))"
((((v0*4) + 131)/126) != 0)
"(((((((uint1)1 && ((0 + ((min(v0*32, 220) + (v1*4)) + v2)) <= ((min(v0*32, 220) + (v1*4)) + v2))) && ((3 + ((min(v0*32, 220) + (v1*4)) + v2)) >= (((min(v0*32, 220) + (v1*4)) + 3) + v2))) && (0 <= 0)) && (0 >= 0)) && (v3 <= v3)) && (v3 >= v3))"
((4 - (((v0*4) + v1)*2)) >= (509 - (((v0*4) + v1)*2)))
(((-165 - ((v0 + v1) % 8))/8) == ((((-165 - ((v0 + v1) % 8))/8) + ((((v0 + v1) % 8) + 180)/8)) - 1))
"((max(max(min(min(v0*8, 117) + v1, 1989), -10) - max(min((v0*8) + v1, 1996), -3), (max(min(v1, 1989), -10) - max(min(v1, 2001), 2)) + 5) + 8) <= 1024)"
"(max(min(126 - v0, (0 + 33) - 1) + 1, min(max(2 - v0, 0), 33 + 0)) <= min(max(2 - v0, 0), 33 + 0))"
((v0 + 1) <= (((v0 - 1) + -5) - 1))
"(((min((v0*8) + (((v1/250)*8) + -5), ((((v2 + v1) + -1)/250)*8) + -5)/8)*8) == min((v0*8) + (((v1/250)*8) + -5), ((((v2 + v1) + -1)/250)*8) + -5))"
"((((max(min((v1*-64) + v2, 64), 0) + (v1*64))/4)*4) == (max(min((v1*-64) + v2, 64), 0) + (v1*64)))"
(((((((uint1)1 && (((((v0*4) + v1) + 0) + -4) <= ((((v0*4) + 0) + v1) + -4))) && (((((v0*4) + v1) + 3) + -4) >= ((((v0*4) + ((4 + 0) - 1)) + v1) + -4))) && (v2 <= v2)) && (v2 >= v2)) && (((v3*32) + 0) <= ((v3*32) + 0))) && (((v3*32) + ((32 + 0) - 1)) >= ((v3*32) + ((32 + 0) - 1))))
(((((((uint1)1 && ((((((v0*2) + 0)*4) + 0) + -5) <= (((((v0*2) + 0)*4) + 0) + -5))) && ((((((v0*2) + (((v1 - v0)*2) + 1))*4) + 3) + -5) >= (((((v0*2) + (((v1 - v0)*2) + 1))*4) + ((4 + 0) - 1)) + -5))) && (v2 <= v2)) && (v2 >= v2)) && (((v3*69) + v4) <= ((v3*69) + v4))) && (((v3*69) + v4) >= ((v3*69) + v4)))
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((62*4) + v0) + 3) >= (((62*4) + ((4 + 0) - 1)) + v0))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (v3 <= v3)) && (((v4 + v3) + -1) >= ((v4 + v3) - 1)))
((((v0*4) + ((v1*2) + v2)) + v3) < (((v0*4) + ((v1*2) + (v2 + 1))) + v3))
(((((v0 % ((v1 + 681)/672))*-672)/4)*4) == ((v0 % ((v1 + 681)/672))*-672))
(((((((uint1)1 && ((v0 + -1) <= ((((((v0*2) + 0)*4) + 0) + -5)/8))) && (v1 >= ((((((v0*2) + (((v1 - v0)*2) + 1))*4) + 3) + -5)/8))) && ((((((v2*2) + 0)*4) + 0) + -5) <= ((v2*8) + -5))) && ((((((v2*2) + 1)*4) + 3) + -5) >= ((8 + ((v2*8) + -5)) - 1))) && (((v3*69) + v4) <= ((v3*69) + v4))) && (((v3*69) + v4) >= ((v3*69) + v4)))
(((v0*8) + 2) < (((v0 + 1)*8) + -5))
((((v0/4)*4) + -7) == (((((v0/4)*4) + -7) + ((v1*4) + 12)) - 1))
"(((((((uint1)1 && (((((0*4) + v0) + -2) + 0) <= ((((0*4) + 0) + v0) + -2))) && (((((2*4) + v0) + ((6 + -2) - 1)) + 3) >= ((((2*4) + ((4 + 0) - 1)) + v0) + ((6 + -2) - 1)))) && ((max(v1*8, v2 + 4) + -1) <= (-2 + v2))) && ((v2 + 3) >= (((6 + -2) - 1) + v2))) && (v3 <= v3)) && (v3 >= v3))"
"(max(min(min(min((((v1 + v2) - ((v3*63) + v4)) + 6)/4, ((min(max(min(min(v3*63, 62) + v4, 1929), -70) + 68, v1 + v2) - ((v3*63) + v4)) + 9)/4), ((max(min(min(v3*63, 62) + v4, 1929), -70) - ((v3*63) + v4)) + 77)/4), (0 + ((v5/4) + 21)) - 1) + 1, min(max(((v2 - ((v3*63) + v4)) + 13)/4, 0), ((v5/4) + 21) + 0)) <= min(max(((v2 - ((v3*63) + v4)) + 13)/4, 0), ((v5/4) + 21) + 0))"
(((((((uint1)1 && ((0 + v0) <= (((0*4) + v0) + 0))) && ((3 + (v0 + 64)) >= (((16*4) + v0) + 3))) && (((v1*6) + v2) <= ((v1*6) + v2))) && ((((v1*6) + v2) + 5) >= (((v1*6) + v2) + 5))) && (0 <= 0)) && (2 >= 2))
"(0 == ((0 + (131 - max(v0*33, 98))) - 1))"
"(max(min(min(min(1999, 1999), min(v1 + v2, 2000) + -1), ((((v4*503) + v5) + -10) + (min(v3, 493) + 18)) - 1) + 1, min(max(max(max(0, 0), max(v2, 0)), ((v4*503) + v5) + -10), (min(v3, 493) + 18) + (((v4*503) + v5) + -10))) <= min(max(max(max(0, 0), max(v2, 0)), ((v4*503) + v5) + -10), (min(v3, 493) + 18) + (((v4*503) + v5) + -10)))"
(((((((uint1)1 && (((v0*2) + v1) <= (((v0*2) + 0) + v1))) && ((((v0*2) + v1) + 1) >= (((v0*2) + ((2 + 0) - 1)) + v1))) && ((v2/125) <= (0 + (v2/125)))) && ((((v2/125) + ((v3/4)*4)) + 3) >= (((4 + 0) - 1) + ((v2/125) + ((v3/4)*4))))) && (((0*4) + 0) <= 0)) && (((15*4) + 3) >= ((64 + 0) - 1)))
"(max(min((v1 + v2) + -1, (((v3*256) + -273) + 359) - 1) + 1, min(max(v2, (v3*256) + -273), 359 + ((v3*256) + -273))) <= min(max(v2, (v3*256) + -273), 359 + ((v3*256) + -273)))"
"(max(min(1999, (((v1*4) + v2) + 4) - 1) + 1, min(max(0, (v1*4) + v2), 4 + ((v1*4) + v2))) <= min(max(0, (v1*4) + v2), 4 + ((v1*4) + v2)))"
"(max(min(min(min(1999, 1999), min(v1 + v2, 2000) + -1), (((max(v3*504, -3) + v4) + 1) + (min(v3*504, -3) + 507)) - 1) + 1, min(max(max(max(0, 0), max(v2, 0)), (max(v3*504, -3) + v4) + 1), (min(v3*504, -3) + 507) + ((max(v3*504, -3) + v4) + 1))) <= min(max(max(max(0, 0), max(v2, 0)), (max(v3*504, -3) + v4) + 1), (min(v3*504, -3) + 507) + ((max(v3*504, -3) + v4) + 1)))"
"(max(min(min(min(min(1999, 1999), min(v1 + v2, 2000) + -1), min(v1 + v2, 2000) + -1), ((v3 + -2) + 130) - 1) + 1, min(max(max(max(max(max(max(max(0, 0), 0), 0), max(v2, 0)), max(v2, 0)), max(v2, 0)), v3 + -2), 130 + (v3 + -2))) <= min(max(max(max(max(max(max(max(0, 0), 0), 0), max(v2, 0)), max(v2, 0)), max(v2, 0)), v3 + -2), 130 + (v3 + -2)))"
((((v0*2) + 130)/125) != 0)
"(max(0, min(((max(min((min(v0*11, 53) + v1)*2, 477), -22) - max(min((min(v0*11, 53) + v1)*2, 499), 0)) + 19)/4, (0 + ((v2 + 26)/4)) - 1) + 1) <= 0)"
"(max(0, min(((v0 % 8) + 14)/8, (0 + (((v0 % 8) + 29)/8)) - 1) + 1) <= 0)"
(((((((uint1)1 && (((v0 + v1) % 16) <= ((v0 + v1) % 16))) && (((v0 + v1) % 16) >= ((v0 + v1) % 16))) && (((((v2 + v3)*4) + 0) + -7) <= ((((v2 + v3)*4) + 0) + -7))) && (((((v2 + v3)*4) + 3) + -7) >= ((((v2 + v3)*4) + ((4 + 0) - 1)) + -7))) && (v4 <= v4)) && (v4 >= v4))
((v0 + 1) <= (((v0 - 1) + -2) - 1))
"(((min((max(min((v3*1000) + v4, min(v5 + v4, 2000) + -1000), -999) - (max((max(min((v3*1000) + v4, min(v5 + v4, 2000) + -1000), -999) - max(min((v3*1000) + v4, min(v5 + v4, 2999) + -1000), 0))/8, -125)*8)) - max(min((v3*1000) + v4, min(v5 + v4, 2999) + -1000), 0), 0)/4)*4) == min((max(min((v3*1000) + v4, min(v5 + v4, 2000) + -1000), -999) - (max((max(min((v3*1000) + v4, min(v5 + v4, 2000) + -1000), -999) - max(min((v3*1000) + v4, min(v5 + v4, 2999) + -1000), 0))/8, -125)*8)) - max(min((v3*1000) + v4, min(v5 + v4, 2999) + -1000), 0), 0))"
"(max(min(v0, 0), -11) >= ((max(min(v0, 0), -11) + (5 - max(min(v0, 0), -11))) - 1))"
((((v0*-1008)/4)*4) == (v0*-1008))
((((v0*-32)/4)*4) == (v0*-32))
"((v0 + 1) < (min(max(min((v1/4)*4, 1999), (v0 + 1) + 4), v0 + 1) + -3))"
"(((min((v2*-64) + min(v1*-252, -248), -436)/4)*4) == min((v2*-64) + min(v1*-252, -248), -436))"
"(0 == ((0 + ((min(v0, -11)*2) + 26)) - 1))"
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((124*4) + v0) + 3) >= (((((125 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && (v1 <= (0 + v1))) && ((v1 + 124) >= (((125 + 0) - 1) + v1))) && (v2 <= v2)) && (v2 >= v2))
(((v0*8) + v1) >= (((v0*8) + (v1 - 1)) + 1))
"(((((((uint1)1 && ((0 + v0) <= (0 + v0))) && ((((16 + 0) - 1) + v0) >= (((16 + 0) - 1) + v0))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && ((min(v3*4, 133) + 0) <= (min(v3*4, 133) + 0))) && ((min(v3*4, 133) + 3) >= (min(v3*4, 133) + ((4 + 0) - 1))))"
"(((((((uint1)1 && (((0 + ((min(v0, 4) + v1)/4)) + -1) <= ((0 + ((min(v0, 4) + v1)/4)) + -1))) && (((3 + (((min(v0, 4) + v1)/4) + (((v2 + 1)/4)*4))) + -1) >= ((((4 + 0) - 1) + (((min(v0, 4) + v1)/4) + (((v2 + 1)/4)*4))) + -1))) && ((v3/4) <= (v3/4))) && (((v3/4) + 31) >= ((32 + (v3/4)) - 1))) && (((v4*104) + v5) <= ((v4*104) + v5))) && (((v4*104) + v5) >= ((v4*104) + v5)))"
"(((((((uint1)1 && (max(((min(v0, 4) + v1) + -4)/8, v2 + 4) <= (v2 + 0))) && ((v2 + 4) >= (v2 + 4))) && ((min(v3*64, 129) + v4) <= (0 + ((v3*64) + v4)))) && (((min(v3*64, 61) + v4) + 67) >= (4 + (min((((((124 - max(v3*64, 93))/4)*4) + ((v3*64) + v4)) - max(v3*64, 121)) + 93, min(v3*64, 61) + v4) + 63)))) && ((((0*4) + 0) + 0) <= 0)) && ((((22*4) + 89) + 3) >= 88))"
"(((((((uint1)1 && (((0 + (max(v0*8, -9) + v1)) + -2) <= ((max(v0*8, -9) + v1) + -2))) && (((3 + ((((min(v0*8, -9)/4)*4) + (max(v0*8, -9) + v1)) + 28)) + -2) >= ((((min(v0*8, -9)/4)*4) + (max(v0*8, -9) + v1)) + 26))) && ((max(v2 + 16, v3) + -11) <= (v2 + -4))) && ((v2 + 5) >= (v2 + 5))) && (0 <= 0)) && (2 >= 2))"
"(0 == ((0 + (32 - (max(min(v0, 4), 3)*8))) - 1))"
"(max(0, min((max(min((((v0/125)*2) + v1)*4, min((((v2 + v0) + -1)/125)*8, 113) + 9), -2) - max(min((((v0/125)*2) + v1)*4, min((((v2 + v0) + -1)/125)*8, 116) + 9), 1))/4, (0 + ((v3 + 7)/4)) - 1) + 1) <= 0)"
"((v0 + 1) < (min(max(min(((v1*4) + v2)*4, 1999), (v0 + 1) + 4), v0 + 1) + -3))"
"(((((((uint1)1 && (max(min((v0*63) + v1, 1999), (v0*63) + v1) <= (v1 + (v0*63)))) && (((min(v0*63, 62) + v1) + 62) >= (v1 + (min(v0*63, 62) + 62)))) && (((v2/4)*4) <= ((((v2/4) + 0)*4) + 0))) && (((((v2/4) + ((v3/8)*8))*4) + 31) >= ((((v2/4) + (((v3 + 1) + 0) - 1))*4) + 3))) && (0 <= 0)) && (19 >= 19))"
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && ((v2 + v3) <= (v2 + v3))) && ((v2 + v3) >= (v2 + v3))) && (v4 <= v4)) && (v4 >= v4))
"(max(min(min(min(min(min(min(min(min(1999, 1999), 1999), 1999), min(v1 + v2, 2000) + -1), min(v1 + v2, 2000) + -1), min(v1 + v2, 2000) + -1), min(v1 + v2, 2000) + -1), ((v3 + -2) + 130) - 1) + 1, min(max(max(max(max(max(max(max(max(max(max(max(0, 0), 0), 0), 0), 0), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), v3 + -2), 130 + (v3 + -2))) <= min(max(max(max(max(max(max(max(max(max(max(max(0, 0), 0), 0), 0), 0), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), v3 + -2), 130 + (v3 + -2)))"
"(0 == ((0 + (44 - max(v0*15, 29))) - 1))"
((10 - v0) > (509 - v0))
((((v0*250) + v1) + 249) < (((v0 + 1)*250) + v1))
"((v0 + 5) < (min(max((v0 + 1) + 16, v1), (v0 + 1) + 7) + -11))"
"(((((((uint1)1 && ((0 + (min(v0*128, 372) + v1)) <= (min(v0*128, 372) + v1))) && ((3 + ((min(v0*128, 372) + v1) + 124)) >= ((min(v0*128, 372) + 127) + v1))) && ((0 + (min(v2*63, 62) + v3)) <= ((min(v2*63, 62) + 0) + v3))) && ((31 + ((min(v2*63, 62) + v3) + 32)) >= ((min(v2*63, 62) + ((63 + 0) - 1)) + v3))) && (v4 <= v4)) && (v4 >= v4))"
(((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && ((((0*4) + (v1/4)) + 0) <= (0 + (v1/4)))) && ((((0*4) + ((v1/4) + 28)) + 3) >= (((4 + 0) - 1) + ((v1/4) + 28)))) && (((v2*104) + 0) <= ((v2*104) + 0))) && (((v2*104) + ((104 + 0) - 1)) >= ((v2*104) + ((104 + 0) - 1))))
(((v0 + 251)/252) != 0)
(((((((uint1)1 && (((((v0*4) + v1) + 0) + -4) <= (((v0*4) + v1) + -4))) && (((((v0*4) + v1) + 3) + -4) >= (((v0*4) + v1) + -1))) && (0 <= 0)) && (0 >= 0)) && (0 <= 0)) && (13 >= 13))
"(max(0, min(((v0 % 4) + 495)/504, (0 + 2) - 1) + 1) <= 0)"
(((((((uint1)1 && (((((0*4) + v0)*4) + 0) <= (((v0*2)*2) + 0))) && (((((2*4) + v0)*4) + 15) >= ((((v0*2) + 23)*2) + 3))) && (((((v1*8) + v2) + v3)*4) <= ((((v1*8) + v2) + v3)*4))) && ((((((v1*8) + v2) + v3)*4) + 3) >= (((((v1*8) + v2) + v3)*4) + 3))) && (0 <= 0)) && (19 >= 19))
((0 - v0) > (124 - v0))
"(0 == ((0 + (26 - (max(min(v0, 13), 11)*2))) - 1))"
(((v0 + 999)/1000) != 0)
"((((max((v0*-125) + (((v1 + min((v2*1000) + 1000, v3))/4) + -252), ((v1 + min((v2*1000) + 1000, v3)) + -965)/4)*-4)/4)*4) == (max((v0*-125) + (((v1 + min((v2*1000) + 1000, v3))/4) + -252), ((v1 + min((v2*1000) + 1000, v3)) + -965)/4)*-4))"
(((v0 % 504) + 503) >= 0)
((4 - (v0*2)) > (509 - (v0*2)))
"(max(min(min(min((((v2 + v3) - max(min(v1, 1999), 0))/4) + -1, (min(max(min(v1, 1996), -3), (v2 + v3) + -1) - max(min(v1, 1999), 0))/4), (max(min(v1, 1996), -3) - max(min(v1, 1999), 0))/4), (0 + ((v4 + 7)/4)) - 1) + 1, min(max(((v3 - max(min(v1, 1999), 0)) + 3)/4, 0), ((v4 + 7)/4) + 0)) <= min(max(((v3 - max(min(v1, 1999), 0)) + 3)/4, 0), ((v4 + 7)/4) + 0))"
"((max(min((v0/4)*4, 1999) - max((((v1 + v0) + -1)/4)*4, -3), (max((((v1 + v0) + -1)/4)*4, -3) - min((v0/4)*4, 1999)) + 507) + -504) >= 0)"
(((((((uint1)1 && ((v0 + -2) <= (v0 + -2))) && ((v0 + 39) >= (v0 + 39))) && ((0 + (v1/4)) <= (0 + (v1/4)))) && ((3 + ((v1/4) + (((v2 + 3)/4)*4))) >= (3 + ((v1/4) + (((v2 + 3)/4)*4))))) && (((v3*4) + v4) <= ((v3*4) + v4))) && (((v3*4) + v4) >= ((v3*4) + v4)))
(((((v0 % ((v1 + 76)/64))*-64)/4)*4) == ((v0 % ((v1 + 76)/64))*-64))
"(((min(v0*32, 93) + v1) + v2) < ((min(v0*32, 93) + (v1 + 1)) + v2))"
((v0 + 3) != 0)
"(((((((uint1)1 && ((((min(v0*252, 248) + (v1*4)) + v2) + -2) <= (((min(v0*252, 248) + (v1*4)) + v2) + -2))) && ((((min(v0*252, 248) + (v1*4)) + v2) + 6) >= (((min(v0*252, 248) + (v1*4)) + v2) + 6))) && (((((min(v3*16, 484) + v4) + v5) + 0) + 3) <= (((min(v3*16, 484) + v4) + v5) + -2))) && (((((min(v3*16, 484) + v4) + v5) + 3) + 3) >= (((min(v3*16, 484) + v4) + v5) + 3))) && (0 <= 0)) && (0 >= 0))"
"(max(min(min(1999, min(v1 + v2, 2000) + -1), ((((v3*12) + v4) + -10) + (143 - max(v3*12, 118))) - 1) + 1, min(max(max(0, max(v2, 0)), ((v3*12) + v4) + -10), (143 - max(v3*12, 118)) + (((v3*12) + v4) + -10))) <= min(max(max(0, max(v2, 0)), ((v3*12) + v4) + -10), (143 - max(v3*12, 118)) + (((v3*12) + v4) + -10)))"
(((v0 + 45)/32) != 0)
"((v0 + 8) < (min(max(v1/4, (v0 + 1) + 10), v0 + 1) + -2))"
"(max(min(124, ((v1 + -2) + 68) - 1) + 1, min(max(0, v1 + -2), 68 + (v1 + -2))) <= min(max(0, v1 + -2), 68 + (v1 + -2)))"
"(((((((uint1)1 && ((v4 + -3) <= (((((0*4) + v4) + -2) + 0) + -1))) && (((((((min(((((v1 + v2) + -1)/4) - (v3*46)) - ((min(v1, 4) + v2)/4), 44) + 13)/16)*16) + v4) + 15) + -3) >= (((((((min(((((v1 + v2) + -1)/4) - (v3*46)) - ((min(v1, 4) + v2)/4), 44) + 1)/4)*4) + v4) + ((11 + -2) - 1)) + 3) + -1))) && (v5 <= v5)) && (v5 >= v5)) && (v6 <= v6)) && (v6 >= v6))"
"(((((((uint1)1 && (max(min((v0*4) + ((v1*2) + v2), 1999), (v0*4) + ((v1*2) + v2)) <= ((v0*4) + ((v1*2) + v2)))) && (((v0*4) + ((v1*2) + v2)) >= ((v0*4) + ((v1*2) + v2)))) && (((((0*4) + v3)*4) + 0) <= (((0 + v3)*4) + 0))) && ((((((min((min((3 - (v4*2)) - v5, 0)*2) - v6, -1) + 1)*4) + v3)*4) + 15) >= (((((min((min((3 - (v4*2)) - v5, 0)*2) - v6, -1)*4) + 7) + v3)*4) + 3))) && (0 <= 0)) && (19 >= 19))"
"(((max(max(min(v0*2, 371), -128) - max(min(v0*2, 499), 0), max(min(v0*2, 243), -256) - max(min(v0*2, 371), -128))*4) + 520) <= 1024)"
((0 - (v0*16)) > (63 - (v0*16)))
"(max(0, min(min((((v0 + v1) - max(min(v2, 2001), 2)) + -2)/4, ((max(min((v3*125) + v4, min(v5 + v4, 1997) + -125), -127) - max(min((v3*125) + v4, min(v5 + v4, 2126) + -125), 2)) + 126)/4), (0 + ((v6 + 133)/4)) - 1) + 1) <= 0)"
(((((((uint1)1 && (((((v0*3) + 0) + v1) + -2) <= ((((v0*3) + 0) + v1) + -2))) && (((((v0*3) + ((3 + 0) - 1)) + v1) + -2) >= ((((v0*3) + ((3 + 0) - 1)) + v1) + -2))) && (((((((v2*2) + 0)*4) + -2) + 0) + 1) <= ((((((v2*2) + 0)*4) + 0) + -2) + 1))) && (((((((v2*2) + ((((v3 - v2)/4)*8) + 7))*4) + ((6 + -2) - 1)) + 3) + 1) >= ((((((v2*2) + ((((v3 - v2)/4)*8) + 7))*4) + ((4 + 0) - 1)) + ((6 + -2) - 1)) + 1))) && (v4 <= v4)) && (v4 >= v4))
(0 == ((0 + ((((((v0 + v1) % 250) + 999)/250)*16) + 23)) - 1))
((((v0*64) + 97)/9) != 0)
"(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + v0) + 0))) && ((((3*4) + v0) + 3) >= (((3*4) + v0) + 3))) && ((v1/125) <= (((min(0*8, 117) + 0) + v1)/125))) && (((v1 + 124)/125) >= (((min(((16 + 0) - 1)*8, 117) + ((8 + 0) - 1)) + v1)/125))) && (v2 <= v2)) && (v2 >= v2))"
"((((min((v0*32) + ((v1/8) + -5), (v2 + 515)/8)*-8)/8)*8) == (min((v0*32) + ((v1/8) + -5), (v2 + 515)/8)*-8))"
"(0 == ((0 + (((max(v0*2, -1) - v1)*2) + 8)) - 1))"
"(max(min(min(1999, min(v1 + v2, 2000) + -1), (((max(v3*126, -3) + v4) + 1) + (min(v3*126, -3) + 129)) - 1) + 1, min(max(max(0, max(v2, 0)), (max(v3*126, -3) + v4) + 1), (min(v3*126, -3) + 129) + ((max(v3*126, -3) + v4) + 1))) <= min(max(max(0, max(v2, 0)), (max(v3*126, -3) + v4) + 1), (min(v3*126, -3) + 129) + ((max(v3*126, -3) + v4) + 1)))"
"(((((((uint1)1 && ((((max(-2*4, -5) + v0) + 0) + -61) <= ((0 + v0) + -66))) && ((((max(249*4, -5) + v0) + 3) + -61) >= ((3 + (v0 + 1004)) + -66))) && (((max(v1*3, -5) + ((v2*9) + v3)) + 3) <= (((v1*3) + ((v2*9) + v3)) + -2))) && ((((v1*3) + ((v2*9) + v3)) + 5) >= (((v1*3) + ((v2*9) + v3)) + 5))) && (0 <= 0)) && (0 >= 0))"
((v0*8) >= (((v0*8) + 8) - 1))
"(max(((v0 % 8) + 15)/8, ((((min(v1*8, 14) + v0) + 7)/8) - min((min(v1*8, 14) + v0)/8, ((v0 + 7)/8) + v1)) + 1) <= 1024)"
"(max(min(248, ((v1 + v2) + 4) - 1) + 1, min(max(0, v1 + v2), 4 + (v1 + v2))) <= min(max(0, v1 + v2), 4 + (v1 + v2)))"
(((((((uint1)1 && ((v0 + v1) <= (v0 + v1))) && ((v0 + v1) >= (v0 + v1))) && ((((0*4) + v2) + 0) <= v2)) && ((((31*4) + v2) + 3) >= (v2 + 127))) && (0 <= 0)) && (13 >= 13))
((((v0*35) + v1) + 35) < (((v0 + 1)*35) + v1))
"(((max(max(max(min(((v0*32) + v1)*2, 435), -64) - max(min(((v0*32) + v1)*2, 467), -32), max(min(((v0*32) + v1)*2, 467), -32) - max(min(((v0*32) + v1)*2, 499), 0)), -33)*4) + 136) <= 1024)"
(((v0 + v1)/8) <= ((((v0 - 1) + v1)/8) - 1))
"(max(0, min(((max(min((v0*64) + v1, min(v2 + v1, 2000) + -64), -63) - max(min((v0*64) + v1, min(v2 + v1, 2063) + -64), 0))/32) + 1, (0 + ((v3 + 95)/32)) - 1) + 1) <= 0)"
(((v0 + v1) + 110) == ((((v0 + v1) + 110) + 23) - 1))
(((((((uint1)1 && (((((v0*3) + 0) + v1) + -2) <= ((((v0*3) + 0) + v1) + -2))) && (((((v0*3) + ((3 + 0) - 1)) + v1) + -2) >= ((((v0*3) + ((3 + 0) - 1)) + v1) + -2))) && (((((((v2*2) + 0)*4) + -2) + 0) + 1) <= ((((((v2*2) + 0)*4) + 0) + -2) + 1))) && (((((((v2*2) + 1)*4) + ((6 + -2) - 1)) + 3) + 1) >= ((((((v2*2) + 1)*4) + ((4 + 0) - 1)) + ((6 + -2) - 1)) + 1))) && (((v3*32) + v4) <= ((v3*32) + v4))) && (((v3*32) + v4) >= ((v3*32) + v4)))
"(0 == ((0 + (63 - max(min(v0*16, 63), 47))) - 1))"
"(max(min(1999, (((v1 + v2)*4) + 4) - 1) + 1, min(max(0, (v1 + v2)*4), 4 + ((v1 + v2)*4))) <= min(max(0, (v1 + v2)*4), 4 + ((v1 + v2)*4)))"
(((((v0*63) + v1) + v2) + 4) < (((v0*63) + v1) + (v2 + 1)))
(((v0 + 28)/16) != 0)
(((v0*8) + -1) == ((((v0*8) + -1) + 13) - 1))
(((((((uint1)1 && (((((0*4) + v0) + 0) + -1) <= ((((0*4) + 0) + v0) + -1))) && (((((62*4) + v0) + 3) + -1) >= ((((62*4) + ((4 + 0) - 1)) + v0) + -1))) && (v1 <= v1)) && (v1 >= v1)) && (0 <= 0)) && (((48 + 0) - 1) >= ((48 + 0) - 1)))
(((((((uint1)1 && ((((((v0*2) + v1)*4) + v2) + 0) <= ((((v0*2) + v1)*4) + v2))) && ((((((v0*2) + v1)*4) + v2) + 3) >= (((((v0*2) + v1)*4) + 3) + v2))) && ((v3 + v4) <= (v3 + v4))) && ((v3 + v4) >= (v3 + v4))) && (v5 <= v5)) && (v5 >= v5))
"((1 - max(v0, 1)) > 2)"
"(max(((v0 % 4) + 15)/4, ((((min(v1*8, 117) + v0) + 11)/4) - min((min(v1*8, 117) + v0)/4, ((v0 + 7)/4) + (v1*2))) + 1) <= 1024)"
(((v0 + 267)/250) != 0)
"((((v0*63) + (v1 + v2)) + -11) == (((((v0*63) + (v1 + v2)) + -11) + (143 - max(v0*63, 62))) - 1))"
(v0 >= ((v0 - 1) + 1))
"(max(min(((v1 + v2) + -1)/8, ((v4 + -1) + (min(v3, 8) + 6)) - 1) + 1, min(max((v2 + 7)/8, v4 + -1), (min(v3, 8) + 6) + (v4 + -1))) <= min(max((v2 + 7)/8, v4 + -1), (min(v3, 8) + 6) + (v4 + -1)))"
"(max(min(1999, (((v1*16) + v2) + 16) - 1) + 1, min(max(0, (v1*16) + v2), 16 + ((v1*16) + v2))) <= min(max(0, (v1*16) + v2), 16 + ((v1*16) + v2)))"
(v0 <= (((v0 - 1) + -5) - 1))
"(((((((uint1)1 && ((0 + ((min(max(v0*8, -5), (v0*8) + 4) + v1) + 3)) <= (((v0*8) + v1) + -2))) && ((3 + (((v0*8) + v1) + 7)) >= (((v0*8) + v1) + 10))) && (((min(v2, 4) + v3) + -6) <= ((min(v2, 4) + v3) + -6))) && (((v2 + v3) + 2) >= ((v2 + v3) + 2))) && (0 <= 0)) && (0 >= 0))"
((((v0*-48)/16)*16) == (v0*-48))
(((v0 + 180)/168) != 0)
(((v0 % 1000) + 999) >= 0)
((((v0*500)/500)*500) == (v0*500))
(((((((uint1)1 && (((0 + ((((v0*16) + v1)*4) + v2)) + -2) <= (((((v0*16) + v1)*4) + v2) + -2))) && (((3 + (((((v0*16) + v1)*4) + v2) + 8)) + -2) >= (((((v0*16) + v1)*4) + v2) + 6))) && (((((v3*63) + v4) + v5) + 3) <= ((((v3*63) + v4) + v5) + -2))) && (((((v3*63) + v4) + v5) + 3) >= ((((v3*63) + v4) + v5) + 3))) && (0 <= 0)) && (0 >= 0))
(((((v0*32) + v1) + v2) + -13) < ((((v0*32) + v1) + (v2 + 1)) + -25))
"(0 >= ((0 + ((max(min((min((((v0 + v1) + 3)/4) - (v2*126), (v1/4) + 125) - ((v1/4) + (v3*32)))*4, 122), -7) + 15)/4)) - 1))"
((10 - ((v0*673) + v1)) > (2009 - ((v0*673) + v1)))
"(max(min(min(((1998 - v2)/12) + (v3*-84), (min(v4 - (v3*1008), 998) + 6)/12), (0 + ((min(v4 - (v3*1008), 998) + 29)/12)) - 1) + 1, min(max((((9 - v2)/12) + (v3*-84)) + 1, 0), ((min(v4 - (v3*1008), 998) + 29)/12) + 0)) <= min(max((((9 - v2)/12) + (v3*-84)) + 1, 0), ((min(v4 - (v3*1008), 998) + 29)/12) + 0))"
(((v0 + v1) + -10) == ((((v0 + v1) + -10) + 143) - 1))
"(0 == ((0 + (286 - max(min(v0*36, 286), 250))) - 1))"
(((((v0 + v1) + v2) + v3) + v4) >= ((((((v0 - 1) + v1) + v2) + v3) + v4) + 1))
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && ((((v2*4) + v3) + v4) <= (((v2*4) + v3) + v4))) && ((((v2*4) + v3) + v4) >= (((v2*4) + v3) + v4))) && (v5 <= v5)) && (v5 >= v5))
"((((((max(min((((v0 % ((v1 + 499)/500))*-500) + v1)/128, 3), 0)*32) + ((v0 % ((v1 + 499)/500))*125))*-4)/4)*4) == (((max(min((((v0 % ((v1 + 499)/500))*-500) + v1)/128, 3), 0)*32) + ((v0 % ((v1 + 499)/500))*125))*-4))"
((((v0*-6)/2)*2) == (v0*-6))
"((((min(v0*14, 53) + v1) + v2) + 5) < (((min(v0*14, 53) + (v1 + 1)) + v2) + -4))"
(0 == ((0 + ((v0*64) + 90)) - 1))
((((v0*-16)/8)*8) == (v0*-16))
(((((((uint1)1 && ((v0 + 0) <= (0 + v0))) && ((v0 + 3) >= (((4 + 0) - 1) + v0))) && ((v1/250) <= ((0 + v1)/250))) && (((v1 + 124)/250) >= ((((125 + 0) - 1) + v1)/250))) && (v2 <= v2)) && (v2 >= v2))
"(0 == ((0 + (35 - max((v0 % 4)*9, 26))) - 1))"
"((((v0*91) + (min(v1*46, 45) + (min(v2*16, 30) + v3))) + v4) < (((v0*91) + (min(v1*46, 45) + (min(v2*16, 30) + (v3 + 1)))) + v4))"
((((v0*8) + v1) + 8) < ((((v0 + 1)*8) + v1) + -5))
"(((((((uint1)1 && ((((0*4) + ((v1*4) + ((v2*8) + v3))) + 0) <= ((v1*4) + ((v2*8) + v3)))) && (((((1 - max(v1, 1))*4) + ((v1*4) + ((v2*8) + v3))) + 3) >= (min(((v1*4) + ((v2*8) + v3)) - (max(v1, 1)*4), (v2*8) + v3) + 7))) && (v4 <= v4)) && (v4 >= v4)) && (v5 <= v5)) && (v5 >= v5))"
(((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && (0 <= 0)) && (0 >= 0)) && (((((v1*8) + 0)*4) + 0) <= (v1*32))) && (((((v1*8) + 7)*4) + 3) >= ((v1*32) + 31)))
"(max(0, min(((v0 % 4) + 155)/16, (0 + 11) - 1) + 1) <= 0)"
((((-40 - (v0 % 4))/8) + (((v0 % 4) + 63)/8)) <= ((-40 - (v0 % 4))/8))
"(max(min(min(min(min(min((v2/252) + -1, (v2/252) + -1), (min(min(2251 - v1, v2), ((v3 + v4) - v1) + 251)/252) + -1), (1748 - v1)/252), (1748 - v1)/252), (0 + ((v2 + 251)/252)) - 1) + 1, min(max(max(max(0 - (v1/252), 0 - (v1/252)), max(((v4 - v1) + 251)/252, 0 - (v1/252))), 0), ((v2 + 251)/252) + 0)) <= min(max(max(max(0 - (v1/252), 0 - (v1/252)), max(((v4 - v1) + 251)/252, 0 - (v1/252))), 0), ((v2 + 251)/252) + 0))"
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((1*4) + v0) + 3) >= (((1*4) + ((4 + 0) - 1)) + v0))) && ((((v1*4) + v2) + v3) <= (((v1*4) + v2) + v3))) && ((((v1*4) + v2) + v3) >= (((v1*4) + v2) + v3))) && (v4 <= v4)) && (v4 >= v4))
"(((((((uint1)1 && (((0 + (((v1*4) + (min(v2*64, 188) + v3)) + -2)) + -5) <= (-2 + (((v1*4) + (min(v2*64, 188) + v3)) + -5)))) && (((3 + (((((69 - max(v1*4, 66))/4)*4) + ((v1*4) + (min(v2*64, 188) + v3))) + 1)) + -5) >= (((4 + -2) - 1) + (min(((v1*4) + (min(v2*64, 188) + v3)) - max(v1*4, 66), min(v2*64, 188) + v3) + 64)))) && ((max((max(v4*63, 943) + (min(v4*63, 943) + v5)) + -943, (v4*63) + v5) + -7) <= (max(max(v4*63, 943) + -1007, -2) + (((v4*63) + v5) + -5)))) && (((min(v4*63, 943) + v5) + 58) >= (1 + (min(((v4*63) + v5) - max(v4*63, 943), v5) + 1000)))) && (v6 <= v6)) && (v6 >= v6))"
"((((max(min((v1*-1000) + (((v2/1000)*-1000) + v2), 1000), 0) + (v1*1000))/4)*4) == (max(min((v1*-1000) + (((v2/1000)*-1000) + v2), 1000), 0) + (v1*1000)))"
((v0 + 4) < (v0 + 1))
"(0 == ((0 + (510 - max(min(v0, 255)*2, 507))) - 1))"
(0 >= ((0 + (((((v0 + v1) + 2) % 4) + 78)/16)) - 1))
((((v0*8) + 19)/9) != 0)
"(((((((uint1)1 && ((((0*4) + v0) + 0) <= v0)) && ((((62*4) + v0) + 3) >= (v0 + 251))) && ((max(min((v1/4)*4, 1999), v2 + 6) + -5) <= (v2 + -2))) && ((v2 + 1) >= (v2 + 1))) && (v3 <= v3)) && (v3 >= v3))"
"(((((((uint1)1 && (((((min(v0*16, 109) + -5) + v1) + 0) + 3) <= ((min(v0*16, 109) + v1) + -2))) && (((((min(v0*16, 109) + 15) + v1) + 3) + 3) >= ((min(v0*16, 109) + v1) + 18))) && (((v2 + v3) + 3) <= ((v2 + v3) + -2))) && (((v2 + v3) + 3) >= ((v2 + v3) + 3))) && (0 <= 0)) && (0 >= 0))"
"(((min(v0*32, 968)/4)*4) == min(v0*32, 968))"
(((v0*2) + 2) != 0)
(((v0 + v1) + -7) < (((v0 + 1) + v1) + -7))
(((((-136 - ((v0 + v1) % 8))/8)*2) + -8) == ((((((-136 - ((v0 + v1) % 8))/8)*2) + -8) + ((((((v0 + v1) % 8) + 151)/8)*2) + 9)) - 1))
(((v0 + v1) + -6) == ((((v0 + v1) + -6) + 131) - 1))
"((v0 + 1) < (min(max(min((v1/4)*4, 1999), (v0 + 1) + 6), (v0 + 1) + 3) + -5))"
"(((((((uint1)1 && ((0 + ((min(v1*32, 468) + (v2*8)) + v3)) <= ((min(v1*32, 468) + (v2*8)) + v3))) && ((3 + (((min(v1*32, 468) + (v2*8)) + v3) + 4)) >= ((min(v1*32, 468) + ((v2*8) + 7)) + v3))) && ((v4 + v5) <= (v4 + v5))) && ((v4 + v5) >= (v4 + v5))) && (v6 <= v6)) && (v6 >= v6))"
(((((((uint1)1 && ((((0*4) + ((v1*8) + ((v2*16) + v3))) + 0) <= (((v2*16) + v3) + (v1*8)))) && ((((0*4) + (((v1*8) + ((v2*16) + v3)) + 4)) + 3) >= (((v2*16) + v3) + ((v1*8) + 7)))) && ((((v4*1000) + v5) + v6) <= (((v4*1000) + v5) + v6))) && ((((v4*1000) + v5) + v6) >= (((v4*1000) + v5) + v6))) && (0 <= 0)) && (((19 + 0) - 1) >= ((19 + 0) - 1)))
"(((min(v0, 1)*9) + (min(v1*2, 7) + v2)) < ((min(v0, 1)*9) + (min(v1*2, 7) + (v2 + 1))))"
"(((((((uint1)1 && (((((0*4) + (((min(v0, 48) + v1)/4) + (v2*4))) + 0) + -14) <= ((0 + (((min(v0, 48) + v1)/4) + (v2*4))) + -14))) && (((((0*4) + (((min(v0, 48) + v1)/4) + (v2*4))) + 3) + -14) >= ((((4 + 0) - 1) + (((min(v0, 48) + v1)/4) + (v2*4))) + -14))) && ((v3*4) <= (v3*4))) && ((v3*4) >= (v3*4))) && (v4 <= v4)) && (v4 >= v4))"
"(max(min(min((((v1 + v2) - (max(v3*500, -7) + v4)) + -66)/64, ((min(((v3*500) + v4) + 439, v1 + v2) - (max(v3*500, -7) + v4)) + -3)/64), (0 + ((min(v3*500, -7) + 570)/64)) - 1) + 1, min(max(((v2 - (max(v3*500, -7) + v4)) + 61)/64, 0), ((min(v3*500, -7) + 570)/64) + 0)) <= min(max(((v2 - (max(v3*500, -7) + v4)) + 61)/64, 0), ((min(v3*500, -7) + 570)/64) + 0))"
"(((((((uint1)1 && ((0 + ((min(v0*64, 936) + (v1*4)) + v2)) <= ((min(v0*64, 936) + (v1*4)) + v2))) && ((3 + ((min(v0*64, 936) + (v1*4)) + v2)) >= (((min(v0*64, 936) + (v1*4)) + 3) + v2))) && ((v3 + v4) <= (v3 + v4))) && ((v3 + v4) >= (v3 + v4))) && (v5 <= v5)) && (v5 >= v5))"
"(max(0, min(((max(min(v0, 91), -33) - max(min(v0, 124), 0)) + 30)/4, (0 + ((v1 + 37)/4)) - 1) + 1) <= 0)"
"(max(min(min(min(1999, 1999), min(v1 + v2, 2000) + -1), ((((v3*252) + v4) + -2) + 255) - 1) + 1, min(max(max(max(0, 0), max(v2, 0)), ((v3*252) + v4) + -2), 255 + (((v3*252) + v4) + -2))) <= min(max(max(max(0, 0), max(v2, 0)), ((v3*252) + v4) + -2), 255 + (((v3*252) + v4) + -2)))"
(((((((uint1)1 && (0 <= 0)) && (0 >= 0)) && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (((v2*16) + v3) <= ((v2*16) + v3))) && (((v2*16) + v3) >= ((v2*16) + v3)))
"(((((((uint1)1 && ((max(min((v0/4)*4, 1999), v1 + 4) + -3) <= (-3 + v1))) && ((v1 + 1) >= (((5 + -3) - 1) + v1))) && (((((0*4) + v2) + 0) + -3) <= (-3 + v2))) && (((((4*4) + v2) + 3) + -3) >= (((5 + -3) - 1) + (v2 + 15)))) && (v3 <= v3)) && (v3 >= v3))"
(((v0 + v1) + 116) == ((((v0 + v1) + 116) + 9) - 1))
"((max(v0, 4) + 9) >= 0)"
"(max(min(30 - (v0*2), (0 + 6) - 1) + 1, min(max(1 - (v0*2), 0), 6 + 0)) <= min(max(1 - (v0*2), 0), 6 + 0))"
(((((((uint1)1 && ((0 + ((((v0*8) + v1)*8) + v2)) <= ((((v0*8) + v1)*8) + v2))) && ((3 + (((((v0*8) + v1)*8) + v2) + 4)) >= (((((v0*8) + v1)*8) + v2) + 7))) && ((v3/8) <= (v3/8))) && (((v3 + 1007)/8) >= ((v3 + 1007)/8))) && (v4 <= v4)) && (v4 >= v4))
(((v0 + 18)/16) != 0)
"(((((((uint1)1 && ((0 + (min(v0*252, 248) + v1)) <= (min(v0*252, 248) + v1))) && ((3 + ((min(v0*252, 248) + v1) + 248)) >= ((min(v0*252, 248) + 251) + v1))) && ((v2 + v3) <= (v2 + v3))) && ((v2 + v3) >= (v2 + v3))) && (0 <= 0)) && (0 >= 0))"
"(v0 < min(max(v1 + -8, v0 + 1), (v0 + 1) + -5))"
"(((((((uint1)1 && ((((v0*4) + ((v1*2) + v2)) + v3) <= (((v0*4) + ((v1*2) + v2)) + v3))) && ((((v0*4) + ((v1*2) + v2)) + v3) >= (((v0*4) + ((v1*2) + v2)) + v3))) && ((v4 + 0) <= (0 + v4))) && ((v4 + 3) >= (((4 + 0) - 1) + v4))) && ((min(v5*35, 102) + v6) <= (min(v5*35, 102) + v6))) && ((min(v5*35, 102) + v6) >= (min(v5*35, 102) + v6)))"
(((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && (((((0*4) + ((v1*128) + v2)) + 0) + -10) <= (((v1*128) + v2) + -10))) && (((((0*4) + (((v1*128) + v2) + 124)) + 3) + -10) >= ((((v1*128) + v2) + 127) + -10))) && (v3 <= v3)) && (v3 >= v3))
"(((((((uint1)1 && ((((0*4) + ((((min(v0, 4) + v1) + -4)/16) + (v2*4))) + 0) <= (0 + ((((min(v0, 4) + v1) + -4)/16) + (v2*4))))) && ((((0*4) + ((((min(v0, 4) + v1) + -4)/16) + (v2*4))) + 3) >= (((4 + 0) - 1) + ((((min(v0, 4) + v1) + -4)/16) + (v2*4))))) && (v3 <= v3)) && (v3 >= v3)) && ((((v4*2) + v5)*4) <= (((v4*2) + v5)*4))) && (((((v4*2) + v5)*4) + 3) >= ((((v4*2) + v5)*4) + 3)))"
((v0 + -7) == (((v0 + -7) + 4) - 1))
(0 == ((0 + ((v0*4) + 52)) - 1))
"((((max((v0*-125) + ((125 + ((v1 + min(((v2 + v3)*1000) + 1000, v4))/4)) + -252), ((v1 + min(((v2 + v3)*1000) + 1000, v4)) + -965)/4)*-4)/4)*4) == (max((v0*-125) + ((125 + ((v1 + min(((v2 + v3)*1000) + 1000, v4))/4)) + -252), ((v1 + min(((v2 + v3)*1000) + 1000, v4)) + -965)/4)*-4))"
"((max(v0*128, 881) + -1018) == (((max(v0*128, 881) + -1018) + (1021 - max(v0*128, 881))) - 1))"
"(max(min((115 - v0)/12, (0 + 4) - 1) + 1, min(max((13 - v0)/12, 0), 4 + 0)) <= min(max((13 - v0)/12, 0), 4 + 0))"
"(((((((uint1)1 && ((((v0*32) + v1) + v2) <= (((v0*32) + v1) + v2))) && ((((v0*32) + v1) + v2) >= (((v0*32) + v1) + v2))) && ((((((v3*2) + v4)*4) + v5) + 0) <= ((((v3*2) + v4)*4) + v5))) && ((((((v3*2) + v4)*4) + v5) + 3) >= (((((v3*2) + v4)*4) + 3) + v5))) && ((min(v6*5, 13) + v7) <= (min(v6*5, 13) + v7))) && ((min(v6*5, 13) + v7) >= (min(v6*5, 13) + v7)))"
(((((((uint1)1 && ((0 + (v0 + -4)) <= (0 + (v0 + -4)))) && ((3 + (v0 + 28)) >= (((4 + 0) - 1) + (v0 + 28)))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (0 <= 0)) && (2 >= ((3 + 0) - 1)))
((((v0*2) + v1) + v2) < (((v0*2) + (v1 + 1)) + v2))
((v0*4) >= (((v0*4) + 12) - 1))
"(((((min(min((min(((v0 % ((v1/3) + 1))*24) + (((v2/250)*8) + -5), ((((v3 + v2) + -1)/250)*8) + -21)/8)*64, (max(((min(((v0 % ((v1/3) + 1))*24) + (((v2/250)*8) + -5), ((((v3 + v2) + -1)/250)*8) + -21)/8)*8) + 1, min(((v0 % ((v1/3) + 1))*24) + (((v2/250)*8) + -5), ((((v3 + v2) + -1)/250)*8) + -21))*8) + 193)*4, ((min(((v0 % ((v1/3) + 1))*24) + (((v2/250)*8) + -5), ((((v3 + v2) + -1)/250)*8) + -21)/8)*256) + 3) + -20)*-1)/4)*4) == ((min(min((min(((v0 % ((v1/3) + 1))*24) + (((v2/250)*8) + -5), ((((v3 + v2) + -1)/250)*8) + -21)/8)*64, (max(((min(((v0 % ((v1/3) + 1))*24) + (((v2/250)*8) + -5), ((((v3 + v2) + -1)/250)*8) + -21)/8)*8) + 1, min(((v0 % ((v1/3) + 1))*24) + (((v2/250)*8) + -5), ((((v3 + v2) + -1)/250)*8) + -21))*8) + 193)*4, ((min(((v0 % ((v1/3) + 1))*24) + (((v2/250)*8) + -5), ((((v3 + v2) + -1)/250)*8) + -21)/8)*256) + 3) + -20)*-1))"
(((v0 + v1) + v2) >= (((((v0 - 1) + v1) + v2) + 5) + 1))
"(max(0, min(((max(min(((v0*32) + v1)*2, 435), -64) - max(min(((v0*32) + v1)*2, 499), 0)) + 32)/33, (0 + ((v2 + 97)/33)) - 1) + 1) <= 0)"
(((((v0*126) + v1) + v2) + -4) < ((((v0*126) + v1) + (v2 + 1)) + -7))
"(0 == ((0 + (11 - max((v0 % 3)*4, 7))) - 1))"
((v0 + 9) != 0)
"(((((((uint1)1 && ((((v0*8) + v1) + v2) <= ((((v0*8) + v1) + v2) + -1))) && ((((v0*8) + v1) + v2) >= (((v0*8) + v1) + v2))) && ((0 + ((min(v3, 0) + v4) + -1)) <= ((0 + (min(v3, 0) + v4)) + -1))) && ((3 + min((((max(v3, 0)/4)*4) + (min(v3, 0) + v4)) + 3, v3 + v4)) >= ((3 + ((((max(v3, 0)/4)*4) + (min(v3, 0) + v4)) + 4)) + -1))) && (0 <= 0)) && (2 >= 2))"
(((((((uint1)1 && ((((v0 + v1) + v2) % 8) <= (((v0 + v1) + v2) % 8))) && ((((v0 + v1) + v2) % 8) >= (((v0 + v1) + v2) % 8))) && ((((((v3*8) + v4) + v5) + 1) % 8) <= (((((v3*8) + v4) + v5) + 1) % 8))) && ((((((v3*8) + v4) + v5) + 1) % 8) >= (((((v3*8) + v4) + v5) + 1) % 8))) && ((((v6 % 16)*4) + 0) <= (((v6 % 16)*4) + 0))) && ((((v6 % 16)*4) + 3) >= (((v6 % 16)*4) + ((4 + 0) - 1))))
"(max(0, min(((v0 % 8) + 951)/64, (0 + 16) - 1) + 1) <= 0)"
"(((((((uint1)1 && ((0 + (min(v0*252, 748) + v1)) <= (min(v0*252, 748) + v1))) && ((3 + ((min(v0*252, 748) + v1) + 248)) >= ((min(v0*252, 748) + 251) + v1))) && ((0 + v2) <= (0 + v2))) && ((((125 + 0) - 1) + v2) >= (((125 + 0) - 1) + v2))) && (v3 <= v3)) && (v3 >= v3))"
"(max(min(min((((v1 + v2) - max(min(v3, 1999), 0))/32) + -1, ((min(max(min(v3, 1500), -499) + 469, v1 + v2) - max(min(v3, 1999), 0)) + -1)/32), (0 + ((v4 + 531)/32)) - 1) + 1, min(max(((v2 - max(min(v3, 1999), 0)) + 31)/32, 0), ((v4 + 531)/32) + 0)) <= min(max(((v2 - max(min(v3, 1999), 0)) + 31)/32, 0), ((v4 + 531)/32) + 0))"
(((((((uint1)1 && (((((v0*12) + v1)*4) + 0) <= (((0 + ((v0*12) + v1))*4) + 0))) && (((((v2*4) + ((v0*12) + v1))*4) + 15) >= (((3 + ((v2*4) + ((v0*12) + v1)))*4) + 3))) && (((v3*4) + ((v4*2) + v5)) <= ((v3*4) + ((v4*2) + v5)))) && (((v3*4) + ((v4*2) + v5)) >= ((v3*4) + ((v4*2) + v5)))) && (0 <= 0)) && (19 >= 19))
((v0 + 14) != 0)
(((v0 + 17)/4) != 0)
"(((max(v0*12, -3) + v1) + 1) == ((((max(v0*12, -3) + v1) + 1) + (min(v0*12, -3) + 15)) - 1))"
"((((max(min(v1*8, 113), -11) + (max(min(v1*8, 125), 1)*-1))/4)*4) == (max(min(v1*8, 113), -11) + (max(min(v1*8, 125), 1)*-1)))"
"(((((((uint1)1 && (((0 + (((v0*8) + v1) + -9)) + 5) <= (((v0*8) + v1) + -4))) && (((3 + (((v0*8) + v1) + 20)) + 5) >= (((v0*8) + v1) + 12))) && ((max(v2 + 16, v3) + -11) <= (v2 + -4))) && ((v2 + 5) >= (v2 + 5))) && (0 <= 0)) && (2 >= 2))"
"(max(0, min((0 - min(min(1999 - (v0*4), (v0*4) + 3), 0))/4, (0 + ((max(v1, 0) + 7)/4)) - 1) + 1) <= 0)"
((((v0/4) + (v1*3)) + 2) < ((v0/4) + ((v1 + 1)*3)))
(((((((uint1)1 && ((0 + ((v0*8) + v1)) <= ((v0*8) + v1))) && ((3 + (((v0*8) + v1) + 4)) >= (((v0*8) + 7) + v1))) && ((0 + v2) <= (0 + v2))) && ((((125 + 0) - 1) + v2) >= (((125 + 0) - 1) + v2))) && (v3 <= v3)) && (v3 >= v3))
"(((((((uint1)1 && (((0 + (min(v0, 4) + v1)) + -4) <= (0 + ((min(v0, 4) + v1) + -4)))) && (((3 + ((((max(v0, 4) + -1)/4)*4) + (min(v0, 4) + v1))) + -4) >= (((4 + 0) - 1) + ((v0 + v1) + -4)))) && (((((v2*2) + v3)*4) + v4) <= ((((v2*2) + v3)*4) + v4))) && ((((((v2*2) + v3)*4) + 3) + v4) >= (((((v2*2) + v3)*4) + 3) + v4))) && (v5 <= v5)) && (v5 >= v5))"
((((v0*8)/2)*2) == (v0*8))
"(max(0, min(6, (0 + ((((((v0 % 250) + 124)/250)*64) + 119)/15)) - 1) + 1) <= 0)"
"(((min(v0 - v1, 13)*32) + -416) == 2)"
"(max(min(min(min((((v4 + v5)/4) - (v6*2)) + 4, ((v3 - v6)*2) + 7), ((min((v3*8) + 9, v4 + v5) + 19)/4) - (v6*2)), (0 + ((min(((min(max(min((v8/125)*8, 125), 1) + (v10*6), max(min((((v7 + v8) + -1)/125)*8, 113), -11) + 7)*2) - min((max(min((v8/125)*8, 125), 1) + (v10*6))*2, 251)) - (v9*4), -8)*2) + 24)) - 1) + 1, min(max((((v5 + 19)/4) - (v6*2)) + 1, 0), ((min(((min(max(min((v8/125)*8, 125), 1) + (v10*6), max(min((((v7 + v8) + -1)/125)*8, 113), -11) + 7)*2) - min((max(min((v8/125)*8, 125), 1) + (v10*6))*2, 251)) - (v9*4), -8)*2) + 24) + 0)) <= min(max((((v5 + 19)/4) - (v6*2)) + 1, 0), ((min(((min(max(min((v8/125)*8, 125), 1) + (v10*6), max(min((((v7 + v8) + -1)/125)*8, 113), -11) + 7)*2) - min((max(min((v8/125)*8, 125), 1) + (v10*6))*2, 251)) - (v9*4), -8)*2) + 24) + 0))"
((v0 + 3) < ((v0 + 1) + -2))
((((v0*-4)/2)*2) == (v0*-4))
"(((((((uint1)1 && (((0 + (max(v0*8, -9) + v1)) + 2) <= ((0 + ((v0*8) + v1)) + -7))) && (((3 + ((((min(v0*8, -9)/4)*4) + (max(v0*8, -9) + v1)) + 16)) + 2) >= ((3 + (((v0*8) + v1) + 16)) + -7))) && (max(v2 + -16, v2 + -7) <= (v2 + -7))) && ((v2 + 126) >= (v2 + 126))) && (0 <= 0)) && (1 >= 1))"
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((15*4) + v0) + 3) >= (((15*4) + ((4 + 0) - 1)) + v0))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (v3 <= v3)) && (v3 >= v3))
"(max(min(min(((v1 + v2)/4) + 1, ((v1 + v2) + -2)/4), ((((v3/8)*64) + -3) + (((v3 % 8)*8) + 33)) - 1) + 1, min(max((v2/4) + 2, ((v3/8)*64) + -3), (((v3 % 8)*8) + 33) + (((v3/8)*64) + -3))) <= min(max((v2/4) + 2, ((v3/8)*64) + -3), (((v3 % 8)*8) + 33) + (((v3/8)*64) + -3)))"
((((v0*-76)/4)*4) == (v0*-76))
(((v0 + 69)/64) != 0)
((((v0 + v1) + v2) + v3) >= (((((v0 - 1) + v1) + v2) + v3) + 1))
(((v0 + 65)/63) != 0)
"((max(v0*16, -22) + 22) >= (((max(v0*16, -22) + 22) + (max(min(v0*16, -22), -23) + 23)) - 1))"
"(((((((uint1)1 && ((0 + (((min(v1, 4) + v2) + -36)/16)) <= (((0*4) + (((min(v1, 4) + v2) + -36)/16)) + 0))) && ((3 + ((((min(v1, 4) + v2) + -36)/16) + ((((((((min(v1, 4) + v2) + 44)/16) + ((v3/4)*4)) - (((min(v1, 4) + v2) + -36)/16)) + 3)/4)*4))) >= ((((min(((((min(v1, 4) + v2) + 44)/16) + ((v3/4)*4)) - (((min(v1, 4) + v2) + -84)/16), 0)/4)*4) + max(((min(v1, 4) + v2) + -36)/16, (((min(v1, 4) + v2) + 92)/16) + ((v3/4)*4))) + 3))) && (((v4*8) + -1) <= ((v4*8) + -1))) && (((v4*8) + 11) >= ((v4*8) + 11))) && ((((v5*2) + v6)*8) <= (((v5*2) + v6)*8))) && (((((v5*2) + v6)*8) + 7) >= ((((v5*2) + v6)*8) + 7)))"
(((((((uint1)1 && (((0 + v0) + -2) <= ((0 + v0) + -2))) && (((((3 + 0) - 1) + v0) + -2) >= ((((3 + 0) - 1) + v0) + -2))) && (v1 <= v1)) && (v1 >= v1)) && ((((v2*4) + v3) + 0) <= (((v2*4) + v3) + 0))) && ((((v2*4) + v3) + 3) >= (((v2*4) + v3) + ((4 + 0) - 1))))
"(((((((uint1)1 && (((((v0*500) + v1)/16) + -2) <= ((0 + (((v0*500) + v1)/16)) + -2))) && (((((v0*500) + v1) + 547)/16) >= ((3 + ((((v0*500) + v1)/16) + ((((((v0*500) + v1) % 16) + 499)/64)*4))) + 3))) && ((max(v2*8, ((v3 + v2)*8) + 5) + -1) <= (-2 + (((v3 + v2)*8) + 1)))) && ((((v3 + v2)*8) + 11) >= (3 + (((v3 + v2)*8) + 8)))) && (((0*4) + 0) <= 0)) && (((15*4) + 3) >= 63))"
(((((v0*63) + v1) + v2) + 3) < ((((v0*63) + v1) + (v2 + 1)) + -2))
((((v0*-6)/3)*3) == (v0*-6))
"(max(0, min(33 - ((v0 % 2)*18), (0 + 18) - 1) + 1) <= 0)"
(((((((uint1)1 && ((0 + ((v0*16) + v1)) <= ((v0*16) + v1))) && ((3 + (((v0*16) + v1) + 12)) >= (((v0*16) + v1) + 15))) && ((v2/8) <= (v2/8))) && (((v2 + 132)/8) >= ((v2 + 132)/8))) && (v3 <= v3)) && (v3 >= v3))
(((((v0 % (((v1*64) + 216)/112))*112)/8)*8) == ((v0 % (((v1*64) + 216)/112))*112))
((((v0*4) + 306)/251) != 0)
"(((max(min(v0, 25), 10)*8) + -204) >= ((((max(min(v0, 25), 10)*8) + -204) + (208 - (max(min(v0, 25), 10)*8))) - 1))"
"(-127 == ((-127 + (134 - max(v0*4, 3))) - 1))"
"(max(min(1999, (((v1/4)*4) + 128) - 1) + 1, min(max(0, (v1/4)*4), 128 + ((v1/4)*4))) <= min(max(0, (v1/4)*4), 128 + ((v1/4)*4)))"
"(((max(min((v1*-64) + (max(max(-127 - (((v2 + v3)/4)*4), (((v2 + v3)/4)*4) + -1999), 0) + (v4*-32)), -96), -132)/4)*4) == max(min((v1*-64) + (max(max(-127 - (((v2 + v3)/4)*4), (((v2 + v3)/4)*4) + -1999), 0) + (v4*-32)), -96), -132))"
"(max(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(1, 1), 1), 1), 1), 1), 1), 1), (217 - v1)/32), (217 - v1)/32), (218 - v1)/32), (218 - v1)/32), (219 - v1)/32), (219 - v1)/32), (220 - v1)/32), (220 - v1)/32), (0 + 2) - 1) + 1, min(max(max(max(max(0 - (v1/32), (28 - v1)/32), (29 - v1)/32), (30 - v1)/32), 0), 2 + 0)) <= min(max(max(max(max(0 - (v1/32), (28 - v1)/32), (29 - v1)/32), (30 - v1)/32), 0), 2 + 0))"
"(max(0, min((490 - (((min((v0*500) + 500, v1) + v2) + 7) % 8))/32, (0 + (((v3 % 8) + 539)/32)) - 1) + 1) <= 0)"
(((((((uint1)1 && (((((v0*4) + v1) + 0) + -1) <= ((((v0*4) + 0) + v1) + -1))) && (((((v0*4) + v1) + 3) + -1) >= ((((v0*4) + ((4 + 0) - 1)) + v1) + -1))) && (0 <= 0)) && (0 >= 0)) && (0 <= 0)) && (((48 + 0) - 1) >= ((48 + 0) - 1)))
(((((((uint1)1 && (0 <= 0)) && (0 >= 0)) && (((((0*4) + ((v0*4) + ((v1*12) + v2))) + 0) + -1) <= (((v0*4) + ((v1*12) + v2)) + -1))) && (((((0*4) + ((v0*4) + ((v1*12) + v2))) + 3) + -1) >= ((((v0*4) + ((v1*12) + v2)) + 3) + -1))) && (v3 <= v3)) && (v3 >= v3))
"((max(v0, 1000) + 8) >= 0)"
"(max(min(248, (v1 + 32) - 1) + 1, min(max(0, v1), 32 + v1)) <= min(max(0, v1), 32 + v1))"
"((((min((v0*32) + ((v1 + min((v2 + v3)*500, v4 + -500))/4), ((v1 + min((v2 + v3)*500, v4 + -500)) + 255)/4)*-4)/4)*4) == (min((v0*32) + ((v1 + min((v2 + v3)*500, v4 + -500))/4), ((v1 + min((v2 + v3)*500, v4 + -500)) + 255)/4)*-4))"
"(((((((uint1)1 && (((0 + ((v0*4) + v1)) + -2) <= (((v0*4) + v1) + -2))) && (((2 + (((v0*4) + v1) + 6)) + -2) >= (((4 + ((v0*4) + v1)) - 1) + 3))) && ((max(v2*8, (v3*8) + 5) + -1) <= (-2 + ((v3*8) + 1)))) && (((v3*8) + 11) >= (3 + ((v3*8) + 8)))) && ((((0*4) + (v4*32)) + 0) <= (((0*4) + (v4*32)) + 0))) && ((((2*4) + ((v4*32) + 24)) + 3) >= (((2*4) + ((v4*32) + 24)) + 3)))"
(((((v0 + v1)/4)*4) + -17) == ((((((v0 + v1)/4)*4) + -17) + ((v2*4) + 24)) - 1))
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && ((v2*4) <= (v2*4))) && ((v2*4) >= (v2*4))) && (v3 <= v3)) && (v3 >= v3))
(((((v0 % (((v1*64) + 216)/112))*112)/4)*4) == ((v0 % (((v1*64) + 216)/112))*112))
(((((((uint1)1 && ((-10 + v0) <= (-10 + v0))) && ((((13 + -10) - 1) + v0) >= (((13 + -10) - 1) + v0))) && ((((0*4) + ((v1*8) + v2)) + 0) <= ((v1*8) + v2))) && ((((0*4) + (((v1*8) + v2) + 4)) + 3) >= (((v1*8) + v2) + 7))) && (v3 <= v3)) && (v3 >= v3))
"(((((((uint1)1 && ((0 + (((min(v0, 4) + v1) + -36)/16)) <= ((0 + (((min(v0, 4) + v1) + -4)/16)) + -2))) && ((3 + ((((min(v0, 4) + v1) + -36)/16) + ((((((((min(v0, 4) + v1) + 44)/16) + ((v2/4)*4)) - (((min(v0, 4) + v1) + -36)/16)) + 3)/4)*4))) >= ((3 + ((((min(v0, 4) + v1) + -4)/16) + ((v2/4)*4))) + 3))) && ((max((v3/125)*8, (v4*8) + 5) + -1) <= (-2 + ((v4*8) + 1)))) && (((v4*8) + 11) >= (3 + ((v4*8) + 8)))) && (0 <= 0)) && (63 >= 63))"
"((((((min(v0*125, v1 + -125) + v2)/250)*8)/8)*8) == (((min(v0*125, v1 + -125) + v2)/250)*8))"
"(((((((uint1)1 && ((0 + ((min(max(v0*8, -9), (v0*8) + 4) + v1) + 5)) <= ((0 + (((v0*8) + v1) + -9)) + 5))) && ((3 + (min((((min(v0*8, -9)/4)*4) + (max(v0*8, -9) + v1)) + 12, (v0*8) + v1) + 9)) >= ((3 + (((v0*8) + v1) + 20)) + 5))) && ((v2 + -11) <= (v2 + -11))) && ((v2 + 131) >= (v2 + 131))) && (0 <= 0)) && (2 >= 2))"
"(((min((v0*16) + ((v1*8) + -5), (v2*8) + -13)/8)*8) == min((v0*16) + ((v1*8) + -5), (v2*8) + -13))"
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (v2 <= v2)) && (v2 >= v2)) && (v3 <= v3)) && (v3 >= v3))
"(max(min(min(min(1999, min(v1 + v2, 2000) + -1), min(v1 + v2, 2000) + -1), ((v3 + -2) + 130) - 1) + 1, min(max(max(max(max(max(max(0, 0), 0), max(v2, 0)), max(v2, 0)), max(v2, 0)), v3 + -2), 130 + (v3 + -2))) <= min(max(max(max(max(max(max(0, 0), 0), max(v2, 0)), max(v2, 0)), max(v2, 0)), v3 + -2), 130 + (v3 + -2)))"
(((((((uint1)1 && ((((((v0*16) + 0)*4) + v1) + 0) <= ((v0*64) + v1))) && ((((((v0*16) + 15)*4) + v1) + 3) >= (((v0*64) + 63) + v1))) && ((v2 + v3) <= (v2 + v3))) && ((v2 + v3) >= (v2 + v3))) && (v4 <= v4)) && (v4 >= v4))
(((((((uint1)1 && (((((v0*4) + v1) + -2) + 0) <= ((((v0*4) + 0) + v1) + -2))) && (((((v0*4) + v1) + ((6 + -2) - 1)) + 3) >= ((((v0*4) + ((4 + 0) - 1)) + v1) + ((6 + -2) - 1)))) && (((v2 + v3) % 8) <= ((v2 + v3) % 8))) && (((v2 + v3) % 8) >= ((v2 + v3) % 8))) && (((v4*2) + v5) <= ((v4*2) + v5))) && (((v4*2) + v5) >= ((v4*2) + v5)))
((((v0 + v1) + v2)/125) <= (((((v0 - 1) + v1) + v2)/125) - 1))
(((((((uint1)1 && (((v0 + v1) + -2) <= ((v0 + v1) + -2))) && (((v0 + v1) + -2) >= ((v0 + v1) + -2))) && ((((0*4) + (v2/4)) + 0) <= (0 + (v2/4)))) && ((((0*4) + ((v2/4) + ((v3/4)*4))) + 3) >= (((4 + 0) - 1) + ((v2/4) + ((v3/4)*4))))) && (((v4*3) + v5) <= ((v4*3) + v5))) && (((v4*3) + v5) >= ((v4*3) + v5)))
((((v0*16) + ((v1*4) + v2)) + v3) < (((v0*16) + ((v1*4) + (v2 + 1))) + v3))
"((max((((v0 % 4) + 67)/4)*4, ((((min(v1*64, 936) + v0) + 67)/4)*4) - min(((min(v1*64, 936) + v0)/4)*4, ((((v0 + 3)/4) + (v1*16))*4) + 11)) + 11) <= 1024)"
(((((v0*2) + v1) + v2) + -1) < ((((v0*2) + v1) + (v2 + 1)) + -1))
(((((v0 % ((v1/64) + 1))*-64)/4)*4) == ((v0 % ((v1/64) + 1))*-64))
"(max(min(15 - (v0*2), (0 + 2) - 1) + 1, min(max(0 - (v0*2), 0), 2 + 0)) <= min(max(0 - (v0*2), 0), 2 + 0))"
(((((((uint1)1 && ((((((v0*8) + v1)*4) + v2) + 0) <= ((((v0*8) + v1)*4) + v2))) && ((((((v0*8) + v1)*4) + v2) + 3) >= (((((v0*8) + v1)*4) + 3) + v2))) && ((v3 + v4) <= (v3 + v4))) && ((v3 + v4) >= (v3 + v4))) && (v5 <= v5)) && (v5 >= v5))
(((v0 + v1)/4) <= ((((v0 - 1) + v1)/4) - 1))
(((((((uint1)1 && ((v0 + 0) <= (0 + v0))) && ((v0 + 3) >= (((4 + 0) - 1) + v0))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (v3 <= v3)) && (v3 >= v3))
(((((((uint1)1 && (((((0*4) + (((v0*1008) + v1) + -9)) + 0) + -2) <= (((v0*1008) + v1) + -11))) && (((((0*4) + (((v0*1008) + v1) + 1004)) + 3) + -2) >= (((v0*1008) + v1) + 1005))) && (((((v2*126) + v3) + v4) + -2) <= ((((v2*126) + v3) + v4) + -11))) && (((((v2*126) + v3) + v4) + -2) >= ((((v2*126) + v3) + v4) + -2))) && (0 <= 0)) && (2 >= 2))
((((v0 + v1) + v2)/4) <= (((((v0 - 1) + v1) + v2)/4) - 1))
"(((((min((v0*8) + ((v1*8)*8), (v2*64) + 81) - (v0*8))*4)/4)*4) == ((min((v0*8) + ((v1*8)*8), (v2*64) + 81) - (v0*8))*4))"
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= ((v0*4) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + v1) + 3))) && ((v2/8) <= (v2/8))) && (((v2 + 132)/8) >= ((v2 + 132)/8))) && (v3 <= v3)) && (v3 >= v3))
(((v0/32) + 1) != 0)
(((((((uint1)1 && (((0 + v0) + -1) <= ((0 + v0) + -1))) && (((3 + v0) + -1) >= ((((4 + 0) - 1) + v0) + -1))) && (((((0*2) + v1) + 0) + -1) <= ((0 + v1) + -1))) && (((((3*2) + v1) + 1) + -1) >= ((((8 + 0) - 1) + v1) + -1))) && (v2 <= v2)) && (v2 >= v2))
(((((((uint1)1 && (((((v0*4) + v1) + 0) + -4) <= ((((v0*4) + 0) + v1) + -4))) && (((((v0*4) + v1) + 3) + -4) >= ((((v0*4) + ((4 + 0) - 1)) + v1) + -4))) && (v2 <= v2)) && (v2 >= v2)) && (((v3*32) + v4) <= ((v3*32) + v4))) && (((v3*32) + v4) >= ((v3*32) + v4)))
"(((min(v0*16, 109) + v1) + v2) < ((min(v0*16, 109) + (v1 + 1)) + v2))"
"((((min(max(min(((min(v3*125, v4 + -125) + (v2 + 124))/125)*8, 113), -11) - max(min(((min(v3*125, v4 + -125) + v2)/125)*8, 125), 1), (((max(min(((min(v3*125, v4 + -125) + (v2 + 124))/125)*8, 113), -11) - max(min(((min(v3*125, v4 + -125) + v2)/125)*8, 125), 1))/4)*4) + 3)*2)/4)*4) == (min(max(min(((min(v3*125, v4 + -125) + (v2 + 124))/125)*8, 113), -11) - max(min(((min(v3*125, v4 + -125) + v2)/125)*8, 125), 1), (((max(min(((min(v3*125, v4 + -125) + (v2 + 124))/125)*8, 113), -11) - max(min(((min(v3*125, v4 + -125) + v2)/125)*8, 125), 1))/4)*4) + 3)*2))"
"(max(min(1999, ((v1*4) + 1000) - 1) + 1, min(max(0, v1*4), 1000 + (v1*4))) <= min(max(0, v1*4), 1000 + (v1*4)))"
((((v0*125) + v1) + v2) < (((v0*125) + (v1 + 1)) + v2))
"((((v0*250) + (min(v1*32, 218) + v2)) + v3) < (((v0*250) + (min(v1*32, 218) + (v2 + 1))) + v3))"
((0 - (v0*2)) == (499 - (v0*2)))
(((((((uint1)1 && ((((0*4) + v0) + 0) <= v0)) && ((((2*4) + v0) + 3) >= (v0 + 11))) && ((v1/4) <= (v1/4))) && (((v1/4) + 32) >= ((v1/4) + 32))) && (v2 <= v2)) && (v2 >= v2))
"(max(min(125 - v0, (0 + 2) - 1) + 1, min(max(1 - v0, 0), 2 + 0)) <= min(max(1 - v0, 0), 2 + 0))"
(((-168 - ((v0 + v1) % 8))/8) >= ((((-168 - ((v0 + v1) % 8))/8) + ((((v0 + v1) % 8) + 183)/8)) - 1))
(((((((uint1)1 && ((v0 + 0) <= (0 + v0))) && ((v0 + 3) >= (((4 + 0) - 1) + v0))) && (v1 <= v1)) && (v1 >= v1)) && (0 <= 0)) && (((25 + 0) - 1) >= ((25 + 0) - 1)))
"(max(0, min(min((((v3 + v4) - max(min(v5, 1999), 0))/4) + -1, (max(min((v0*4) + v1, min(v2 + v1, 2000) + -4), -3) - max(min((v0*4) + v1, min(v2 + v1, 2003) + -4), 0))/4), (0 + ((v6 + 7)/4)) - 1) + 1) <= 0)"
(((v0 + 91)/86) != 0)
(((((v0/((v1 + 76)/64))*16)/2)*2) == ((v0/((v1 + 76)/64))*16))
((((v0*2) + v1) + 2) < (((v0 + 1)*2) + v1))
"(((((((uint1)1 && ((max(min(((v0/4) + v1)*4, 1999), v2 + 4) + -3) <= (v2 + -3))) && ((v2 + 1) >= (v2 + 1))) && ((0 + (v3 + -5)) <= (v3 + -5))) && ((3 + (v3 + 998)) >= (v3 + 1004))) && (0 <= 0)) && (2 >= 2))"
(((((v0*500) + v1) + v2) + 1) < ((((v0*500) + v1) + (v2 + 1)) + -5))
"(0 == ((0 + ((max(v0, -2)*2) + 4)) - 1))"
(((((((uint1)1 && ((v0 + -3) <= (((((0*4) + v0) + -2) + 0) + -1))) && (((v0 + 263) + -3) >= (((((62*4) + v0) + ((11 + -2) - 1)) + 3) + -1))) && (v1 <= v1)) && (v1 >= v1)) && (0 <= 0)) && (0 >= 0))
(((((((uint1)1 && ((0 + (v0 + -10)) <= (-10 + v0))) && ((3 + (v0 + 63)) >= (((13 + -10) - 1) + (v0 + 64)))) && (v1 <= v1)) && (v1 >= v1)) && (v2 <= v2)) && (v2 >= v2))
(((((((uint1)1 && ((v0*8) <= (v0*8))) && ((v0*8) >= (v0*8))) && ((((v1*4) + v2) + 0) <= (0 + ((v1*4) + v2)))) && ((((v1*4) + v2) + 3) >= (((4 + 0) - 1) + ((v1*4) + v2)))) && (v3 <= v3)) && (v3 >= v3))
"(max(min(249, (((v1*2) + -4) + 2) - 1) + 1, min(max(0, (v1*2) + -4), 2 + ((v1*2) + -4))) <= min(max(0, (v1*2) + -4), 2 + ((v1*2) + -4)))"
(((v0*4) + (v1 + v2)) >= ((((v0 - 1)*4) + (v1 + v2)) + 1))
((((v0*-36)/9)*9) == (v0*-36))
(((v0 + 127)/128) != 0)
(((v0 + v1)*4) == ((((v0 + v1)*4) + 4) - 1))
((((v0 + v1) % 125) + 999) >= 0)
(((((((uint1)1 && ((0 + ((((v1*8) + ((v2*2) + v3))*4) + v4)) <= (((v1*32) + (((v2*2) + v3)*4)) + v4))) && ((3 + ((((v1*8) + ((v2*2) + v3))*4) + v4)) >= (((v1*32) + ((((v2*2) + v3)*4) + 3)) + v4))) && (((((v5*2) + v6)*4) + v7) <= ((((v5*2) + v6)*4) + v7))) && ((((((v5*2) + v6)*4) + v7) + 3) >= (((((v5*2) + v6)*4) + 3) + v7))) && ((v8*3) <= ((v8*3) + 0))) && (((v8*3) + 2) >= ((v8*3) + ((3 + 0) - 1))))
"(max(((v0 % 8) + 47)/8, ((((min(v1*32, 93) + v0) + 39)/8) - min((min(v1*32, 93) + v0)/8, ((v0 + 15)/8) + (v1*4))) + 1) <= 1024)"
"(max(((v0 % 4) + 11)/4, ((((min(v1*4, 121) + v0) + 7)/4) - min((min(v1*4, 121) + v0)/4, ((v0 + 7)/4) + v1)) + 1) <= 1024)"
((((v0*8)/8)*8) == (v0*8))
(((v0 + v1) + v2) >= ((((v0 - 1) + v1) + v2) + 1))
(0 == ((0 + ((v0*2) + 2)) - 1))
"(max(min(min(min(((v3/4) - ((((v4*2) + v5)*4) + v6)) + 3, ((min((v1 + v2) + 164, v3)/4) - ((((v4*2) + v5)*4) + v6)) + 3), (((v1 + v2) + 173)/4) - ((((v4*2) + v5)*4) + v6)), (0 + (v7 + 4)) - 1) + 1, min(max(((v2/4) - ((((v4*2) + v5)*4) + v6)) + 45, 0), (v7 + 4) + 0)) <= min(max(((v2/4) - ((((v4*2) + v5)*4) + v6)) + 45, 0), (v7 + 4) + 0))"
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((7*4) + v0) + 3) >= (((((8 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && (((v1*500) + v2) <= (((v1*500) + 0) + v2))) && ((((v1*500) + v2) + 499) >= (((v1*500) + ((500 + 0) - 1)) + v2))) && (v3 <= v3)) && (((v4 + v3) + -1) >= ((v4 + v3) - 1)))
(((((((uint1)1 && ((((((v0*4) + v1) + -2) + 0) + -250) <= (((((v0*4) + 0) + v1) + -2) + -250))) && ((((((v0*4) + v1) + ((11 + -2) - 1)) + 3) + -250) >= (((((v0*4) + ((4 + 0) - 1)) + v1) + ((11 + -2) - 1)) + -250))) && (v2 <= v2)) && (v2 >= v2)) && (v3 <= v3)) && (v3 >= v3))
((((v0*8) + 41)/33) != 0)
((((v0*8) + 27)/17) != 0)
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (v2 <= v2)) && (v2 >= v2)) && (((v3*8) + 0) <= ((v3*8) + 0))) && (((v3*8) + ((8 + 0) - 1)) >= ((v3*8) + ((8 + 0) - 1))))
(((v0 + 130)/128) != 0)
"((max(min(((v0*8) + v1) - min((v2 + v1) - (v3*126), v1 + 116), -82), -89) + 80) >= (((max(min(((v0*8) + v1) - min((v2 + v1) - (v3*126), v1 + 116), -82), -89) + 80) + (-78 - max(min(((v0*8) + v1) - min((v2 + v1) - (v3*126), v1 + 116), -82), -89))) - 1))"
"(((min(v0*8, 117) + ((v1*2) + v2)) + v3) < ((min(v0*8, 117) + ((v1*2) + (v2 + 1))) + v3))"
(((((((uint1)1 && (0 <= 0)) && ((8 - 1) >= (8 - 1))) && (((((((v0*2) + v1)*4) + -2) + 0) + 1) <= ((((((v0*2) + v1)*4) + 0) + -2) + 1))) && (((((((v0*2) + v1)*4) + ((6 + -2) - 1)) + 3) + 1) >= ((((((v0*2) + v1)*4) + ((4 + 0) - 1)) + ((6 + -2) - 1)) + 1))) && (v2 <= v2)) && (v2 >= v2))
(((((((uint1)1 && ((0 + (((v0*4) + v1) + 3)) <= (((v0*4) + v1) + -2))) && ((3 + (((v0*4) + v1) + 3)) >= (((v0*4) + v1) + 6))) && ((v2 + -2) <= (v2 + -2))) && ((v2 + 127) >= (v2 + 127))) && (0 <= 0)) && (0 >= 0))
((((v0*-32)/8)*8) == (v0*-32))
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + v0) + 0))) && ((((249*4) + v0) + 3) >= (((249*4) + v0) + 3))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (0 <= 0)) && (24 >= 24))
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((2*4) + v0) + 3) >= (((2*4) + ((4 + 0) - 1)) + v0))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (0 <= 0)) && (((208 + 0) - 1) >= ((208 + 0) - 1)))
((((v0*65) + (v1 + v2)) + -10) >= (((((v0*65) + (v1 + v2)) + -10) + 78) - 1))
(((v0*8) + -1) >= ((((v0*8) + -1) + 13) - 1))
(((((v0*126) + v1) + v2) + -2) < ((((v0*126) + v1) + (v2 + 1)) + -11))
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (v2 <= (0 + v2))) && ((v2 + 124) >= (((125 + 0) - 1) + v2))) && (v3 <= v3)) && (v3 >= v3))
(((((v0 % ((v1/32) + 1))*-32)/8)*8) == ((v0 % ((v1/32) + 1))*-32))
(((((((uint1)1 && ((0 + ((v0*8) + v1)) <= (((((v0*2) + 0)*4) + v1) + 0))) && ((3 + (((v0*8) + v1) + 4)) >= (((((v0*2) + 1)*4) + v1) + 3))) && ((v2/125) <= ((0 + v2)/125))) && (((v2 + 124)/125) >= ((((125 + 0) - 1) + v2)/125))) && (v3 <= v3)) && (v3 >= v3))
"(((((((uint1)1 && ((((max(-3*4, -9) + v0) + 0) + 5) <= (v0 + -4))) && ((((max(251*4, -9) + v0) + 3) + 5) >= (v0 + 1012))) && (((((v1*8) + v2) + v3) + 5) <= ((((v1*8) + v2) + v3) + -4))) && (((((v1*8) + v2) + v3) + 5) >= ((((v1*8) + v2) + v3) + 5))) && (0 <= 0)) && (2 >= 2))"
(((((v0*34) + v1) + v2) + -3) < ((((v0*34) + v1) + (v2 + 1)) + -8))
"(((min(v0 - v1, 5)*2) + -10) >= ((((min(v0 - v1, 5)*2) + -10) + (13 - (min(v0 - v1, 5)*2))) - 1))"
"((max(min(min(v0*32, (max(v1*4, -3) - v2) + 3) + v2, max(v1*4, -3) + 3) - ((v0*32) + v2), min(min((v0*32) + v3, (max(v1*4, -3) - v2) + 3) + v2, max(v1*4, -3) + 3) - (((v0*32) + v3) + v2)) + 5) <= 1024)"
"(max(min(124 - v0, (0 + 17) - 1) + 1, min(max(0 - v0, 0), 17 + 0)) <= min(max(0 - v0, 0), 17 + 0))"
(((v0 + v1) + -2) >= ((((v0 - 1) + v1) + 1) + 1))
(((((v0 % ((v1 + 24)/18))*-18)/2)*2) == ((v0 % ((v1 + 24)/18))*-18))
"(0 == ((0 + (19 - max(min(v0*4, 19), 15))) - 1))"
(((v0/2) + 1) != 0)
(((((((uint1)1 && ((0 + ((((v1*4) + ((v2*2) + v3))*4) + v4)) <= (((v1*16) + (((v2*2) + v3)*4)) + v4))) && ((3 + ((((v1*4) + ((v2*2) + v3))*4) + v4)) >= (((v1*16) + ((((v2*2) + v3)*4) + 3)) + v4))) && ((v5 + v6) <= (v5 + v6))) && ((v5 + v6) >= (v5 + v6))) && (v7 <= v7)) && (v7 >= v7))
"(max(min(1999, ((((v1*2) + v2)*2) + 2) - 1) + 1, min(max(0, ((v1*2) + v2)*2), 2 + (((v1*2) + v2)*2))) <= min(max(0, ((v1*2) + v2)*2), 2 + (((v1*2) + v2)*2)))"
((((((v0 + v1)*2) + v2)*2) + 1) < ((((v0 + v1)*2) + (v2 + 1))*2))
(((((((uint1)1 && (((((v0*2) + v1)*2) + v2) <= ((((v0*2) + v1)*2) + v2))) && ((((((v0*2) + v1)*2) + v2) + 1) >= (((((v0*2) + v1)*2) + 1) + v2))) && ((v3 + v4) <= (v3 + v4))) && ((v3 + v4) >= (v3 + v4))) && (((0*4) + 0) <= ((0*4) + 0))) && (((((12 + 0) - 1)*4) + 3) >= ((((12 + 0) - 1)*4) + ((4 + 0) - 1))))
((((v0 + v1) + v2)/4) >= ((((((v0 - 1) + v1) + v2)/4) + 1) + 1))
(((v0 + 67)/65) != 0)
"(((((((uint1)1 && ((0 + ((min(v0*32, 220) + (v1*4)) + v2)) <= ((min(v0*32, 220) + (v1*4)) + v2))) && ((3 + ((min(v0*32, 220) + (v1*4)) + v2)) >= (((min(v0*32, 220) + (v1*4)) + 3) + v2))) && ((v3 + v4) <= (v3 + v4))) && ((v3 + v4) >= (v3 + v4))) && (v5 <= v5)) && (v5 >= v5))"
((((v0*4) + 556)/501) != 0)
(((v0 + v1) + 3) <= ((((v0 - 1) + v1) + -2) - 1))
(((v0 + v1) + -11) == ((((v0 + v1) + -11) + 143) - 1))
(((v0 + 180)/167) != 0)
"((v0 + -10) >= (((v0 + -10) + (min(v1 + v2, -16) + 17)) - 1))"
"(((max(min((v1*-128) + (max(min((v2*252) + v3, min(v4 + v3, 2000) + -252), -251) - max(min((v2*252) + v3, min(v4 + v3, 2251) + -252), 0)), -124), -252)/4)*4) == max(min((v1*-128) + (max(min((v2*252) + v3, min(v4 + v3, 2000) + -252), -251) - max(min((v2*252) + v3, min(v4 + v3, 2251) + -252), 0)), -124), -252))"
"(0 == ((0 + (128 - (max(min(v0, 4), 3)*32))) - 1))"
"((max(v0, 500) + 8) >= 0)"
"(0 == ((0 + (-92 - (max(min(v0, -23), -24)*4))) - 1))"
((((v0*-168)/4)*4) == (v0*-168))
"((((min(v0*252, 251) + ((v1*63) + v2)) + v3) + 5) < (((min(v0*252, 251) + ((v1*63) + (v2 + 1))) + v3) + -4))"
((((v0*125)/125)*125) == (v0*125))
(((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && ((((((v1*4) + v2) + 0)*4) + 0) <= (((v1*4) + v2)*4))) && ((((((v1*4) + v2) + 3)*4) + 3) >= ((((v1*4) + v2)*4) + 15))) && (v3 <= v3)) && (v3 >= v3))
"(((((v0*-32) + (max(min((v0*-2) + max((((((v1 + v2) + 7)/4) - (v2/4)) + -1)/16, ((((v1 + v2) + 3)/4) - (v2/4))/16), 1), -1)*-16))/8)*8) == ((v0*-32) + (max(min((v0*-2) + max((((((v1 + v2) + 7)/4) - (v2/4)) + -1)/16, ((((v1 + v2) + 3)/4) - (v2/4))/16), 1), -1)*-16)))"
"(max(min(min(min((min((v3 + v4) - v1, min(1997 - v1, v2) + 3) + -61)/63, (min(min(2059 - v1, v2), ((v3 + v4) - v1) + 59) + -58)/63), min(1939 - v1, v2 + -59)/63), (0 + ((v2 + 67)/63)) - 1) + 1, min(max(max(max(((max(v4, 0) - v1) + 64)/63, (2 - v1)/63), (64 - v1)/63), 0), ((v2 + 67)/63) + 0)) <= min(max(max(max(((max(v4, 0) - v1) + 64)/63, (2 - v1)/63), (64 - v1)/63), 0), ((v2 + 67)/63) + 0))"
"(max(min(min(min((((v1 + v2) - max(min(v4, 2001), 2)) + -2)/4, ((min(max(min(v3 + v4, 1997), -2), v1 + v2) - max(min(v4, 2001), 2)) + 1)/4), ((max(min(v3 + v4, 1997), -2) - max(min(v4, 2001), 2)) + 1)/4), (0 + ((v5/4) + 2)) - 1) + 1, min(max(((v2 - max(min(v4, 2001), 2)) + 5)/4, 0), ((v5/4) + 2) + 0)) <= min(max(((v2 - max(min(v4, 2001), 2)) + 5)/4, 0), ((v5/4) + 2) + 0))"
"(0 == ((0 + (32 - (max(min((v0*2) + v1, 4), 3)*8))) - 1))"
((((v0 + v1)*2) + 2) < (((v0 + 1) + v1)*2))
(((v0 % 4) + 271) >= 0)
(((v0 + v1) + -11) >= ((((v0 + v1) + -11) + 17) - 1))
(((v0 + v1)/8) >= (((((v0 - 1) + v1)/8) + 1) + 1))
"(max(min((v1 + v2) + -1, ((((v3*64) + v4) + -1) + (130 - max(v3*64, 61))) - 1) + 1, min(max(v2, ((v3*64) + v4) + -1), (130 - max(v3*64, 61)) + (((v3*64) + v4) + -1))) <= min(max(v2, ((v3*64) + v4) + -1), (130 - max(v3*64, 61)) + (((v3*64) + v4) + -1)))"
"(((((((uint1)1 && ((((max(-3*4, -9) + v0) + 0) + 5) <= (v0 + -4))) && ((((max(125*4, -9) + v0) + 3) + 5) >= (v0 + 508))) && (((v1 + v2) + 5) <= ((v1 + v2) + -4))) && (((v1 + v2) + 5) >= ((v1 + v2) + 5))) && (0 <= 0)) && (2 >= 2))"
(((v0 + v1) + 8) < (((v0 + 1) + v1) + -2))
"(((max(min((v2*-64) + (v1 - min(v1, 4)), 60), -4)/4)*4) == max(min((v2*-64) + (v1 - min(v1, 4)), 60), -4))"
(((((((uint1)1 && (((0 + ((v0*16) + v1)) + -2) <= (((v0*16) + v1) + -2))) && (((3 + (((v0*16) + v1) + 20)) + -2) >= (((v0*16) + v1) + 18))) && (((v2 + v3) + 3) <= ((v2 + v3) + -2))) && (((v2 + v3) + 3) >= ((v2 + v3) + 3))) && (0 <= 0)) && (0 >= 0))
"(max(min(min(min(((v4 - v5) + -3)/4, ((((v2 + v3) + -13)/4) - v5)/4), (min(((v2 + v3) + -1)/4, v4 + -3) - v5)/4), (0 + ((min(((((v6 + v7) + 3)/4) - (v8*64)) - (v7/4), 63)/4) + 1)) - 1) + 1, min(max(((((v3 + 3)/4) - v5) + 3)/4, 0), ((min(((((v6 + v7) + 3)/4) - (v8*64)) - (v7/4), 63)/4) + 1) + 0)) <= min(max(((((v3 + 3)/4) - v5) + 3)/4, 0), ((min(((((v6 + v7) + 3)/4) - (v8*64)) - (v7/4), 63)/4) + 1) + 0))"
"(((((((uint1)1 && ((v0 + 0) <= (0 + v0))) && ((v0 + 3) >= (((4 + 0) - 1) + v0))) && (((min(v1*8, 117) + ((v2*2) + v3)) + v4) <= ((min(v1*8, 117) + ((v2*2) + v3)) + v4))) && (((min(v1*8, 117) + ((v2*2) + v3)) + v4) >= ((min(v1*8, 117) + ((v2*2) + v3)) + v4))) && (v5 <= v5)) && (v5 >= v5))"
"((max(v0, 4) + 4) >= 0)"
"(0 == ((0 + ((max(min(v0, 0), -1)*4) + 4)) - 1))"
"(max(min(((2006 - v1)/4) + (v2*-169), (0 + 169) - 1) + 1, min(max((((9 - v1)/4) + (v2*-169)) + 1, 0), 169 + 0)) <= min(max((((9 - v1)/4) + (v2*-169)) + 1, 0), 169 + 0))"
"(max(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min((v4/125) + -1, (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (min((((min(v2 + v3, 1995)/4)*4) - v1) + 132, v4)/125) + -1), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1875 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1891 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1907 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (1923 - v1)/125), (0 + ((v4 + 124)/125)) - 1) + 1, min(max(max(max(max(max(max(max(max(max(max(max(max(max(0 - (v1/125), 0 - (v1/125)), 0 - (v1/125)), ((((v3/4)*4) - v1) + 132)/125), (76 - v1)/125), (76 - v1)/125), (76 - v1)/125), (92 - v1)/125), (92 - v1)/125), (92 - v1)/125), (108 - v1)/125), (108 - v1)/125), (108 - v1)/125), 0), ((v4 + 124)/125) + 0)) <= min(max(max(max(max(max(max(max(max(max(max(max(max(max(0 - (v1/125), 0 - (v1/125)), 0 - (v1/125)), ((((v3/4)*4) - v1) + 132)/125), (76 - v1)/125), (76 - v1)/125), (76 - v1)/125), (92 - v1)/125), (92 - v1)/125), (92 - v1)/125), (108 - v1)/125), (108 - v1)/125), (108 - v1)/125), 0), ((v4 + 124)/125) + 0))"
(((v0 + v1) + 1) <= ((((v0 - 1) + v1) + -5) - 1))
"(((min((v0*4) + ((v1*16)*4), 122)/2)*2) == min((v0*4) + ((v1*16)*4), 122))"
((0 - (v0*2)) > (499 - (v0*2)))
(((((v0 % ((v1/128) + 1))*-128)/64)*64) == ((v0 % ((v1/128) + 1))*-128))
"(((v0*4) + -8) == ((((v0*4) + -8) + ((min(v1, 0)*4) + 12)) - 1))"
((((v0*-64)/32)*32) == (v0*-64))
"(max(0, min(21 - (((125 - ((min(v0*125, v1 + -125) + v2) % 250))/250)*16), (0 + (((((v3 % 250) + 124)/250)*16) + 23)) - 1) + 1) <= 0)"
(((v0 + v1) + 116) >= ((((v0 + v1) + 116) + 9) - 1))
(((((v0/(((v1*64) + 224)/136))*-70)/35)*35) == ((v0/(((v1*64) + 224)/136))*-70))
((v0 + -258) >= (((v0 + -258) + 265) - 1))
"(max(min((v1 + v2) + -1, (((v4*4) + -8) + ((min(v3, 61)*4) + 12)) - 1) + 1, min(max(v2, (v4*4) + -8), ((min(v3, 61)*4) + 12) + ((v4*4) + -8))) <= min(max(v2, (v4*4) + -8), ((min(v3, 61)*4) + 12) + ((v4*4) + -8)))"
(((v0 + 253)/250) != 0)
"(((((((uint1)1 && ((-2 + v0) <= (-2 + v0))) && ((((11 + -2) - 1) + v0) >= (((11 + -2) - 1) + v0))) && ((((0*4) + v1) + 0) <= (((0*4) + v1) + 0))) && ((((((32 - max(v2*4, 29))/4)*4) + v1) + 3) >= ((((((((29 - max(v2*4, 29)) + 7)/4) + 0) - 1)*4) + v1) + ((4 + 0) - 1)))) && (v3 <= v3)) && (v3 >= v3))"
(((((((uint1)1 && ((((v0 + v1) + 0) + 3) <= ((0 + v1) + v0))) && ((((v0 + v1) + 3) + 3) >= ((((4 + 0) - 1) + v1) + v0))) && (((v2 + v3) % 8) <= ((v2 + v3) % 8))) && (((v2 + v3) % 8) >= ((v2 + v3) % 8))) && (v4 <= v4)) && (v4 >= v4))
"(0 == ((0 + (16 - max((v0 % 3)*6, 10))) - 1))"
"((((v0*2) + v1) + 1) < (min(max((v0 + 1)*2, -1), ((v0 + 1)*2) + -1) + v1))"
"(max(((v0 % 4) + 75)/4, ((((min(v1*32, 968) + v0) + 63)/4) - min(((v0 + 35)/4) + (v1*8), ((min(v1*32, 968) + v0)/4) + -2)) + 1) <= 1024)"
((((v0 + v1) % 250) + 999) >= 0)
"((((max(v0 + (((min(v1*32, 93) + (v2 + v3)) + 3)/4), (min(v1*32, 93) + (v2 + v3))/4)*-4)/4)*4) == (max(v0 + (((min(v1*32, 93) + (v2 + v3)) + 3)/4), (min(v1*32, 93) + (v2 + v3))/4)*-4))"
((v0*4) == (((v0*4) + (v1*4)) - 1))
"((max((max(v0 + 9, v1) + (((min(v0 - v1, -9) + 9)/4)*4)) - v0, 9) + 4) <= 1024)"
(((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && ((((((0*2) + ((v1*2) + ((v2*8) + v3)))*2) + 0) + -10) <= ((((v1*2) + ((v2*8) + v3))*2) + -10))) && ((((((0*2) + ((v1*2) + ((v2*8) + v3)))*2) + 3) + -10) >= (((((v1*2) + ((v2*8) + v3))*2) + 3) + -10))) && (v4 <= v4)) && (v4 >= v4))
((v0 + -3) >= (((v0 - 1) + 1) + 1))
"(max(min((v1 + v2) + -1, ((((v3*6) + v4)*4) + 24) - 1) + 1, min(max(v2, ((v3*6) + v4)*4), 24 + (((v3*6) + v4)*4))) <= min(max(v2, ((v3*6) + v4)*4), 24 + (((v3*6) + v4)*4)))"
"(((((((uint1)1 && ((((((v0*16) + 0)*4) + v1) + 0) <= ((v0*64) + v1))) && ((((((v0*16) + 15)*4) + v1) + 3) >= (((v0*64) + v1) + 63))) && ((max(min((v2/4)*4, 1999), v3 + 6) + -5) <= (v3 + -2))) && ((v3 + 1) >= (v3 + 1))) && (v4 <= v4)) && (v4 >= v4))"
(((((((uint1)1 && ((0 + v0) <= (((0*4) + 0) + v0))) && ((3 + (v0 + 28)) >= (((((8 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (v3 <= v3)) && (v3 >= v3))
(((((((uint1)1 && ((((((v0*4) + v1) + 0)*4) + 0) <= (((((v0*4) + v1) + 0)*4) + 0))) && ((((((v0*4) + v1) + 3)*4) + 3) >= (((((v0*4) + v1) + ((4 + 0) - 1))*4) + ((4 + 0) - 1)))) && (((v2*4) + v3) <= ((v2*4) + v3))) && (((v2*4) + v3) >= ((v2*4) + v3))) && (((((v4*2) + v5)*2) + v6) <= ((((v4*2) + v5)*2) + v6))) && (((((v4*2) + v5)*2) + v6) >= ((((v4*2) + v5)*2) + v6)))
(((((((uint1)1 && ((v0 + 0) <= (0 + v0))) && ((v0 + 3) >= (((4 + 0) - 1) + v0))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (v3 <= v3)) && (((v4 + v3) + -1) >= ((v4 + v3) - 1)))
((0 - (v0*5)) > (17 - (v0*5)))
"(((((((uint1)1 && (((min(v0, 64) + v1) + -71) <= (max(-7 - max(v0, 64), -2) + ((min(v0, 64) + v1) + -69)))) && (((max(v0, 64) + (min(v0, 64) + v1)) + -63) >= (1 + (((max(v0, 64) + 6) + ((min(v0, 64) + v1) + -69)) - 1)))) && ((((v2 + v3) + 0) + 125) <= (v3 + (v2 + -5)))) && ((((v2 + v3) + 3) + 125) >= (v3 + (v2 + 125)))) && (v4 <= v4)) && (v4 >= v4))"
"(((((((uint1)1 && (((0 + (max(v0*8, -5) + v1)) + 3) <= (((v0*8) + v1) + -2))) && (((3 + ((max(v0*8, -5) + v1) + 4)) + 3) >= (((v0*8) + v1) + 10))) && (((0 + (min(v2, 63) + v3)) + -65) <= ((min(v2, 63) + v3) + -65))) && (((62 + ((((max(v2, 63) + 4)/63)*63) + (min(v2, 63) + v3))) + -65) >= ((v2 + v3) + 2))) && (0 <= 0)) && (0 >= 0))"
(((((((uint1)1 && ((((((v0*4) + v1) + -2) + 0) + -1) <= (((((v0*4) + 0) + v1) + -2) + -1))) && ((((((v0*4) + v1) + ((11 + -2) - 1)) + 3) + -1) >= (((((v0*4) + ((4 + 0) - 1)) + v1) + ((11 + -2) - 1)) + -1))) && (v2 <= v2)) && (v2 >= v2)) && (v3 <= v3)) && (v3 >= v3))
((v0*4) >= (((v0*4) + ((-11*4) + 48)) - 1))
"(((max(min((v0*-128) + v1, -124), -252)/4)*4) == max(min((v0*-128) + v1, -124), -252))"
((((v0*500) + v1) + v2) < (((v0*500) + (v1 + 1)) + v2))
"(0 == ((0 + (26 - (max(min(v0, 2), 1)*13))) - 1))"
"(((((((uint1)1 && ((0 + ((v0*32) + v1)) <= ((v0*32) + v1))) && ((3 + (((v0*32) + v1) + 28)) >= (((v0*32) + 31) + v1))) && (((min(v2*223, 444) + v3) + v4) <= ((min(v2*223, 444) + v3) + v4))) && (((min(v2*223, 444) + v3) + v4) >= ((min(v2*223, 444) + v3) + v4))) && (0 <= 0)) && (0 >= 0))"
"(((((((uint1)1 && ((v0 + 0) <= (0 + v0))) && ((v0 + 3) >= (((4 + 0) - 1) + v0))) && ((min(v1*8, 117) + v2) <= ((min(v1*8, 117) + 0) + v2))) && (((min(v1*8, 117) + v2) + 7) >= ((min(v1*8, 117) + ((8 + 0) - 1)) + v2))) && (v3 <= v3)) && (v3 >= v3))"
"(max(0, min(min(((((v0 + v1) - v2)/4) + (v3*-3)) + -1, ((max(min(min(v3*12, 52) + v2, 1988), -11) - max(min(min(v3*12, 52) + v2, 1999), 0))/4) + 2), (0 + ((v4 + 15)/4)) - 1) + 1) <= 0)"
((((v0 + v1)/4)*4) == (((((v0 + v1)/4)*4) + 132) - 1))
(((((((uint1)1 && (((((0*4) + v0) + 0) + -4) <= (v0 + -4))) && (((((7*4) + v0) + 3) + -4) >= (v0 + 27))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (0 <= 0)) && (13 >= 13))
((((v0 + v1)*2) + -4) == (((((v0 + v1)*2) + -4) + 2) - 1))
((v0*8) == (((v0*8) + 8) - 1))
(((((((uint1)1 && (((((0*4) + v0) + 0) + -3) <= ((((0*4) + 0) + v0) + -3))) && (((((31*4) + v0) + 3) + -3) >= ((((((32 + 0) - 1)*4) + ((4 + 0) - 1)) + v0) + -3))) && (v1 <= v1)) && (v1 >= v1)) && (((v2*2) + v3) <= ((v2*2) + v3))) && (((v2*2) + v3) >= ((v2*2) + v3)))
(((((((uint1)1 && ((0 + ((((v1*8) + ((v2*2) + v3))*4) + v4)) <= (((v1*32) + (((v2*2) + v3)*4)) + v4))) && ((3 + ((((v1*8) + ((v2*2) + v3))*4) + v4)) >= (((v1*32) + ((((v2*2) + v3)*4) + 3)) + v4))) && ((v5/125) <= ((0 + v5)/125))) && (((v5 + 999)/125) >= ((((1000 + 0) - 1) + v5)/125))) && (v6 <= v6)) && (v6 >= v6))
"((v0 + 5) < (min(max((v0 + 1) + 8, v1 + v2) + 1, v0 + 1) + -4))"
"(((((((uint1)1 && ((((0*4) + 0) + (min(v0*128, 372) + v1)) <= (min(v0*128, 372) + v1))) && ((((3*4) + 3) + ((min(v0*128, 372) + v1) + 112)) >= ((min(v0*128, 372) + 127) + v1))) && (v2 <= (0 + v2))) && ((v2 + 124) >= (((125 + 0) - 1) + v2))) && (v3 <= v3)) && (v3 >= v3))"
((((v0*64) + 139)/35) != 0)
((((v0*8) + v1) + v2) < ((((v0*8) + (v1 + 1)) + v2) + -1))
"(((((((uint1)1 && (((((v0 + v1)*2) + v2) % 4) <= ((((v0 + v1)*2) + v2) % 4))) && (((((v0 + v1)*2) + v2) % 4) >= ((((v0 + v1)*2) + v2) % 4))) && ((((v3*2) + v4) % 4) <= (((v3*2) + v4) % 4))) && ((((v3*2) + v4) % 4) >= (((v3*2) + v4) % 4))) && ((min(v5*4, 14) + 0) <= (min(v5*4, 14) + 0))) && ((min(v5*4, 14) + 3) >= (min(v5*4, 14) + ((4 + 0) - 1))))"
((((v0*8) + v1)*4) == (((((v0*8) + v1)*4) + 32) - 1))
"(((((min((v0*125) + v1, (v2 + v1) + -125)/4)*4)/4)*4) == ((min((v0*125) + v1, (v2 + v1) + -125)/4)*4))"
"(max(min(min((1996 - v3)/4, min((((v1 + v2) - v3) + -1)/4, 499 - (v3/4))), (0 + 251) - 1) + 1, min(max(max(0 - (v3/4), max(((v2 - v3) + 3)/4, 0 - (v3/4))), 0), 251 + 0)) <= min(max(max(0 - (v3/4), max(((v2 - v3) + 3)/4, 0 - (v3/4))), 0), 251 + 0))"
(((((((uint1)1 && (((((((v0*503) + v1) + v2) + v3) + -3) % 8) <= ((((((v0*503) + v1) + v2) + v3) + -3) % 8))) && (((((((v0*503) + v1) + v2) + v3) + -3) % 8) >= ((((((v0*503) + v1) + v2) + v3) + -3) % 8))) && (((((((v4*503) + v5) + v6) + v7) + -3) % 8) <= ((((((v4*503) + v5) + v6) + v7) + -3) % 8))) && (((((((v4*503) + v5) + v6) + v7) + -3) % 8) >= ((((((v4*503) + v5) + v6) + v7) + -3) % 8))) && (((v8*4) + 0) <= ((v8*4) + 0))) && (((v8*4) + 3) >= ((v8*4) + ((4 + 0) - 1))))
(((v0 % 1003) + 1007) >= 0)
((v0 + -10) >= (((v0 + -10) + 8) - 1))
"(((max((((v0 + v1) + -1)/4)*4, -3) - min(((min(v0, 1000) + v1)/4)*4, 2999)) + 1003) >= 0)"
"(max(0, min(((v0 % 4) + 131)/128, (0 + (((v0 % 4) + 383)/128)) - 1) + 1) <= 0)"
"(max(min(min(((min(max(min(v1, 1748), -251) + 249, v2 + v3) - max(min(v1, 1999), 0)) + -1)/128, ((max(min((v4*252) + v5, min(v6 + v5, 2000) + -252), -251) - max(min((v4*252) + v5, min(v6 + v5, 2251) + -252), 0)) + 124)/128), (0 + ((v7 + 379)/128)) - 1) + 1, min(max(((v3 - max(min(v1, 1999), 0)) + 127)/128, 0), ((v7 + 379)/128) + 0)) <= min(max(((v3 - max(min(v1, 1999), 0)) + 127)/128, 0), ((v7 + 379)/128) + 0))"
((v0 + 1) != 0)
((((v0*-252)/4)*4) == (v0*-252))
(((v0 + 138)/128) != 0)
"(max(min(1999, ((((v1*3) + v2) + -10) + 140) - 1) + 1, min(max(0, ((v1*3) + v2) + -10), 140 + (((v1*3) + v2) + -10))) <= min(max(0, ((v1*3) + v2) + -10), 140 + (((v1*3) + v2) + -10)))"
"(((((((uint1)1 && (((max(v0*4, -5) + v1) + 3) <= (((v0*4) + v1) + -2))) && ((((v0*4) + v1) + 6) >= (((v0*4) + v1) + 6))) && (((((0*4) + v2) + 0) + -2) <= (v2 + -2))) && (((((32*4) + v2) + 3) + -2) >= (v2 + 127))) && (0 <= 0)) && (0 >= 0))"
"(max(min(min((((v1 + v2) - max(min(v4, 2009), 10)) + 2)/8, ((min(max(min(v3 + v4, 1992), -7), (v1 + v2) + -1) - max(min(v4, 2009), 10)) + 10)/8), (0 + ((v5 + 25)/8)) - 1) + 1, min(max(((v2 - max(min(v4, 2009), 10)) + 17)/8, 0), ((v5 + 25)/8) + 0)) <= min(max(((v2 - max(min(v4, 2009), 10)) + 17)/8, 0), ((v5 + 25)/8) + 0))"
"(max(min(min(min(0, (((max(min((((v0 + v1) + -1)/125)*8, 113), -11)*2) - v2) + -37)/63), (189 - v2)/63), (0 + 2) - 1) + 1, min(max((64 - v2)/63, 0), 2 + 0)) <= min(max((64 - v2)/63, 0), 2 + 0))"
(((v0 + 174)/169) != 0)
(((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && ((((0*4) + v1) + 0) <= (((0*4) + v1) + 0))) && ((((2*4) + v1) + 3) >= (((2*4) + v1) + ((4 + 0) - 1)))) && (v2 <= v2)) && (v2 >= v2))
(((((((uint1)1 && ((((((v0*2) + v1)*4) + v2) + 0) <= ((((v0*2) + v1)*4) + v2))) && ((((((v0*2) + v1)*4) + v2) + 3) >= (((((v0*2) + v1)*4) + 3) + v2))) && (v3 <= (0 + v3))) && ((v3 + 499) >= (((500 + 0) - 1) + v3))) && (v4 <= v4)) && (v4 >= v4))
(((v0 + v1) + v2) <= (((v0 + v1) + v2) - 1))
"(max(min(min(min(1999, 1999), min(v1 + v2, 2000) + -1), ((v3 + -2) + 255) - 1) + 1, min(max(max(max(0, 0), max(v2, 0)), v3 + -2), 255 + (v3 + -2))) <= min(max(max(max(0, 0), max(v2, 0)), v3 + -2), 255 + (v3 + -2)))"
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (v2 <= v2)) && (((v3 + v2) - 1) >= ((v3 + v2) - 1))) && (v4 <= v4)) && (v4 >= v4))
"(((v0*2) + -4) == ((((v0*2) + -4) + ((min(v1, 0)*2) + 6)) - 1))"
(((((((uint1)1 && ((((((v0*2) + 0)*4) + v1) + 0) <= ((v0*8) + v1))) && ((((((v0*2) + 1)*4) + v1) + 3) >= (((v0*8) + 7) + v1))) && ((v2 + v3) <= (v2 + v3))) && ((v2 + v3) >= (v2 + v3))) && (v4 <= v4)) && (v4 >= v4))
"((((min((v0*84) + ((v1*12) + ((v2 + min(v3*1000, v4 + -1000))/4)), ((v2 + min(v3*1000, v4 + -1000)) + 1003)/4)*-4)/4)*4) == (min((v0*84) + ((v1*12) + ((v2 + min(v3*1000, v4 + -1000))/4)), ((v2 + min(v3*1000, v4 + -1000)) + 1003)/4)*-4))"
"(max(min(min(1999, min(v1 + v2, 2000) + -1), (((min(v3*63, 62) + v4) + -10) + 81) - 1) + 1, min(max(max(0, max(v2, 0)), (min(v3*63, 62) + v4) + -10), 81 + ((min(v3*63, 62) + v4) + -10))) <= min(max(max(0, max(v2, 0)), (min(v3*63, 62) + v4) + -10), 81 + ((min(v3*63, 62) + v4) + -10)))"
((v0/250) <= (((v0 - 1)/250) - 1))
"((((max(min((v2*16) + ((min((v3*128) + 123, v4) + (v5/8))*2), 739), 240) + (max(min((v2*16) + ((min((v3*128) + 123, v4) + (v5/8))*2), 755), 256)*-1))/4)*4) == (max(min((v2*16) + ((min((v3*128) + 123, v4) + (v5/8))*2), 739), 240) + (max(min((v2*16) + ((min((v3*128) + 123, v4) + (v5/8))*2), 755), 256)*-1)))"
(((((((uint1)1 && (((v0 + v1) % 16) <= ((v0 + v1) % 16))) && (((v0 + v1) % 16) >= ((v0 + v1) % 16))) && ((((0*4) + ((v2*4) + ((v3*8) + v4))) + 0) <= ((v2*4) + ((v3*8) + v4)))) && ((((0*4) + ((v2*4) + ((v3*8) + v4))) + 3) >= (((v2*4) + ((v3*8) + v4)) + 3))) && (v5 <= v5)) && (v5 >= v5))
"((max(min(v0, 5), -58) + -7) == (((max(min(v0, 5), -58) + -7) + (9 - max(min(v0, 5), -58))) - 1))"
((((((v0*8) + v1) + v2)*4) + 3) < ((((v0*8) + v1) + (v2 + 1))*4))
"(max(min(1999, (((v1*63) + v2) + 63) - 1) + 1, min(max(0, (v1*63) + v2), 63 + ((v1*63) + v2))) <= min(max(0, (v1*63) + v2), 63 + ((v1*63) + v2)))"
"(((((((uint1)1 && (((0 + ((min(v0, 4) + v1)/4)) + -3) <= (-2 + (((min(v0, 4) + v1)/4) + -1)))) && (((254 + (((min(v0, 4) + v1)/4) + (((v2 + 10)/255)*255))) + -3) >= (8 + ((((min(v0, 4) + v1)/4) + v2) + -1)))) && ((((0*4) + v3) + 0) <= (((0*4) + v3) + 0))) && ((((((32 - max(v4*4, 29))/4)*4) + v3) + 3) >= (((((32 - max(v4*4, 29))/4)*4) + v3) + 3))) && ((v5*8) <= (v5*8))) && (((v5*8) + 7) >= ((v5*8) + 7)))"
(((((((uint1)1 && (((((0*4) + v0) + 0) + -2) <= ((((0*4) + 0) + v0) + -2))) && (((((3*4) + v0) + 3) + -2) >= ((((((2 + 0) - 1)*4) + ((4 + 0) - 1)) + v0) + ((6 + -2) - 1)))) && (((v1 + v2) % 8) <= ((v1 + v2) % 8))) && (((v1 + v2) % 8) >= ((v1 + v2) % 8))) && (0 <= 0)) && (0 >= 0))
(((((((uint1)1 && ((((0*4) + (v0 + -7)) + 0) <= (-2 + (v0 + -5)))) && ((((34*4) + (v0 + 104)) + 3) >= (1 + (v0 + 128)))) && (((v1 + v2) + 1) <= ((v1 + v2) + -2))) && (((v1 + v2) + 1) >= ((v1 + v2) + 1))) && (0 <= 0)) && (1 >= 1))
"(0 == ((0 + (32 - (max(min((v0*4) + v1, 8), 7)*4))) - 1))"
"(max(min(min(min(1999, 1999), min(v1 + v2, 2000) + -1), ((((v3*16) + v4) + -10) + (82 - max(v3*16, 58))) - 1) + 1, min(max(max(max(0, 0), max(v2, 0)), ((v3*16) + v4) + -10), (82 - max(v3*16, 58)) + (((v3*16) + v4) + -10))) <= min(max(max(max(0, 0), max(v2, 0)), ((v3*16) + v4) + -10), (82 - max(v3*16, 58)) + (((v3*16) + v4) + -10)))"
"(((((((uint1)1 && (((0 + (max(v0*8, -5) + v1)) + 3) <= ((0 + ((v0*8) + v1)) + -2))) && (((3 + ((max(v0*8, -5) + v1) + 4)) + 3) >= ((3 + (((v0*8) + v1) + 4)) + 3))) && (((v2*8) + -1) <= (-2 + ((v2*8) + 1)))) && (((v2*8) + 11) >= (3 + ((v2*8) + 8)))) && (v3 <= v3)) && (v3 >= v3))"
(((((((uint1)1 && ((((((v0*503) + v1) + 0) + -5) + -3) <= (((((v0*503) + v1) + 0) + -5) + -3))) && ((((((v0*503) + v1) + ((503 + 0) - 1)) + ((6 + -5) - 1)) + -3) >= (((((v0*503) + v1) + ((503 + 0) - 1)) + ((6 + -5) - 1)) + -3))) && ((((((v2*503) + v3) + v4) + -5) + -3) <= (((((v2*503) + v3) + v4) + -5) + -3))) && ((((((v2*503) + v3) + v4) + ((6 + -5) - 1)) + -3) >= (((((v2*503) + v3) + v4) + ((6 + -5) - 1)) + -3))) && (((v5*4) + 0) <= ((v5*4) + 0))) && (((v5*4) + 3) >= ((v5*4) + ((4 + 0) - 1))))
(((v0 % 125) + 1499) >= 0)
"(0 == ((0 + (253 - max(v0*32, 221))) - 1))"
((v0 + 1) <= (((v0 - 1) + -3) - 1))
(((((((uint1)1 && ((v0 + 0) <= v0)) && ((v0 + 3) >= (v0 + 3))) && ((v1/8) <= (v1/8))) && (((v1 + 132)/8) >= ((v1 + 132)/8))) && (v2 <= v2)) && (v2 >= v2))
((((v0/250)*64) + -67) == (((((v0/250)*64) + -67) + ((v1*64) + 89)) - 1))
"(((((((uint1)1 && (((((0*4) + v0) + 0) + -3) <= (v0 + -3))) && (((((4*4) + v0) + 3) + -3) >= (v0 + 13))) && ((max(v1 + 8, v2 + v3) + -3) <= (v1 + -4))) && ((v1 + 5) >= (v1 + 5))) && (0 <= 0)) && (2 >= 2))"
"(((max((v0/4) + v1, min(v0/4, ((v0/4) + v1) - max(v1, 34)) + 34)*4) + -4) < ((((v0/4) + (v1 + 1))*4) + -7))"
((((v0*256) + 394)/36) != 0)
((v0 + -7) == (((v0 + -7) + 3) - 1))
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= ((v0*4) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + v1) + 3))) && ((v2/4) <= (v2/4))) && (((v2 + 253)/4) >= ((v2 + 253)/4))) && (v3 <= v3)) && (v3 >= v3))
"(0 >= ((0 + (16 - max((v0 % 3)*6, 10))) - 1))"
(((v0 + v1) + -11) >= ((((v0 + v1) + -11) + 146) - 1))
"(((((((uint1)1 && ((max((min(v0, 4) + v1)/4, v2 + 11) + -3) <= (v2 + -2))) && ((v2 + 8) >= (v2 + 8))) && ((((0*4) + v3) + 0) <= (((0*4) + v3) + 0))) && ((((((32 - max(v4*8, 25))/4)*4) + v3) + 3) >= (((((32 - max(v4*8, 25))/4)*4) + v3) + 3))) && (0 <= 0)) && (47 >= 47))"
"((((min(v0*21, 104) + v1) + v2) + 21) < (((min(v0*21, 104) + v1) + (v2 + 1)) + -5))"
"(max(min((v1 + v2) + -1, ((((v3*4) + v4)*4) + 16) - 1) + 1, min(max(v2, ((v3*4) + v4)*4), 16 + (((v3*4) + v4)*4))) <= min(max(v2, ((v3*4) + v4)*4), 16 + (((v3*4) + v4)*4)))"
"(((max(min(((v0 + v1)/125)*8, 125), 1)*16) + -20) == ((((max(min(((v0 + v1)/125)*8, 125), 1)*16) + -20) + ((v2*8) + 208)) - 1))"
"(((((((uint1)1 && ((0 + ((min(v0*32, 968) + (v1*4)) + v2)) <= ((min(v0*32, 968) + (v1*4)) + v2))) && ((3 + ((min(v0*32, 968) + (v1*4)) + v2)) >= (((min(v0*32, 968) + (v1*4)) + 3) + v2))) && (((min(v3*4, 121) + v4) + v5) <= ((min(v3*4, 121) + v4) + v5))) && (((min(v3*4, 121) + v4) + v5) >= ((min(v3*4, 121) + v4) + v5))) && (v6 <= v6)) && (v6 >= v6))"
(((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && (((((v1*4) + v2) + 0) + -1) <= ((((v1*4) + v2) + 0) + -1))) && (((((v1*4) + v2) + 3) + -1) >= ((((v1*4) + v2) + ((4 + 0) - 1)) + -1))) && (v3 <= v3)) && (v3 >= v3))
(0 == ((0 + ((((v0 + v1) % 4) + 507)/4)) - 1))
(((v0 + 131)/126) != 0)
"(0 == ((0 + (4 - (max(v0, 1)*2))) - 1))"
(((v0 + 81)/64) != 0)
(((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && ((((0*4) + ((v1/4) + (v2*4))) + 0) <= (0 + ((v1/4) + (v2*4))))) && ((((0*4) + ((v1/4) + (v2*4))) + 3) >= (((4 + 0) - 1) + ((v1/4) + (v2*4))))) && (((v3*16) + 0) <= ((v3*16) + 0))) && (((v3*16) + ((16 + 0) - 1)) >= ((v3*16) + ((16 + 0) - 1))))
"(((((((uint1)1 && ((0 + ((min(v0*32, 220) + (v1*4)) + v2)) <= ((min(v0*32, 220) + (v1*4)) + v2))) && ((3 + ((min(v0*32, 220) + (v1*4)) + v2)) >= (((min(v0*32, 220) + (v1*4)) + 3) + v2))) && (0 <= 0)) && (0 >= 0)) && (v3 <= v3)) && (((v4 + v3) + -1) >= ((v4 + v3) - 1)))"
"(0 == ((0 + (35 - max(v0*12, 21))) - 1))"
"((max(v0, 252) + -1) >= 0)"
(((((v0*8) + v1)*4) + v2) < ((((v0*8) + v1)*4) + (v2 + 1)))
"(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (((min(v2*4, 121) + v3) + v4) <= ((min(v2*4, 121) + v3) + v4))) && (((min(v2*4, 121) + v3) + v4) >= ((min(v2*4, 121) + v3) + v4))) && (v5 <= v5)) && (v5 >= v5))"
(((((((uint1)1 && (0 <= 0)) && ((4 - 1) >= (4 - 1))) && (((((((v0*2) + v1)*4) + -2) + 0) + 1) <= ((((((v0*2) + v1)*4) + 0) + -2) + 1))) && (((((((v0*2) + v1)*4) + ((6 + -2) - 1)) + 3) + 1) >= ((((((v0*2) + v1)*4) + ((4 + 0) - 1)) + ((6 + -2) - 1)) + 1))) && (((v2*32) + v3) <= ((v2*32) + v3))) && (((v2*32) + v3) >= ((v2*32) + v3)))
"(((((((uint1)1 && (((v0 + v1) % 8) <= ((v0 + v1) % 8))) && (((v0 + v1) % 8) >= ((v0 + v1) % 8))) && (((v2 + v3) % 8) <= ((v2 + v3) % 8))) && (((v2 + v3) % 8) >= ((v2 + v3) % 8))) && (((v4*4) + 0) <= (v4*4))) && (((v4*4) + 3) >= (min(v4*4, 5) + 3)))"
"(((max(min((v3*-64) + max(max(125 - (min((v4*32) + (((min(v5, 252) + v6)/4) + (v7*250)), min(((v5 + v6) + -1)/4, (((min(v5, 252) + v6)/4) + (v7*250)) + 186) + 32)*4), (min((v4*32) + (((min(v5, 252) + v6)/4) + (v7*250)), min(((v5 + v6) + -1)/4, (((min(v5, 252) + v6)/4) + (v7*250)) + 186) + 32)*4) + -2251), 0), -64), -132)/4)*4) == max(min((v3*-64) + max(max(125 - (min((v4*32) + (((min(v5, 252) + v6)/4) + (v7*250)), min(((v5 + v6) + -1)/4, (((min(v5, 252) + v6)/4) + (v7*250)) + 186) + 32)*4), (min((v4*32) + (((min(v5, 252) + v6)/4) + (v7*250)), min(((v5 + v6) + -1)/4, (((min(v5, 252) + v6)/4) + (v7*250)) + 186) + 32)*4) + -2251), 0), -64), -132))"
"(((((((uint1)1 && ((v0 + 0) <= (0 + v0))) && ((v0 + 3) >= (((4 + 0) - 1) + v0))) && (((min(v1*8, 117) + v2) + v3) <= ((min(v1*8, 117) + v2) + v3))) && (((min(v1*8, 117) + v2) + v3) >= ((min(v1*8, 117) + v2) + v3))) && (v4 <= v4)) && (v4 >= v4))"
"((((min((v0*32) + ((((v1*500) + v2)/8) + -5), (((v1*500) + v2) + 515)/8)*-8)/8)*8) == (min((v0*32) + ((((v1*500) + v2)/8) + -5), (((v1*500) + v2) + 515)/8)*-8))"
(((((((uint1)1 && ((((v0*36) + v1) + -4) <= (((v0*36) + v1) + -4))) && ((((v0*36) + v1) + 40) >= (((v0*36) + v1) + 40))) && ((((((v2*127) + v3) + v4) + 0) + -2) <= ((((v2*127) + v3) + v4) + -11))) && ((((((v2*127) + v3) + v4) + 3) + -2) >= ((((v2*127) + v3) + v4) + -2))) && (0 <= 0)) && (2 >= 2))
(((((((uint1)1 && ((v0 + 0) <= (0 + v0))) && ((v0 + 3) >= (((4 + 0) - 1) + v0))) && (0 <= 0)) && (0 >= 0)) && (v1 <= v1)) && (v1 >= v1))
"(max(min(min(v1 + v2, 2000) + -1, (v4 + v3) - 1) + 1, min(max(max(max(max(0, 0), max(v2, 0)), max(v2, 0)), v4), v3 + v4)) <= min(max(max(max(max(0, 0), max(v2, 0)), max(v2, 0)), v4), v3 + v4))"
(((((((uint1)1 && (((((v0*4) + v1) + -2) + 0) <= ((((v0*4) + 0) + v1) + -2))) && (((((v0*4) + v1) + ((6 + -2) - 1)) + 3) >= ((((v0*4) + ((4 + 0) - 1)) + v1) + ((6 + -2) - 1)))) && (0 <= 0)) && ((8 - 1) >= (8 - 1))) && (((v2*2) + v3) <= ((v2*2) + v3))) && (((v2*2) + v3) >= ((v2*2) + v3)))
"(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (((min(v2*63, 62) + v3) + v4) <= ((min(v2*63, 62) + v3) + v4))) && (((min(v2*63, 62) + v3) + v4) >= ((min(v2*63, 62) + v3) + v4))) && (v5 <= v5)) && (v5 >= v5))"
(((((((uint1)1 && (((((v0*4) + v1) + 0) + -4) <= ((((v0*4) + 0) + v1) + -4))) && (((((v0*4) + v1) + 3) + -4) >= ((((v0*4) + ((4 + 0) - 1)) + v1) + -4))) && (0 <= 0)) && (0 >= 0)) && (0 <= 0)) && (3 >= ((4 + 0) - 1)))
(((((((uint1)1 && ((((((0*4) + v0) + -5) + 0) + -19) <= (((((0*4) + 0) + v0) + -5) + -19))) && ((((((125*4) + v0) + ((6 + -5) - 1)) + 3) + -19) >= (((((125*4) + ((4 + 0) - 1)) + v0) + ((6 + -5) - 1)) + -19))) && ((-5 + v1) <= (-5 + v1))) && ((((6 + -5) - 1) + v1) >= (((6 + -5) - 1) + v1))) && (v2 <= v2)) && (v2 >= v2))
"(max(min((v1 + v2) + -1, ((((v3*126) + v4) + -4) + 135) - 1) + 1, min(max(v2, ((v3*126) + v4) + -4), 135 + (((v3*126) + v4) + -4))) <= min(max(v2, ((v3*126) + v4) + -4), 135 + (((v3*126) + v4) + -4)))"
((((((v0 + v1)/8)*2) + v2) + 10) == (((((((v0 + v1)/8)*2) + v2) + 10) + (-10 + 11)) - 1))
"((((max(min((v1*-500) + v2, 500), 0) + (v1*500))/4)*4) == (max(min((v1*-500) + v2, 500), 0) + (v1*500)))"
"(max(0, min((((min(v0*63, 62) + (min(v1*125, v2 + -125) + v3)) % 4) + 54)/16, (0 + 5) - 1) + 1) <= 0)"
"(((min(v0*42, 83) + ((v1*14) + v2)) + v3) < ((min(v0*42, 83) + ((v1*14) + (v2 + 1))) + v3))"
"(((min(v0, 494) + v1) + -505) == ((((min(v0, 494) + v1) + -505) + (max(v0, 494) + 18)) - 1))"
(((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && (((((v1*4) + v2) + 0) + -10) <= ((((v1*4) + v2) + 0) + -10))) && (((((v1*4) + v2) + 3) + -10) >= ((((v1*4) + v2) + ((4 + 0) - 1)) + -10))) && (v3 <= v3)) && (v3 >= v3))
(((((((uint1)1 && ((((((v0*4) + v1)*4) + v2) + 0) <= ((((v0*4) + v1)*4) + v2))) && ((((((v0*4) + v1)*4) + v2) + 3) >= (((((v0*4) + v1)*4) + 3) + v2))) && (v3 <= v3)) && (((v4 + v3) + -1) >= ((v4 + v3) - 1))) && (v5 <= v5)) && (((v6 + v5) + -1) >= ((v6 + v5) - 1)))
(((v0 + 344)/335) != 0)
"(((max(min((v1*-252) + ((max(v2/252, 0)*-252) + v3), 252), 0)/4)*4) == max(min((v1*-252) + ((max(v2/252, 0)*-252) + v3), 252), 0))"
"(0 == ((0 + (20 - (max(min((v0*5) + v1, 10), 9)*2))) - 1))"
"(max(min(min(min(min(min(min(min(min((v4 + -121)/126, (min((v6 + v5) - v3, min(1997 - v3, v4) + 3) + -124)/126), (min((v6 + v5) - v3, min(1997 - v3, v4) + 3) + -124)/126), (min((v6 + v5) - v3, min(1997 - v3, v4) + 3) + -124)/126), (min(min(2122 - v3, v4), ((v6 + v5) - v3) + 122) + -121)/126), (min(min(2122 - v3, v4), ((v6 + v5) - v3) + 122) + -121)/126), (min(min(2122 - v3, v4), ((v6 + v5) - v3) + 122) + -121)/126), (1876 - v3)/126), (0 + ((v4 + 130)/126)) - 1) + 1, min(max(max(max(max(max(max(max(((max(v5, 0) - v3) + 127)/126, ((max(v5, 0) - v3) + 127)/126), ((max(v5, 0) - v3) + 127)/126), (2 - v3)/126), (2 - v3)/126), (2 - v3)/126), (127 - v3)/126), 0), ((v4 + 130)/126) + 0)) <= min(max(max(max(max(max(max(max(((max(v5, 0) - v3) + 127)/126, ((max(v5, 0) - v3) + 127)/126), ((max(v5, 0) - v3) + 127)/126), (2 - v3)/126), (2 - v3)/126), (2 - v3)/126), (127 - v3)/126), 0), ((v4 + 130)/126) + 0))"
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((15*4) + v0) + 3) >= (((((16 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (v3 <= v3)) && (v3 >= v3))
"(((1999 - max((v0*8) + v1, 1999)) + (max((v0*8) + v1, 1999) + -1991)) <= (1999 - max((v0*8) + v1, 1999)))"
"(((min(v0*3, 122) + v1) + v2) < ((min(v0*3, 122) + (v1 + 1)) + v2))"
"(((min(v0*32, 468)/4)*4) == min(v0*32, 468))"
(((((((uint1)1 && ((v0 + v1) <= (v0 + v1))) && ((v0 + v1) >= (v0 + v1))) && ((0 + v2) <= (0 + v2))) && ((3 + v2) >= (((4 + 0) - 1) + v2))) && (v3 <= v3)) && (v3 >= v3))
(((((((uint1)1 && (((((v0*4) + v1) + 0) + -4) <= ((((v0*4) + 0) + v1) + -4))) && (((((v0*4) + v1) + 3) + -4) >= ((((v0*4) + ((4 + 0) - 1)) + v1) + -4))) && (0 <= 0)) && (0 >= 0)) && (0 <= 0)) && (((25 + 0) - 1) >= ((25 + 0) - 1)))
(((v0 + 34)/32) != 0)
(((v0 + v1) + v2) >= (((v0 + v1) + v2) + 1))
(((((((uint1)1 && (((0 + (((v0*500) + v1) + -5)) + 3) <= (((v0*500) + v1) + -2))) && (((3 + (((v0*500) + v1) + 1000)) + 3) >= (((v0*500) + v1) + 502))) && (((v2 + v3) + 3) <= ((v2 + v3) + -2))) && (((v2 + v3) + 3) >= ((v2 + v3) + 3))) && (0 <= 0)) && (0 >= 0))
"(max(0, min((((min(v0*667, v1 + -667) + v2) % 8) + 650)/32, (0 + 22) - 1) + 1) <= 0)"
"((((min(v0*502, 501) + ((v1*251) + v2)) + v3) + 1) < (((min(v0*502, 501) + ((v1*251) + (v2 + 1))) + v3) + -2))"
(((((((uint1)1 && ((-2 + v0) <= (-2 + v0))) && ((((4 + -2) - 1) + v0) >= (((4 + -2) - 1) + v0))) && ((((((0*4) + v1) + -2) + 0) + -8) <= (-2 + (v1 + -8)))) && ((((((((35 + 0) - 1)*4) + v1) + ((4 + -2) - 1)) + 3) + -8) >= (((4 + -2) - 1) + (v1 + 131)))) && (v2 <= v2)) && (v2 >= v2))
"(((min(v0*63, 62) + v1) + 62) < (((v0 + 1)*63) + v1))"
"(v0 < min(max(v1 + -1, v0 + 1), (v0 + 1) + -1))"
"(max(min(max(((((v0 + v1) + v2)*4) + v3) + -4, ((v2 + v1)*4) + v4), 1999), max((((v0 + v1) + v2)*4) + v5, 5) + -4) >= ((max((((v0 + v1) + v2)*4) + (v5 - 1), 4) + -4) + 1))"
(((((((uint1)1 && (((0 + ((v0*128) + v1)) + -3) <= (((v0*128) + v1) + -3))) && (((3 + (((v0*128) + v1) + 124)) + -3) >= ((((v0*128) + 127) + v1) + -3))) && ((((v2*2) + v3) + v4) <= (((v2*2) + v3) + v4))) && ((((v2*2) + v3) + v4) >= (((v2*2) + v3) + v4))) && ((((v5*3) + v6)*8) <= ((v5*24) + (v6*8)))) && (((((v5*3) + v6)*8) + 7) >= ((v5*24) + ((v6*8) + 7))))
(((v0*4) + v1) >= ((((v0 - 1)*4) + v1) + 1))
"(((max(min((v2*-64) + max(max(-3 - (v1*4), (v1*4) + -2123), 0), -64), -132)/4)*4) == max(min((v2*-64) + max(max(-3 - (v1*4), (v1*4) + -2123), 0), -64), -132))"
"(max(0, min(((max(min((min(v0*3, 125) + v1)*2, 493), -6) - max(min((min(v0*3, 125) + v1)*2, 499), 0)) + 3)/4, (0 + ((v2 + 10)/4)) - 1) + 1) <= 0)"
(((v0 % 500) + 499) >= 0)
((((v0*4) + v1) + v2) < (((v0*4) + v1) + (v2 + 1)))
"(((((((uint1)1 && ((v0 + -3) <= (((((0*4) + v0) + -2) + 0) + -1))) && (((v0 + 263) + -3) >= (((((62*4) + v0) + ((11 + -2) - 1)) + 3) + -1))) && (v1 <= v1)) && ((((((max(v2, 10)*-3) + 30) + 3) + v1) - 1) >= (((((max(v2, 10)*-3) + 30) + 3) + v1) - 1))) && (v3 <= v3)) && (v3 >= v3))"
(((((((uint1)1 && ((((0*4) + ((((v0*2) + v1)*4) + ((v2*64) + v3))) + 0) <= ((((v0*2) + v1)*4) + ((v2*64) + v3)))) && ((((0*4) + ((((v0*2) + v1)*4) + ((v2*64) + v3))) + 3) >= (((((v0*2) + v1)*4) + ((v2*64) + v3)) + 3))) && ((v4/4) <= (v4/4))) && ((((v5 + v4) + 3)/4) >= (((v5 + v4) + 3)/4))) && (v6 <= v6)) && (v6 >= v6))
(((v0/63) + 1) != 0)
((((v0*3) + ((v1*9) + v2)) + 5) < ((((v0 + 1)*3) + ((v1*9) + v2)) + -2))
"((((max(min(min(min(v4*8, 13) + (((v3/8) + (v5*16)) + 2), ((v2 + v3) + 7)/8)*2, 497), -2) + (max(min(min(min(v4*8, 13) + (((v3/8) + (v5*16)) + 2), ((v2 + v3) + 7)/8)*2, 513), 14)*-1))/4)*4) == (max(min(min(min(v4*8, 13) + (((v3/8) + (v5*16)) + 2), ((v2 + v3) + 7)/8)*2, 497), -2) + (max(min(min(min(v4*8, 13) + (((v3/8) + (v5*16)) + 2), ((v2 + v3) + 7)/8)*2, 513), 14)*-1)))"
"(0 == ((0 + ((max(min(v0, -11), -13)*2) + 26)) - 1))"
"(max(min(((v1 + v2) + -1)/4, (((((v3*2) + v4)*8) + v5) + (v6 + 1)) - 1) + 1, min(max((v2 + 3)/4, (((v3*2) + v4)*8) + v5), (v6 + 1) + ((((v3*2) + v4)*8) + v5))) <= min(max((v2 + 3)/4, (((v3*2) + v4)*8) + v5), (v6 + 1) + ((((v3*2) + v4)*8) + v5)))"
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (((v2 + v3)*4) <= ((v2 + v3)*4))) && (((v2 + v3)*4) >= ((v2 + v3)*4))) && (v4 <= v4)) && (v4 >= v4))
"(max(min(min(min((((v1 + v2) - max(min((v3*64) + v4, 2001), 2)) + -2)/4, ((min(max(min(min(v3*64, 61) + v4, 1933), -66) + 64, v1 + v2) - max(min((v3*64) + v4, 2001), 2)) + 1)/4), ((max(min(min(v3*64, 61) + v4, 1933), -66) - max(min((v3*64) + v4, 2001), 2)) + 65)/4), (0 + ((v5/4) + 18)) - 1) + 1, min(max(((v2 - max(min((v3*64) + v4, 2001), 2)) + 5)/4, 0), ((v5/4) + 18) + 0)) <= min(max(((v2 - max(min((v3*64) + v4, 2001), 2)) + 5)/4, 0), ((v5/4) + 18) + 0))"
"(max(min(v0, 0), -15) == ((max(min(v0, 0), -15) + (5 - max(min(v0, 0), -15))) - 1))"
((((v0*126) + v1) + 126) < ((((v0 + 1)*126) + v1) + -2))
"(((((((uint1)1 && ((0 + ((((min(v1, 4) + v2) + -36)/16) + (v3*4))) <= ((0 + ((((min(v1, 4) + v2) + -4)/16) + (v3*4))) + -2))) && ((3 + ((((min(v1, 4) + v2) + 44)/16) + (v3*4))) >= ((((4 + 0) - 1) + ((((min(v1, 4) + v2) + -4)/16) + (v3*4))) + ((6 + -2) - 1)))) && (0 <= 0)) && ((8 - 1) >= (8 - 1))) && (v4 <= v4)) && (v4 >= v4))"
"(max(((v0*9) + v1) + v4, max(((v0*9) + v1) + v4, v5)) >= (min((((v0 - 1)*9) + v1) + v2, min((((v0 - 1)*9) + v1) + v2, v3)) + 1))"
(((((((uint1)1 && ((((((v0*4) + v1) + -5) + 0) + -503) <= (((((v0*4) + 0) + v1) + -5) + -503))) && ((((((v0*4) + v1) + ((6 + -5) - 1)) + 3) + -503) >= (((((v0*4) + ((4 + 0) - 1)) + v1) + ((6 + -5) - 1)) + -503))) && (((v2 + v3) % 8) <= ((v2 + v3) % 8))) && (((v2 + v3) % 8) >= ((v2 + v3) % 8))) && (v4 <= v4)) && (v4 >= v4))
"(max(min(v0, 0), -11) == ((max(min(v0, 0), -11) + (5 - max(min(v0, 0), -11))) - 1))"
(((((v0*8) + v1) + v2) + 5) < ((((v0*8) + (v1 + 1)) + v2) + -4))
"(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (((min(v2*8, 117) + v3) + v4) <= ((min(v2*8, 117) + v3) + v4))) && (((min(v2*8, 117) + v3) + v4) >= ((min(v2*8, 117) + v3) + v4))) && (v5 <= v5)) && (v5 >= v5))"
"(max(min(min(1999, min(v1 + v2, 2000) + -1), (v3 + 125) - 1) + 1, min(max(max(0, max(v2, 0)), v3), 125 + v3)) <= min(max(max(0, max(v2, 0)), v3), 125 + v3))"
(((((((uint1)1 && (0 <= 0)) && (0 >= 0)) && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (v2 <= v2)) && (v2 >= v2))
"(((max((((v0*2) + v1) + v2) + 1, (v3 + v2) + ((v4*2) + v1)) + v5) + -2) >= (((((v3 + v2) + (((v4 - 1)*2) + v1)) + v5) + -1) + 1))"
((((v0 + v1)*4) + v2) >= (((((v0 - 1) + v1)*4) + v2) + 1))
(((((((uint1)1 && (((((0*4) + v0) + 0) + -4) <= ((((0*4) + 0) + v0) + -4))) && (((((15*4) + v0) + 3) + -4) >= ((((15*4) + ((4 + 0) - 1)) + v0) + -4))) && (v1 <= v1)) && (v1 >= v1)) && (0 <= 0)) && (3 >= ((4 + 0) - 1)))
(((((((uint1)1 && ((0 + ((((v0*8) + v1)*8) + v2)) <= (((v0*64) + (v1*8)) + v2))) && ((3 + (((((v0*8) + v1)*8) + v2) + 4)) >= (((v0*64) + ((v1*8) + 7)) + v2))) && ((((0*500) + v3) + 0) <= (0 + v3))) && ((((1*500) + v3) + 499) >= (((1000 + 0) - 1) + v3))) && (v4 <= v4)) && (v4 >= v4))
"(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((124*4) + v0) + 3) >= (((((125 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && ((min(v1*63, 62) + v2) <= ((min(v1*63, 62) + 0) + v2))) && (((min(v1*63, 62) + v2) + 62) >= ((min(v1*63, 62) + ((63 + 0) - 1)) + v2))) && (v3 <= v3)) && (v3 >= v3))"
((((((v0 + v1) + v2) + v3)/4) + 1) <= ((((((v0 - 1) + v1) + v2) + v3)/4) - 1))
"((v0 + 1) < (min(max((v0 + 1) + 8, v1), (v0 + 1) + 5) + -7))"
(((((((uint1)1 && ((-10 + v0) <= (-10 + v0))) && ((((13 + -10) - 1) + v0) >= (((13 + -10) - 1) + v0))) && (((((v1 + v2)*4) + 0) + -7) <= ((((v1 + v2)*4) + 0) + -7))) && (((((v1 + v2)*4) + 3) + -7) >= ((((v1 + v2)*4) + ((4 + 0) - 1)) + -7))) && (v3 <= v3)) && (v3 >= v3))
"(max(((v0 % 8) + 23)/8, ((((min(v1*8, 117) + v0) + 15)/8) - min((min(v1*8, 117) + v0)/8, ((v0 + 15)/8) + v1)) + 1) <= 1024)"
(((v0*3) + v1) < ((v0*3) + (v1 + 1)))
"(max(min(min(min(min(min(min((v2/8) + -1, (v2/8) + -1), (min(min(2007 - v1, v2), ((v3 + v4) - v1) + 7)/8) + -1), (1992 - v1)/8), (1992 - v1)/8), (1996 - v1)/8), (0 + ((v2 + 7)/8)) - 1) + 1, min(max(max(max(0 - (v1/8), (3 - v1)/8), max(((v4 - v1) + 7)/8, 0 - (v1/8))), 0), ((v2 + 7)/8) + 0)) <= min(max(max(max(0 - (v1/8), (3 - v1)/8), max(((v4 - v1) + 7)/8, 0 - (v1/8))), 0), ((v2 + 7)/8) + 0))"
(((v0 + 133)/128) != 0)
(((((v0 + v1) + v2) + v3) + 5) <= ((((((v0 - 1) + v1) + v2) + v3) + -4) - 1))
"((((min(v0*42, 83) + (((v1*7) + v2)*3)) + v3) + 5) < (((min(v0*42, 83) + min(((v1*7) + (v2 + 1))*3, (max((v2 + 1)*3, -5) + (v1*21)) + 5)) + v3) + -2))"
"(max(min(min(min(min(min(min(min(min(min(((v4 - v5) + 7)/4, ((((v2 + v3)/4) - v5) + -2)/4), (((((v2 + v3) + -17)/4) - v5) + 2)/4), (((((v2 + v3) + -15)/4) - v5) + 2)/4), (((((v2 + v3) + -14)/4) - v5) + 2)/4), ((min((v2 + v3)/4, v4 + 6) - v5) + 1)/4), ((min(((v2 + v3) + -5)/4, v4 + 5) - v5) + 2)/4), ((min(((v2 + v3) + -3)/4, v4 + 5) - v5) + 2)/4), ((min(((v2 + v3) + -2)/4, v4 + 5) - v5) + 2)/4), (0 + ((min(((((v6 + v7) + -1)/4) - (v8*252)) - (v7/4), 251) + 14)/4)) - 1) + 1, min(max(max(max(max((((v3/4) - v5) + 5)/4, ((((v3 + -1)/4) - v5) + 5)/4), ((((v3 + 1)/4) - v5) + 5)/4), ((((v3 + 2)/4) - v5) + 5)/4), 0), ((min(((((v6 + v7) + -1)/4) - (v8*252)) - (v7/4), 251) + 14)/4) + 0)) <= min(max(max(max(max((((v3/4) - v5) + 5)/4, ((((v3 + -1)/4) - v5) + 5)/4), ((((v3 + 1)/4) - v5) + 5)/4), ((((v3 + 2)/4) - v5) + 5)/4), 0), ((min(((((v6 + v7) + -1)/4) - (v8*252)) - (v7/4), 251) + 14)/4) + 0))"
(((((((uint1)1 && (((((((v0/250)*2) + v1)*4) + 0) + -5) <= ((((((v0/250)*2) + v1)*4) + 0) + -5))) && (((((((v0/250)*2) + v1)*4) + 3) + -5) >= ((((((v0/250)*2) + v1)*4) + ((4 + 0) - 1)) + -5))) && (0 <= 0)) && (0 >= 0)) && (((v2*2) + v3) <= ((v2*2) + v3))) && (((v2*2) + v3) >= ((v2*2) + v3)))
(((v0 % 503) + 502) >= 0)
"(((((((uint1)1 && (((min(v0, 16) + v1) + -24) <= (-5 + ((min(v0, 16) + v1) + -19)))) && (((max(v0, 16) + (min(v0, 16) + v1)) + -10) >= (((6 + -5) - 1) + (((max(v0, 16) + 10) + ((min(v0, 16) + v1) + -19)) - 1)))) && ((((v2 + v3) + 0) + 12) <= (((((0*4) + 0) + v3) + v2) + -3))) && ((((v2 + v3) + 3) + 12) >= (((((((4 + 0) - 1)*4) + ((4 + 0) - 1)) + v3) + v2) + -3))) && (0 <= 0)) && (8 >= ((9 + 0) - 1)))"
"(max(0, min(((max(min(v0, 60), -64) - max(min(v0, 124), 0)) + 33)/32, (0 + ((v1/32) + 3)) - 1) + 1) <= 0)"
"(((max(min((v1*-1000) + (((v2/1000)*-1000) + v2), 1000), 0)/4)*4) == max(min((v1*-1000) + (((v2/1000)*-1000) + v2), 1000), 0))"
"(((((min(v0*63, 937) + v1) + v2)/4) + 1) < (((min(v0*63, 937) + (v1 + 1)) + v2)/4))"
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((249*4) + v0) + 3) >= (((((250 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && ((((0*63) + v1) + 0) <= (0 + v1))) && ((((1*63) + v1) + 62) >= (((125 + 0) - 1) + v1))) && (v2 <= v2)) && (v2 >= v2))
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= ((v0*4) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + v1) + 3))) && (v2 <= v2)) && (v2 >= v2)) && (0 <= 0)) && (2 >= 2))
"((((min((v0*12) + (((v1 + min((v2 + v3)*1000, v4 + -1000))/4) + 168), ((v1 + min((v2 + v3)*1000, v4 + -1000)) + 1003)/4)*-4)/4)*4) == (min((v0*12) + (((v1 + min((v2 + v3)*1000, v4 + -1000))/4) + 168), ((v1 + min((v2 + v3)*1000, v4 + -1000)) + 1003)/4)*-4))"
(((((((uint1)1 && ((((((v0*125) + 0)*4) + v1) + 0) <= ((v0*500) + v1))) && ((((((v0*125) + 124)*4) + v1) + 3) >= (((v0*500) + 499) + v1))) && ((v2 + v3) <= (v2 + v3))) && ((v2 + v3) >= (v2 + v3))) && (v4 <= v4)) && (v4 >= v4))
(((((((uint1)1 && ((((0*4) + ((v0/4) + (v1*4))) + 0) <= (0 + ((v0/4) + (v1*4))))) && ((((0*4) + ((v0/4) + (v1*4))) + 3) >= (((4 + 0) - 1) + ((v0/4) + (v1*4))))) && (v2 <= v2)) && (v2 >= v2)) && (v3 <= v3)) && (v3 >= v3))
"(((((((uint1)1 && ((((-5 + v0) + 0) + 3) <= ((0 + v0) + max(-5, -2)))) && ((((3 + v0) + 3) + 3) >= ((((4 + 0) - 1) + v0) + 3))) && ((-2 + v1) <= (-2 + v1))) && ((((6 + -2) - 1) + v1) >= (((6 + -2) - 1) + v1))) && (v2 <= v2)) && (v2 >= v2))"
(((((((uint1)1 && ((((v0*500) + v1) + -2) <= (((v0*500) + v1) + -2))) && ((((v0*500) + v1) + 502) >= (((v0*500) + v1) + 502))) && ((((v2 + v3) + 0) + 3) <= ((v2 + v3) + -2))) && ((((v2 + v3) + 3) + 3) >= ((v2 + v3) + 3))) && (0 <= 0)) && (0 >= 0))
(((((((uint1)1 && (((0 + (((v0*32) + v1) + -9)) + 5) <= (((v0*32) + v1) + -4))) && (((3 + (((v0*32) + v1) + 68)) + 5) >= (((v0*32) + v1) + 36))) && (((v2 + v3) + 5) <= ((v2 + v3) + -4))) && (((v2 + v3) + 5) >= ((v2 + v3) + 5))) && (0 <= 0)) && (2 >= 2))
"(max(0, min(((v0 % 4) + 511)/4, (0 + (((v0 % 4) + 515)/4)) - 1) + 1) <= 0)"
(((v0*3) + v1) < (((v0*3) + (v1 + 1)) + -2))
"(max(min(min(min((((v3 + v4)/4) - (v5*4)) + 4, ((v2 - v5)*4) + 51), ((min((v2*16) + 185, v3 + v4) + 19)/4) - (v5*4)), (0 + ((min((max(min((((v6 + v7) + -1)/125)*8, 113), -11) - (v8*32)) - max(min((v7/125)*8, 125), 1), 19)*4) + 52)) - 1) + 1, min(max((((v4 + 19)/4) - (v5*4)) + 1, 0), ((min((max(min((((v6 + v7) + -1)/125)*8, 113), -11) - (v8*32)) - max(min((v7/125)*8, 125), 1), 19)*4) + 52) + 0)) <= min(max((((v4 + 19)/4) - (v5*4)) + 1, 0), ((min((max(min((((v6 + v7) + -1)/125)*8, 113), -11) - (v8*32)) - max(min((v7/125)*8, 125), 1), 19)*4) + 52) + 0))"
(((((((uint1)1 && ((0 + v0) <= (((0*4) + 0) + v0))) && ((3 + (v0 + 24)) >= (((((7 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && ((v1*4) <= (v1*4))) && ((v1*4) >= (v1*4))) && (v2 <= v2)) && (v2 >= v2))
"((min(v0*9, 128) + ((v1*3) + v2)) < (min(v0*9, 128) + ((v1*3) + (v2 + 1))))"
"(max(0, min(((((v0*250) + v1) % 4) + 129)/128, (0 + (((((v0*250) + v1) % 4) + 381)/128)) - 1) + 1) <= 0)"
"((((max(min((v0*64) + (((((max(min(v1, 2), 0)*16) + v2)*2) + v3)*2), 499), 0)*4)/4)*4) == (max(min((v0*64) + (((((max(min(v1, 2), 0)*16) + v2)*2) + v3)*2), 499), 0)*4))"
"(((((((uint1)1 && ((((0*4) + (max((min(((((max(v0, 8) + 9)/4)*4) + (min(v0, 8) + v1)) + -14, v0 + v1) - max(v0, 8)) + 8, min(v0, 8) + v1) + -15)) + 0) <= (max(-7 - max(v0, 8), -2) + ((min(v0, 8) + v1) + -13)))) && ((((0*4) + (max(min(((((max(v0, 8) + 9)/4)*4) + (min(v0, 8) + v1)) + -14, v0 + v1) + 16, min(v0, 8) + v1) + -15)) + 3) >= (1 + min(min((((max(v0, 8) + 5)/4)*4) + (min(v0, 8) + v1), (v0 + v1) + 13) + -10, v0 + v1)))) && (((v2 + v3) + 125) <= (v3 + (v2 + -5)))) && (((v2 + v3) + 125) >= (v3 + ((131 + (v2 + -5)) - 1)))) && (v4 <= v4)) && (v4 >= v4))"
"(0 == ((0 + ((min(((min(max(min(v0, 124), 0) + (v1*32), max(min(v0, 60), -64) + 33)*2) - min((max(min(v0, 124), 0) + (v1*32))*2, 249)) - (v2*4), -60)*2) + 128)) - 1))"
"(max(0, min(70 - ((v0 % 4)*18), (0 + 18) - 1) + 1) <= 0)"
((v0 + -5) == (((v0 + -5) + 5) - 1))
(((((((uint1)1 && ((v0 + v1) <= (v0 + v1))) && ((v0 + v1) >= (v0 + v1))) && ((((0*4) + v2) + 0) <= (((0*4) + 0) + v2))) && ((((7*4) + v2) + 3) >= (((((8 + 0) - 1)*4) + ((4 + 0) - 1)) + v2))) && (0 <= 0)) && (0 >= 0))
"(((((((uint1)1 && ((v0/8) <= ((v0 + 0)/8))) && (((v0 + 3)/8) >= ((v0 + 3)/8))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && ((((0*4) + 0) + min(v3*69, 68)) <= min(v3*69, 68))) && ((((2*4) + 3) + (min(v3*69, 68) + 60)) >= (min(v3*69, 68) + 68)))"
"(((min(v0*2, 123) + v1) + v2) < ((min(v0*2, 123) + (v1 + 1)) + v2))"
"(max(min(499, ((v1*2) + 5) - 1) + 1, min(max(0, v1*2), 5 + (v1*2))) <= min(max(0, v1*2), 5 + (v1*2)))"
"(((max(min(v0*8, 125), 1)*2) + -2) == ((((max(min(v0*8, 125), 1)*2) + -2) + ((v1*2) + 26)) - 1))"
(((((((uint1)1 && (((0 + ((v0*504) + v1)) + -8) <= ((-5 + ((v0*504) + v1)) + -3))) && (((3 + (((v0*504) + v1) + 508)) + -8) >= ((((6 + -5) - 1) + (((v0*504) + v1) + 503)) + -3))) && ((((v2*252) + v3) + -8) <= (((((v2*252) + v3) + 0) + -5) + -3))) && ((((v2*252) + v3) + 248) >= (((((v2*252) + v3) + ((252 + 0) - 1)) + ((6 + -5) - 1)) + -3))) && (((v4*5) + v5) <= ((v4*5) + v5))) && (((v4*5) + v5) >= ((v4*5) + v5)))
((v0/125) <= (((v0 - 1)/125) - 1))
"(((((((uint1)1 && ((v0 + 0) <= (0 + v0))) && ((v0 + 3) >= (((4 + 0) - 1) + v0))) && (((min(v1*16, 109) + v2)/4) <= (((min(v1*16, 109) + 0) + v2)/4))) && ((((min(v1*16, 109) + v2) + 15)/4) >= (((min(v1*16, 109) + ((16 + 0) - 1)) + v2)/4))) && (v3 <= v3)) && (v3 >= v3))"
"((max(min(((v0*8) + v1) - min(((v2 + v1) - (v3*126)) - (v4*32), v1 + 22), 14), 7) + -16) >= (((max(min(((v0*8) + v1) - min(((v2 + v1) - (v3*126)) - (v4*32), v1 + 22), 14), 7) + -16) + (18 - max(min(((v0*8) + v1) - min(((v2 + v1) - (v3*126)) - (v4*32), v1 + 22), 14), 7))) - 1))"
(((v0*4) + (v1 + v2)) >= (((v0*4) + ((v1 - 1) + v2)) + 1))
(((v0 + v1) + -5) < (((v0 + 1) + v1) + -17))
((((v0 + 664) % 668) + 671) >= 0)
(((((v0*503) + v1) + v2) + -3) < ((((v0*503) + v1) + (v2 + 1)) + -8))
"(max(min(124, ((v2 + -1) + (((v3*8) + ((v4*16) - max(v3*8, (((v4*2) + v3)*8) + 5))) + 21)) - 1) + 1, min(max(0, v2 + -1), (((v3*8) + ((v4*16) - max(v3*8, (((v4*2) + v3)*8) + 5))) + 21) + (v2 + -1))) <= min(max(0, v2 + -1), (((v3*8) + ((v4*16) - max(v3*8, (((v4*2) + v3)*8) + 5))) + 21) + (v2 + -1)))"
"(max(min(min(min((((v1 + v2) - max(min(v5, 2001), 2)) + -2)/4, ((min(max(min(min(v3*12, 988) + v4, 1985), -14) + 12, v1 + v2) - max(min(v5, 2001), 2)) + 1)/4), ((max(min(min(v3*12, 988) + v4, 1985), -14) - max(min(v5, 2001), 2)) + 13)/4), (0 + ((v6/4) + 5)) - 1) + 1, min(max(((v2 - max(min(v5, 2001), 2)) + 5)/4, 0), ((v6/4) + 5) + 0)) <= min(max(((v2 - max(min(v5, 2001), 2)) + 5)/4, 0), ((v6/4) + 5) + 0))"
(((v0 + v1) + v2) >= (((v0 + v1) + (v2 - 1)) + 1))
"(((((((uint1)1 && ((0 + (((min(v0, 4) + v1) + -36)/16)) <= ((0 + (((min(v0, 4) + v1) + -4)/16)) + -2))) && ((3 + ((((min(v0, 4) + v1) + 44)/16) + ((v2/4)*4))) >= ((((4 + 0) - 1) + ((((min(v0, 4) + v1) + -4)/16) + ((v2/4)*4))) + ((6 + -2) - 1)))) && ((-2 + v3) <= (-2 + v3))) && ((((6 + -2) - 1) + v3) >= (((6 + -2) - 1) + v3))) && (v4 <= v4)) && (v4 >= v4))"
"(((v0*8) + -5) == ((((v0*8) + -5) + ((min(v1, 15)*8) + 11)) - 1))"
(((v0*8) + -204) == ((((v0*8) + -204) + (208 - (v0*8))) - 1))
"(((((((uint1)1 && ((0 + v0) <= (((0*4) + 0) + v0))) && ((3 + (v0 + 12)) >= (((((4 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && ((min(v1*3, 997) + v2) <= ((min(v1*3, 997) + 0) + v2))) && (((min(v1*3, 997) + v2) + 2) >= ((min(v1*3, 997) + ((3 + 0) - 1)) + v2))) && (v3 <= v3)) && (v3 >= v3))"
(((v0 + 503)/500) != 0)
"((max(min(((v0*32) - min((v1 + v2) - (v3*126), (min(v0*32, 94) + v2) + 22)) + ((v4*8) + v2), 14), 7) + -16) >= (((max(min(((v0*32) - min((v1 + v2) - (v3*126), (min(v0*32, 94) + v2) + 22)) + ((v4*8) + v2), 14), 7) + -16) + (18 - max(min(((v0*32) - min((v1 + v2) - (v3*126), (min(v0*32, 94) + v2) + 22)) + ((v4*8) + v2), 14), 7))) - 1))"
"(max(min((217 - v0)/32, (0 + 2) - 1) + 1, min(max(0 - (v0/32), 0), 2 + 0)) <= min(max(0 - (v0/32), 0), 2 + 0))"
(((((((uint1)1 && ((((((v0*4) + v1)*4) + v2) + 0) <= ((((v0*4) + v1)*4) + v2))) && ((((((v0*4) + v1)*4) + v2) + 3) >= (((((v0*4) + v1)*4) + 3) + v2))) && ((v3 + v4) <= (v3 + v4))) && ((v3 + v4) >= (v3 + v4))) && (v5 <= v5)) && (v5 >= v5))
(((v0 + 512)/504) != 0)
"(max(-1000 - v0, v0 + -1) >= 0)"
(((v0 + 66)/64) != 0)
"(max(0, min((((min(v0*128, v1 + -128) + v2) % 8) + 111)/32, (0 + 5) - 1) + 1) <= 0)"
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((62*4) + v0) + 3) >= (((62*4) + ((4 + 0) - 1)) + v0))) && (v1 <= (0 + v1))) && ((v1 + 7) >= (((8 + 0) - 1) + v1))) && (v2 <= v2)) && (v2 >= v2))
"(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (((min(v2*3, 122) + v3) + v4) <= ((min(v2*3, 122) + v3) + v4))) && (((min(v2*3, 122) + v3) + v4) >= ((min(v2*3, 122) + v3) + v4))) && (v5 <= v5)) && (v5 >= v5))"
"(max(min(min(1999, min(v1 + v2, 2000) + -1), ((((v4*126) + v5) + -10) + (min(v3, 111) + 18)) - 1) + 1, min(max(max(0, max(v2, 0)), ((v4*126) + v5) + -10), (min(v3, 111) + 18) + (((v4*126) + v5) + -10))) <= min(max(max(0, max(v2, 0)), ((v4*126) + v5) + -10), (min(v3, 111) + 18) + (((v4*126) + v5) + -10)))"
(((v0*8) + (v1 + v2)) >= (((v0*8) + ((v1 - 1) + v2)) + 1))
(((((((uint1)1 && ((((v0*4) + v1) + v2) <= (((v0*4) + v1) + v2))) && ((((v0*4) + v1) + v2) >= (((v0*4) + v1) + v2))) && ((((0*4) + v3) + 0) <= (((0*4) + 0) + v3))) && ((((7*4) + v3) + 3) >= (((7*4) + ((4 + 0) - 1)) + v3))) && (((v4*16) + v5) <= ((v4*16) + v5))) && (((v4*16) + v5) >= ((v4*16) + v5)))
(((v0/251) + 1) != 0)
"(max(min(248, (v1 + 8) - 1) + 1, min(max(0, v1), 8 + v1)) <= min(max(0, v1), 8 + v1))"
(((((v0 % (((v1*64) + 176)/72))*72)/4)*4) == ((v0 % (((v1*64) + 176)/72))*72))
(v0 >= (((v0 - 1) + 4) + 1))
"(((((((uint1)1 && ((((-5 + v0) + 0) + 3) <= ((0 + v0) + max(-5, -2)))) && ((((3 + v0) + 3) + 3) >= ((((4 + 0) - 1) + v0) + 3))) && (((v1 + v2) % 8) <= ((v1 + v2) % 8))) && (((v1 + v2) % 8) >= ((v1 + v2) % 8))) && (v3 <= v3)) && (v3 >= v3))"
(((((((uint1)1 && (((((v0*17) + v1) + v2) + -10) <= ((((v0*17) + v1) + v2) + -10))) && (((((v0*17) + v1) + v2) + -10) >= ((((v0*17) + v1) + v2) + -10))) && (((((v3*4) + v4) + 0) + -10) <= ((((v3*4) + v4) + 0) + -10))) && (((((v3*4) + v4) + 3) + -10) >= ((((v3*4) + v4) + ((4 + 0) - 1)) + -10))) && (v5 <= v5)) && (v5 >= v5))
(((v0*4) + 3) < (((v0 + 1)*4) + -4))
"(max(min(1999, ((v1*4) + 32) - 1) + 1, min(max(0, v1*4), 32 + (v1*4))) <= min(max(0, v1*4), 32 + (v1*4)))"
(0 == ((0 + ((((((v0 + v1) % 250) + 124)/250)*16) + 23)) - 1))
(((((((uint1)1 && (((v0*2) + v1) <= ((v0*2) + v1))) && (((v0*2) + v1) >= ((v0*2) + v1))) && (((((v2*16) + v3)*2) + -2) <= (((((0*2) + ((v2*16) + v3))*2) + 0) + -2))) && ((((((v2*16) + v3)*2) + 31) + -2) >= (((((0*2) + (((v2*16) + v3) + 14))*2) + 3) + -2))) && (((v4*2) + v5) <= ((v4*2) + v5))) && (((v4*2) + v5) >= ((v4*2) + v5)))
(((((((uint1)1 && (((0 + (v0/16)) + -2) <= ((((0*4) + ((v0/16) + -5)) + 0) + 3))) && (((3 + ((v0/16) + ((((v0 % 16) + 379)/64)*4))) + -2) >= ((((0*4) + ((v0/16) + ((((v0 % 16) + 251)/64)*4))) + 3) + 3))) && ((((v1/125)*8) + -1) <= (-2 + (((v1/125)*8) + 1)))) && (((((((v1 % 125) + 124)/125) + (v1/125))*8) + 11) >= (((6 + -2) - 1) + (((((((v1 % 125) + 124)/125)*8) + 8) + (((v1/125)*8) + 1)) - 1)))) && ((v2*8) <= ((v2*8) + 0))) && (((v2*8) + 7) >= ((v2*8) + ((8 + 0) - 1))))
"(max(0, min(33 - ((v0 % 5)*7), (0 + 7) - 1) + 1) <= 0)"
(((v0 + v1) + -16) >= ((((v0 + v1) + -16) + 143) - 1))
"((v0 + 1) < (min(max(min(v1*4, 1999), (v0 + 1) + 6), (v0 + 1) + 3) + -5))"
"(((((((uint1)1 && ((v0 + v1) <= (v0 + v1))) && ((v0 + v1) >= (v0 + v1))) && (((v2 + v3) % 8) <= ((v2 + v3) % 8))) && (((v2 + v3) % 8) >= ((v2 + v3) % 8))) && (((v4*4) + 0) <= (v4*4))) && (((v4*4) + 3) >= (min(v4*4, 5) + 3)))"
(((((v0 + v1) + v2)/4) + 1) <= (((((v0 - 1) + v1) + v2)/4) - 1))
(((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && ((0 + (v1/4)) <= (0 + (v1/4)))) && ((3 + ((v1/4) + 28)) >= (((4 + 0) - 1) + ((v1/4) + 28)))) && (((v2*2) + v3) <= ((v2*2) + v3))) && (((v2*2) + v3) >= ((v2*2) + v3)))
"((((((min(v0*125, v1 + -125) + v2)/4)*4)/4)*4) == (((min(v0*125, v1 + -125) + v2)/4)*4))"
"(((((((uint1)1 && (((((0*4) + (((v0*32) + v1) + -5)) + 0) + -1) <= ((-2 + ((v0*32) + v1)) + -4))) && (((((0*4) + (((v0*32) + v1) + 28)) + 3) + -1) >= ((((6 + -2) - 1) + (((v0*32) + v1) + 31)) + -4))) && ((max(v2*8, v3 + 4) + -1) <= (-2 + v3))) && ((v3 + 3) >= (((6 + -2) - 1) + v3))) && (v4 <= v4)) && (v4 >= v4))"
((((v0*2) + v1)*2) >= (((((v0*2) + v1)*2) + 2) - 1))
"(0 == ((0 + ((max(min(max(min((((v0 + v1) + -1)/125)*8, 113), -11) - v2, -11), -13)*2) + 26)) - 1))"
((((v0*4) + 68)/63) != 0)
(((((((uint1)1 && (((((((v0/250)*2) + v1)*4) + 0) + -5) <= ((((((v0/250)*2) + v1)*4) + 0) + -5))) && (((((((v0/250)*2) + v1)*4) + 3) + -5) >= ((((((v0/250)*2) + v1)*4) + ((4 + 0) - 1)) + -5))) && ((((v2 + v3)*8) + -5) <= ((((v2 + v3)*8) + 0) + -5))) && ((((v2 + v3)*8) + 2) >= ((((v2 + v3)*8) + ((8 + 0) - 1)) + -5))) && (v4 <= v4)) && (v4 >= v4))
(((v0 + 269)/252) != 0)
((-30 - (v0*2)) >= (499 - (v0*2)))
(((((((uint1)1 && ((((((v0*4) + v1)*4) + v2) + 0) <= ((((v0*4) + v1)*4) + v2))) && ((((((v0*4) + v1)*4) + v2) + 3) >= (((((v0*4) + v1)*4) + 3) + v2))) && (0 <= 0)) && (0 >= 0)) && (v3 <= v3)) && (v3 >= v3))
"(((min((v0*4) + ((((v1/250)*2)*4) + -5), (((v1 + 999)/250)*8) + -1)/8)*8) == min((v0*4) + ((((v1/250)*2)*4) + -5), (((v1 + 999)/250)*8) + -1))"
"(((((((uint1)1 && ((((max(-3*4, -9) + v0) + 0) + 5) <= (v0 + -4))) && ((((max(15*4, -9) + v0) + 3) + 5) >= (v0 + 68))) && ((((min(v1*14, 53) + v2) + v3) + 5) <= (((min(v1*14, 53) + v2) + v3) + -4))) && ((((min(v1*14, 53) + v2) + v3) + 5) >= (((min(v1*14, 53) + v2) + v3) + 5))) && (0 <= 0)) && (2 >= 2))"
"(max(min(1999, ((((v1*252) + v2) + -10) + (v3 + 18)) - 1) + 1, min(max(0, ((v1*252) + v2) + -10), (v3 + 18) + (((v1*252) + v2) + -10))) <= min(max(0, ((v1*252) + v2) + -10), (v3 + 18) + (((v1*252) + v2) + -10)))"
((v0 + -5) >= ((v0 - 1) + 1))
(((v0 + 258)/256) != 0)
"((v0 + 1) < (min(max(min(((min(v1, 4) + v2)/4)*4, 2003), (v0 + 1) + 8), (v0 + 1) + 4) + -7))"
"(max(0, min(((max(min(v0*8, 113), -11) - max(min(v0*8, 125), 1)) + 5)/8, (0 + ((v1 + 20)/8)) - 1) + 1) <= 0)"
"(((((((uint1)1 && ((((v0 + -68) + 0) + 63) <= (max(-68, -5) + v0))) && ((((v0 + 1) + 3) + 63) >= (1 + (v0 + 63)))) && ((((min(v1*2, 123) + v2) + v3) + 1) <= (v3 + (min(v1*2, 123) + v2)))) && ((((min(v1*2, 123) + v2) + v3) + 1) >= (v3 + ((2 + (min(v1*2, 123) + v2)) - 1)))) && (v4 <= v4)) && (v4 >= v4))"
"(((((((uint1)1 && (((((0*4) + (((min(v0, 500) + v1)/4) + (v2*4))) + 0) + -125) <= ((0 + (((min(v0, 500) + v1)/4) + (v2*4))) + -125))) && (((((0*4) + (((min(v0, 500) + v1)/4) + (v2*4))) + 3) + -125) >= ((((4 + 0) - 1) + (((min(v0, 500) + v1)/4) + (v2*4))) + -125))) && (v3 <= (0 + v3))) && ((v3 + 8) >= (((9 + 0) - 1) + v3))) && (0 <= 0)) && (((48 + 0) - 1) >= ((48 + 0) - 1)))"
(((((((uint1)1 && ((v0 + -15) <= (v0 + -15))) && ((v0 + 25) >= (v0 + 25))) && ((((((v1*34) + v2) + v3) + 0) + -2) <= ((((v1*34) + v2) + v3) + -11))) && ((((((v1*34) + v2) + v3) + 3) + -2) >= ((((v1*34) + v2) + v3) + -2))) && (0 <= 0)) && (2 >= 2))
(((((((uint1)1 && (((((v0*4) + v1) + -2) + 0) <= ((((v0*4) + 0) + v1) + -2))) && (((((v0*4) + v1) + ((6 + -2) - 1)) + 3) >= ((((v0*4) + ((4 + 0) - 1)) + v1) + ((6 + -2) - 1)))) && (((v2 + v3) % 8) <= ((v2 + v3) % 8))) && (((v2 + v3) % 8) >= ((v2 + v3) % 8))) && (v4 <= v4)) && (v4 >= v4))
(((((((uint1)1 && ((v0*8) <= (v0*8))) && ((v0*8) >= (v0*8))) && ((0 + (v1 + -1)) <= (0 + (v1 + -1)))) && ((3 + (v1 + 60)) >= (((4 + 0) - 1) + (v1 + 60)))) && (v2 <= v2)) && (v2 >= v2))
"(((((((uint1)1 && ((max((min(v1*7, 6) + (max(min(v1*7, 12), 6) + (((v2*63) + v3)*4))) + -6, (v1*7) + (((v2*63) + v3)*4)) + -21) <= (((v1*7) + -10) + max((max(min(v1*7, 12), 6) + (((v2*63) + v3)*4)) + -23, (((v2*63) + v3)*4) + -11)))) && ((min(v1*7, 6) + v4) >= ((min(v1*7, 6) + -4) + (v4 + 4)))) && (((((v5 + 0)*4) + 0) + -7) <= ((((v5 + 0)*4) + 0) + -7))) && (((((v5 + (34 - max(v6*8, 25)))*4) + 3) + -7) >= ((((v5 + (34 - max(v6*8, 25)))*4) + ((4 + 0) - 1)) + -7))) && (v7 <= v7)) && (v7 >= v7))"
((-6 - (((v0*4) + v1)*2)) >= (499 - (((v0*4) + v1)*2)))
"(((max(min((v0*-64) + v1, 64), 0)/4)*4) == max(min((v0*-64) + v1, 64), 0))"
"(((((((uint1)1 && (0 <= 0)) && ((8 - 1) >= (8 - 1))) && (((v0 + v1) % 8) <= ((v0 + v1) % 8))) && (((v0 + v1) % 8) >= ((v0 + v1) % 8))) && (((v2*4) + 0) <= (v2*4))) && (((v2*4) + 3) >= (min(v2*4, 5) + 3)))"
"(max(min((v1 + v2) + -1, (((v3*32) + -17) + 679) - 1) + 1, min(max(v2, (v3*32) + -17), 679 + ((v3*32) + -17))) <= min(max(v2, (v3*32) + -17), 679 + ((v3*32) + -17)))"
(((((((uint1)1 && (((((v0*4) + v1) + 0) + -2) <= ((((v0*4) + 0) + v1) + -2))) && (((((v0*4) + v1) + 3) + -2) >= ((((v0*4) + ((4 + 0) - 1)) + v1) + -2))) && ((v2 + v3) <= (v2 + v3))) && ((v2 + v3) >= (v2 + v3))) && (((v4*6) + v5) <= ((v4*6) + v5))) && (((v4*6) + v5) >= ((v4*6) + v5)))
"((((max(min((v0*16) + (v1*2), 499), 0)*2)/2)*2) == (max(min((v0*16) + (v1*2), 499), 0)*2))"
"((((((v0*2) + v1)*4) + v2) + 4) < ((min(((v0*2) + (v1 + 1))*4, (max((v1 + 1)*4, -6) + (v0*8)) + 6) + v2) + -5))"
"(max(min(1999, (((min(v1*32, 31) + v2) + -2) + 37) - 1) + 1, min(max(0, (min(v1*32, 31) + v2) + -2), 37 + ((min(v1*32, 31) + v2) + -2))) <= min(max(0, (min(v1*32, 31) + v2) + -2), 37 + ((min(v1*32, 31) + v2) + -2)))"
((-6 - (((v0*4) + v1)*2)) == (499 - (((v0*4) + v1)*2)))
(((((v0 % (((v1*64) + 140)/36))*36)/4)*4) == ((v0 % (((v1*64) + 140)/36))*36))
(((((((uint1)1 && ((0 + v0) <= (0 + v0))) && ((3 + v0) >= (((4 + 0) - 1) + v0))) && ((v1*4) <= (v1*4))) && ((v1*4) >= (v1*4))) && (v2 <= v2)) && (v2 >= v2))
((((((v0/4) + v1)*4) + v2) + -7) < (((((v0/4) + v1)*4) + (v2 + 1)) + -7))
"(max(min(min(min(min(((v1 + v2)/4) + 1, ((v1 + v2)/4) + 1), ((v1 + v2) + -2)/4), ((v1 + v2) + -2)/4), (((v3*8) + -3) + 169) - 1) + 1, min(max((v2/4) + 2, (v3*8) + -3), 169 + ((v3*8) + -3))) <= min(max((v2/4) + 2, (v3*8) + -3), 169 + ((v3*8) + -3)))"
(((v0 + 136)/130) != 0)
"(max(min(min(min(1999, 1999), min(v1 + v2, 2000) + -1), (((((v4/5)*672) + v5) + -10) + (min(v3, 657) + 18)) - 1) + 1, min(max(max(max(0, 0), max(v2, 0)), (((v4/5)*672) + v5) + -10), (min(v3, 657) + 18) + ((((v4/5)*672) + v5) + -10))) <= min(max(max(max(0, 0), max(v2, 0)), (((v4/5)*672) + v5) + -10), (min(v3, 657) + 18) + ((((v4/5)*672) + v5) + -10)))"
"(max(min(124, ((v1 + -2) + 9) - 1) + 1, min(max(0, v1 + -2), 9 + (v1 + -2))) <= min(max(0, v1 + -2), 9 + (v1 + -2)))"
"(max(0, min(min((((v3 + v4) - max(min(v5, 1999), 0))/4) + -1, (max(min((v0*4) + v1, min(v2 + v1, 1997) + 1), -1) - max(min((v0*4) + v1, min(v2 + v1, 2000) + 1), 2))/4), (0 + ((v6 + 7)/4)) - 1) + 1) <= 0)"
(((((((uint1)1 && ((0 + v0) <= (0 + v0))) && ((3 + (v0 + 12)) >= (3 + (v0 + 12)))) && ((((v1*2) + v2) + v3) <= (((v1*2) + v2) + v3))) && ((((v1*2) + v2) + v3) >= (((v1*2) + v2) + v3))) && (0 <= 0)) && (2 >= 2))
"((((min(((v0 % (((v1*4) + 507)/502))*502) + (((v2/4)*4) + 496), (((v3 + v2) + 3)/4)*4) - ((v0 % (((v1*4) + 507)/502))*502))/2)*2) == (min(((v0 % (((v1*4) + 507)/502))*502) + (((v2/4)*4) + 496), (((v3 + v2) + 3)/4)*4) - ((v0 % (((v1*4) + 507)/502))*502)))"
(((((((uint1)1 && ((((((v0*4) + v1)*4) + 0) + -4) <= ((((((v0*4) + v1) + 0)*4) + 0) + -4))) && ((((((v0*4) + v1)*4) + 15) + -4) >= ((((((v0*4) + v1) + 3)*4) + 3) + -4))) && (((v2*4) + v3) <= ((v2*4) + v3))) && (((v2*4) + v3) >= ((v2*4) + v3))) && (0 <= 0)) && (19 >= 19))
((-30 - (v0*2)) == (499 - (v0*2)))
((((v0*-1008)/48)*48) == (v0*-1008))
"(max(min(v0, 0), -15) >= ((max(min(v0, 0), -15) + (5 - max(min(v0, 0), -15))) - 1))"
"(max(min(min(min(1999, 1999), min(v1 + v2, 2000) + -1), ((v3 + -2) + 257) - 1) + 1, min(max(max(max(0, 0), max(v2, 0)), v3 + -2), 257 + (v3 + -2))) <= min(max(max(max(0, 0), max(v2, 0)), v3 + -2), 257 + (v3 + -2)))"
"(max(min(min(min(min(249 - (v3/8), (v4 + 7)/8), (min((v1 + v2) - v3, min(1992 - v3, v4) + 8) + -1)/8), (min(min(2002 - v3, v4), ((v1 + v2) - v3) + 2) + 7)/8), (0 + ((v4 + 22)/8)) - 1) + 1, min(max(max(max(0 - (v3/8), ((max(v2, 0) - v3) + 17)/8), (17 - v3)/8), 0), ((v4 + 22)/8) + 0)) <= min(max(max(max(0 - (v3/8), ((max(v2, 0) - v3) + 17)/8), (17 - v3)/8), 0), ((v4 + 22)/8) + 0))"
"(max(min(min(min(min(min(min(min(((2006 - v5)/4) + (v4*-63), ((2006 - v5)/4) + (v4*-63)), (v6 + 14)/4), (v6 + 14)/4), (v6 + 14)/4), (min((v8 + v7) - ((v4*252) + v5), min(1992 - ((v4*252) + v5), v6) + 8) + 6)/4), (min((v8 + v7) - ((v4*252) + v5), min(1995 - ((v4*252) + v5), v6) + 5) + 9)/4), (0 + ((v6 + 21)/4)) - 1) + 1, min(max(max(max(max((((6 - v5)/4) + (v4*-63)) + 1, (((9 - v5)/4) + (v4*-63)) + 1), (((9 - v5)/4) + (v4*-63)) + 1), max(((v7 - ((v4*252) + v5)) + 13)/4, (((9 - v5)/4) + (v4*-63)) + 1)), 0), ((v6 + 21)/4) + 0)) <= min(max(max(max(max((((6 - v5)/4) + (v4*-63)) + 1, (((9 - v5)/4) + (v4*-63)) + 1), (((9 - v5)/4) + (v4*-63)) + 1), max(((v7 - ((v4*252) + v5)) + 13)/4, (((9 - v5)/4) + (v4*-63)) + 1)), 0), ((v6 + 21)/4) + 0))"
"((((max(min((v6*12) + ((v4*1008) + v3), min((min((v4*1008) + 998, v5) + v3) + 6, 2006)), 7) + (max(min((v6*12) + ((v4*1008) + v3), min((min((v4*1008) + 998, v5) + v3) + 6, 2002)), 3)*-1))/4)*4) == (max(min((v6*12) + ((v4*1008) + v3), min((min((v4*1008) + 998, v5) + v3) + 6, 2006)), 7) + (max(min((v6*12) + ((v4*1008) + v3), min((min((v4*1008) + 998, v5) + v3) + 6, 2002)), 3)*-1)))"
"((max((v0 - v1)*16, -22) + 22) >= (((max((v0 - v1)*16, -22) + 22) + (max(min((v0 - v1)*16, -22), -23) + 23)) - 1))"
"(max(min(min(min((((v3 + v4) - max(min((v1*4) + v2, 1999), 0))/4) + -1, (min(max(min((v1*4) + v2, 1996), -3), (v3 + v4) + -1) - max(min((v1*4) + v2, 1999), 0))/4), (max(min((v1*4) + v2, 1996), -3) - max(min((v1*4) + v2, 1999), 0))/4), (0 + ((v5 + 7)/4)) - 1) + 1, min(max(((v4 - max(min((v1*4) + v2, 1999), 0)) + 3)/4, 0), ((v5 + 7)/4) + 0)) <= min(max(((v4 - max(min((v1*4) + v2, 1999), 0)) + 3)/4, 0), ((v5 + 7)/4) + 0))"
(((v0 + v1) + -7) < (((v0 + 1) + v1) + -10))
"(max(min(min(((((v1 + v2) + 7)/8) - v0) + 5, 253 - v0), (0 + 64) - 1) + 1, min(max(5 - v0, 0), 64 + 0)) <= min(max(5 - v0, 0), 64 + 0))"
(((((((uint1)1 && (((((((v0/250)*2) + v1)*4) + 0) + -5) <= ((((((v0/250)*2) + v1)*4) + 0) + -5))) && (((((((v0/250)*2) + v1)*4) + 3) + -5) >= ((((((v0/250)*2) + v1)*4) + ((4 + 0) - 1)) + -5))) && (v2 <= v2)) && (v2 >= v2)) && ((((v3*8) + v4)*2) <= ((((v3*8) + v4)*2) + 0))) && (((((v3*8) + v4)*2) + 1) >= ((((v3*8) + v4)*2) + ((2 + 0) - 1))))
"(max(min((v1 + v2) + -1, (((max(v3*32, -9) + v4) + 5) + (min(v3*32, -9) + 41)) - 1) + 1, min(max(v2, (max(v3*32, -9) + v4) + 5), (min(v3*32, -9) + 41) + ((max(v3*32, -9) + v4) + 5))) <= min(max(v2, (max(v3*32, -9) + v4) + 5), (min(v3*32, -9) + 41) + ((max(v3*32, -9) + v4) + 5)))"
((((v0*-64)/2)*2) == (v0*-64))
"(max(min(min(min(min(min(min(min(min((v4/1000) + -1, (v4/1000) + -1), (v4/1000) + -1), (min(min(3001 - v1, v4), ((v2 + v3) - v1) + 1001)/1000) + -1), (min((v2 + v3) - v1, min(1997 - v1, v4) + 3) + -1003)/1000), (997 - v1)/1000), (997 - v1)/1000), (997 - v1)/1000), (0 + ((v4 + 999)/1000)) - 1) + 1, min(max(max(max(max(((max(v3, 0) - v1) + 1001)/1000, (-3 - v1)/1000), (1001 - v1)/1000), (1001 - v1)/1000), 0), ((v4 + 999)/1000) + 0)) <= min(max(max(max(max(((max(v3, 0) - v1) + 1001)/1000, (-3 - v1)/1000), (1001 - v1)/1000), (1001 - v1)/1000), 0), ((v4 + 999)/1000) + 0))"
"((((min(v0*42, 83) + (v1*3)) + v2) + 2) < ((min(v0*42, 83) + ((v1 + 1)*3)) + v2))"
(((v0/8) + 1) <= (((v0 - 1)/8) - 1))
"(((min(v0, 12)*4) + -52) >= ((((min(v0, 12)*4) + -52) + ((min(v0, 12)*-4) + 56)) - 1))"
((((v0*8) + v1) + v2) < (((v0*8) + (v1 + 1)) + v2))
"(0 == ((0 + (128 - (max(min(v0, 2), 1)*64))) - 1))"
(((((((uint1)1 && (((v0*2) + v1) <= ((v0*2) + v1))) && (((v0*2) + v1) >= ((v0*2) + v1))) && ((v2 + -10) <= ((0 + v2) + -10))) && ((v2 + 4) >= ((((15 + 0) - 1) + v2) + -10))) && (((0*4) + 0) <= ((0*4) + 0))) && (((4*4) + 3) >= ((4*4) + ((4 + 0) - 1))))
((((v0 + v1)*4) + 3) < ((((v0 + 1) + v1)*4) + -7))
((((v0/8) + -5) + (((v0 % 8) + 180)/8)) <= ((v0/8) + -5))
(((((((uint1)1 && (((((0*4) + v0) + 0) + -3) <= ((((0*4) + 0) + v0) + -3))) && (((((63*4) + v0) + 3) + -3) >= ((((((64 + 0) - 1)*4) + ((4 + 0) - 1)) + v0) + -3))) && (((v1/4)*4) <= ((v1/4)*4))) && ((((v1/4)*4) + 128) >= (((33 + (v1/4)) - 1)*4))) && (v2 <= v2)) && (v2 >= v2))
"(0 == ((0 + (9 - max(v0*5, 4))) - 1))"
"(max(0, min(((v0 % 4) + 495)/12, (0 + (((v0 % 4) + 515)/12)) - 1) + 1) <= 0)"
(((((((uint1)1 && ((((v0 + v1) + 0) + 1) <= ((v0 + v1) + -2))) && ((((v0 + v1) + 3) + 1) >= ((v0 + v1) + 1))) && ((v2 + -7) <= (-2 + (v2 + -5)))) && ((v2 + 126) >= (1 + (v2 + 125)))) && (0 <= 0)) && (1 >= 1))
(((((((uint1)1 && ((((((v0*2) + v1)*4) + v2) + 0) <= ((((v0*2) + v1)*4) + v2))) && ((((((v0*2) + v1)*4) + v2) + 3) >= (((((v0*2) + v1)*4) + 3) + v2))) && ((((v3*4) + v4) + v5) <= (((v3*4) + v4) + v5))) && ((((v3*4) + v4) + v5) >= (((v3*4) + v4) + v5))) && (((v6*3) + v7) <= ((v6*3) + v7))) && (((v6*3) + v7) >= ((v6*3) + v7)))
((v0 + v1) >= ((v0 + (v1 - 1)) + 1))
"((max((max(max(v0/250, v1) + min(v1 - (v0/250), 0), v1)*8) - min(max(v1*8, ((v0/250)*8) + -5), (v1*8) + -5), 5) + 8) <= 1024)"
"(max(min(min(min(1999, 1999), min(v1 + v2, 2000) + -1), ((v3 + -10) + 518) - 1) + 1, min(max(max(max(0, 0), max(v2, 0)), v3 + -10), 518 + (v3 + -10))) <= min(max(max(max(0, 0), max(v2, 0)), v3 + -10), 518 + (v3 + -10)))"
"(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (((min(v2*16, 109) + v3) + v4) <= ((min(v2*16, 109) + v3) + v4))) && (((min(v2*16, 109) + v3) + v4) >= ((min(v2*16, 109) + v3) + v4))) && (v5 <= v5)) && (v5 >= v5))"
(((((((uint1)1 && ((-2 + v0) <= (-2 + v0))) && ((((11 + -2) - 1) + v0) >= (((11 + -2) - 1) + v0))) && ((((0*4) + (v1/4)) + 0) <= (0 + (v1/4)))) && ((((0*4) + ((v1/4) + 32)) + 3) >= (((4 + 0) - 1) + ((v1/4) + 32)))) && (v2 <= v2)) && (v2 >= v2))
((((v0*250) + v1) + v2) < (((v0*250) + (v1 + 1)) + v2))
"(max(0, min(25 - (((125 - ((min(v0*125, v1 + -125) + v2) % 250))/250)*16), (0 + (((((v3 % 250) + 124)/250)*16) + 27)) - 1) + 1) <= 0)"
"((max(v0*256, 254) + -514) == (((max(v0*256, 254) + -514) + (515 - max(v0*256, 254))) - 1))"
"(max(0, min(min(0, (66 - ((v0 % 8)*9))/5), (0 + 2) - 1) + 1) <= 0)"
(0 == ((0 + ((v0*4) + 7)) - 1))
"((((min((min((v3 % ((v4 + 999)/1000))*1000, v4 + -1000) + (v2 + 999))/250, (((min((v3 % ((v4 + 999)/1000))*1000, v4 + -1000) + (((((min((v3 % ((v4 + 999)/1000))*1000, v4 + -1000) + v2) % 250) + 1999)/1000)*1000)) + v2)/250) + -1) + (((min((v3 % ((v4 + 999)/1000))*1000, v4 + -1000) + v2)/250)*-1))/4)*4) == (min((min((v3 % ((v4 + 999)/1000))*1000, v4 + -1000) + (v2 + 999))/250, (((min((v3 % ((v4 + 999)/1000))*1000, v4 + -1000) + (((((min((v3 % ((v4 + 999)/1000))*1000, v4 + -1000) + v2) % 250) + 1999)/1000)*1000)) + v2)/250) + -1) + (((min((v3 % ((v4 + 999)/1000))*1000, v4 + -1000) + v2)/250)*-1)))"
"(((((((uint1)1 && ((0 + ((min(v2*128, 124) + min(v1*252, 248)) + v3)) <= ((min(v1*252, 248) + min(v2*128, 124)) + v3))) && ((3 + (((min(v2*128, 124) + min(v1*252, 248)) + v3) + 124)) >= ((min(v1*252, 248) + (min(v2*128, 124) + 127)) + v3))) && (((min(v4*63, 62) + v5) + v6) <= ((min(v4*63, 62) + v5) + v6))) && (((min(v4*63, 62) + v5) + v6) >= ((min(v4*63, 62) + v5) + v6))) && (v7 <= v7)) && (((v8 + v7) + -1) >= ((v8 + v7) - 1)))"
(((((((uint1)1 && ((v0*4) <= ((v0*4) + 0))) && (((v0*4) + 3) >= ((v0*4) + 3))) && (((((v1 + v2)*2) + v3)*2) <= ((((v1 + v2)*2) + v3)*2))) && ((((((v1 + v2)*2) + v3)*2) + 1) >= (((((v1 + v2)*2) + v3)*2) + 1))) && ((((0*16) + 0) + 0) <= 0)) && ((((1*16) + 20) + 15) >= 19))
"(0 == ((0 + (9 - (max(min(v0, 3), 2)*3))) - 1))"
((((v0*4) + 137)/126) != 0)
(((((v0*63) + v1) + v2) + 1) < ((((v0*63) + v1) + (v2 + 1)) + -2))
"(((((((uint1)1 && (((((0*4) + 0) + ((min(v1, 4) + v2)/4)) + -3) <= (((0 + ((min(v1, 4) + v2)/4)) + -2) + -1))) && (((((31*4) + 3) + (((min(v1, 4) + v2)/4) + (((min((((v1 + v2) + -1)/4) - ((min(v1, 4) + v2)/4), (((v3 + 5)/4)*4) + -2) + 11)/128)*128))) + -3) >= (((3 + (((min(v1, 4) + v2)/4) + (((min((((v1 + v2) + -1)/4) - ((min(v1, 4) + v2)/4), (((v3 + 5)/4)*4) + -2) + 1)/4)*4))) + 8) + -1))) && (v4 <= v4)) && ((min((v5/4) + 30, v4) + 2) >= (min((v5/4) + 30, v4) + 2))) && (((v6*2) + v7) <= ((v6*2) + v7))) && (((v6*2) + v7) >= ((v6*2) + v7)))"
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && ((v2/250) <= ((0 + v2)/250))) && (((v2 + 124)/250) >= ((((125 + 0) - 1) + v2)/250))) && (0 <= 0)) && (0 >= 0))
((v0 + -2) == (((v0 + -2) + (-5 + 6)) - 1))
"(max(min(124, ((v1 + -1) + (13 - max(((v2/125) - v3)*8, 5))) - 1) + 1, min(max(0, v1 + -1), (13 - max(((v2/125) - v3)*8, 5)) + (v1 + -1))) <= min(max(0, v1 + -1), (13 - max(((v2/125) - v3)*8, 5)) + (v1 + -1)))"
((((v0 + v1)*8) + -1) >= (((((v0 - 1) + v1)*8) + 11) + 1))
(((((((uint1)1 && ((v0 + -4) <= (v0 + -4))) && ((v0 + 1012) >= (v0 + 1012))) && ((((v1 + v2) + 0) + 5) <= ((v1 + v2) + -4))) && ((((v1 + v2) + 3) + 5) >= ((v1 + v2) + 5))) && (0 <= 0)) && (2 >= 2))
(((((((uint1)1 && ((((((v0*3) + 0)*4) + v1) + 0) <= ((v0*12) + v1))) && ((((((v0*3) + 2)*4) + v1) + 3) >= (((v0*12) + 11) + v1))) && ((v2 + v3) <= (v2 + v3))) && ((v2 + v3) >= (v2 + v3))) && (v4 <= v4)) && (v4 >= v4))
(((((v0 % ((v1 + 15)/16))*-16)/4)*4) == ((v0 % ((v1 + 15)/16))*-16))
(((((((uint1)1 && ((((((v0*2) + v1)*4) + 0) + -5) <= (((((v0*2) + v1)*4) + 0) + -5))) && ((((((v0*2) + v1)*4) + 3) + -5) >= (((((v0*2) + v1)*4) + ((4 + 0) - 1)) + -5))) && (0 <= 0)) && (0 >= 0)) && (((v2*69) + v3) <= ((v2*69) + v3))) && (((v2*69) + v3) >= ((v2*69) + v3)))
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (0 <= 0)) && (0 >= 0)) && (0 <= 0)) && (((208 + 0) - 1) >= ((208 + 0) - 1)))
(v0 == ((v0 + 250) - 1))
(((((((uint1)1 && ((((((v0*8) + 0)*4) + v1) + 0) <= ((v0*32) + v1))) && ((((((v0*8) + 7)*4) + v1) + 3) >= (((v0*32) + 31) + v1))) && ((((v2*16) + ((v3*4) + v4)) + v5) <= (((v2*16) + ((v3*4) + v4)) + v5))) && ((((v2*16) + ((v3*4) + v4)) + v5) >= (((v2*16) + ((v3*4) + v4)) + v5))) && (((v6*2) + v7) <= ((v6*2) + v7))) && (((v6*2) + v7) >= ((v6*2) + v7)))
(((v0 + 129)/128) != 0)
"(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((62*4) + v0) + 3) >= (((((63 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && (((min(v1*8, 117) + v2) + v3) <= ((min(v1*8, 117) + v2) + v3))) && (((min(v1*8, 117) + v2) + v3) >= ((min(v1*8, 117) + v2) + v3))) && (v4 <= v4)) && (v4 >= v4))"
"(((((((uint1)1 && ((((0*4) + ((((min(v0, 4) + v1) + -4)/16) + (v2*4))) + 0) <= (0 + ((((min(v0, 4) + v1) + -4)/16) + (v2*4))))) && ((((0*4) + ((((min(v0, 4) + v1) + -4)/16) + (v2*4))) + 3) >= (((4 + 0) - 1) + ((((min(v0, 4) + v1) + -4)/16) + (v2*4))))) && (v3 <= v3)) && (v3 >= v3)) && (((v4*32) + 0) <= ((v4*32) + 0))) && (((v4*32) + ((32 + 0) - 1)) >= ((v4*32) + ((32 + 0) - 1))))"
((((v0/4)*4) + 128) <= ((v0/4)*4))
(((((((uint1)1 && ((0 + ((v0*8) + v1)) <= ((v0*8) + v1))) && ((3 + (((v0*8) + v1) + 4)) >= (((v0*8) + 7) + v1))) && ((((v2*8) + v3) + v4) <= (((v2*8) + v3) + v4))) && ((((v2*8) + v3) + v4) >= (((v2*8) + v3) + v4))) && (0 <= 0)) && (0 >= 0))
((((v0*2) + v1) + -2) < (((v0*2) + (v1 + 1)) + -2))
"(((v0*4) + 3) < min(max((v0 + 1)*4, ((v1/4)*4) + -7), ((v0 + 1)*4) + -7))"
((((((v0*33) + v1) + v2) + v3) + -5) < (((((v0*33) + v1) + (v2 + 1)) + v3) + -5))
"(max(min(min(min(1999, 1999), min(v1 + v2, 2000) + -1), ((v3 + -2) + 69) - 1) + 1, min(max(max(max(0, 0), max(v2, 0)), v3 + -2), 69 + (v3 + -2))) <= min(max(max(max(0, 0), max(v2, 0)), v3 + -2), 69 + (v3 + -2)))"
(((((v0 % ((v1 + 28)/16))*-16)/2)*2) == ((v0 % ((v1 + 28)/16))*-16))
"(max(((v0*55) + v1) + v4, max(((v0*55) + v1) + v4, v5)) >= (min((((v0 - 1)*55) + v1) + v2, min((((v0 - 1)*55) + v1) + v2, v3)) + 1))"
(((((((uint1)1 && ((v0 + v1) <= (v0 + v1))) && ((v0 + v1) >= (v0 + v1))) && ((((0*4) + v2) + 0) <= (((0*4) + 0) + v2))) && ((((31*4) + v2) + 3) >= (((31*4) + ((4 + 0) - 1)) + v2))) && (0 <= 0)) && (2 >= ((3 + 0) - 1)))
(((((((uint1)1 && ((0 + ((v0*8) + v1)) <= (0 + ((v0*8) + v1)))) && ((3 + (((v0*8) + v1) + 4)) >= (3 + (((v0*8) + v1) + 4)))) && ((v2 + v3) <= (v2 + v3))) && ((v2 + v3) >= (v2 + v3))) && (0 <= 0)) && (18 >= 18))
(((((v0/4) + v1)*4) + -7) == ((((((v0/4) + v1)*4) + -7) + 4) - 1))
"(max((v0 + 13)/32, 0) >= ((max((v0 + 13)/32, 0) + (((v0 + 44)/32) - max((v0 + 13)/32, 0))) - 1))"
((v0 + 8) <= (((v0 - 1) + -2) - 1))
(((((((uint1)1 && (0 <= 0)) && ((16 - 1) >= (16 - 1))) && ((((0*4) + ((v0*4) + ((v1*12) + v2))) + 0) <= (0 + ((v0*4) + ((v1*12) + v2))))) && ((((0*4) + ((v0*4) + ((v1*12) + v2))) + 3) >= (((4 + 0) - 1) + ((v0*4) + ((v1*12) + v2))))) && (v3 <= v3)) && (v3 >= v3))
(((((((uint1)1 && ((v0 + -11) <= (v0 + -11))) && ((v0 + 134) >= ((146 + (v0 + -11)) - 1))) && ((((v1*4) + v2) + 0) <= (((v1*4) + 0) + v2))) && ((((v1*4) + v2) + 3) >= (((v1*4) + ((4 + 0) - 1)) + v2))) && (0 <= 0)) && (2 >= ((3 + 0) - 1)))
(v0 == ((v0 + 2) - 1))
((((v0*4) + (v1 + v2)) + 246) >= (((((v0*4) + (v1 + v2)) + 246) + 9) - 1))
(((v0 + 20)/8) != 0)
"((((v0/4) + (min(v1, 10)*3)) + 2) < ((v0/4) + ((v1 + 1)*3)))"
"(((min(v0*3, 13) + v1) + v2) < ((min(v0*3, 13) + (v1 + 1)) + v2))"
(((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && (((((0*4) + v1) + 0) + -1) <= ((((0*4) + 0) + v1) + -1))) && (((((4*4) + v1) + 3) + -1) >= ((((4*4) + ((4 + 0) - 1)) + v1) + -1))) && (v2 <= v2)) && (v2 >= v2))
"(max(((v0 % 8) + 31)/8, ((((min(v1*16, 109) + v0) + 23)/8) - min((min(v1*16, 109) + v0)/8, ((v0 + 15)/8) + (v1*2))) + 1) <= 1024)"
(((v0 + v1) + 5) < (((v0 + 1) + v1) + -4))
(((((((uint1)1 && ((0 + v0) <= (((0*4) + 0) + v0))) && ((3 + (v0 + 124)) >= (((((32 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && ((v1 + -1) <= (v1 + -1))) && ((v1 + 7) >= ((9 + (v1 + -1)) - 1))) && (v2 <= v2)) && (v2 >= v2))
"(((((((uint1)1 && (((0 + (min(v0, 4) + v1)) + -4) <= ((min(v0, 4) + v1) + -4))) && (((3 + ((((max(v0, 4) + -1)/4)*4) + (min(v0, 4) + v1))) + -4) >= (((((max(v0, 4) + -1)/4)*4) + (min(v0, 4) + v1)) + -1))) && (((min(v2*63, 62) + v3)/4) <= ((min(v2*63, 62) + v3)/4))) && ((((min(v2*63, 62) + v3) + 66)/4) >= (((min(v2*63, 62) + v3) + 66)/4))) && (v4 <= v4)) && (v4 >= v4))"
"((min(v0*-4, 11) + -11) >= 5)"
(((((v0 % ((v1 + 34)/32))*32)/2)*2) == ((v0 % ((v1 + 34)/32))*32))
(((((((uint1)1 && ((0 + ((v0*125) + v1)) <= ((v0*125) + v1))) && ((3 + (((v0*125) + v1) + 121)) >= (((v0*125) + v1) + 124))) && (((v2*125) + v3) <= ((v2*125) + v3))) && ((((v2*125) + v3) + 124) >= (((v2*125) + v3) + 124))) && (((0*7) + 0) <= 0)) && (((1*7) + 6) >= 13))
(((v0*16) + v1) < ((v0*16) + (v1 + 1)))
(((((((uint1)1 && ((((0*4) + v0) + 0) <= v0)) && ((((249*4) + v0) + 3) >= (v0 + 999))) && ((v1/8) <= (v1/8))) && (((v1 + 132)/8) >= ((v1 + 132)/8))) && (v2 <= v2)) && (v2 >= v2))
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (v2 <= v2)) && (v2 >= v2)) && (((v3*8) + v4) <= ((v3*8) + v4))) && (((v3*8) + v4) >= ((v3*8) + v4)))
(((((((uint1)1 && ((((v0 + v1) + 0) + 251) <= ((((0*4) + 0) + v1) + v0))) && ((((v0 + v1) + 3) + 251) >= ((((((63 + 0) - 1)*4) + ((4 + 0) - 1)) + v1) + v0))) && ((v2 + v3) <= (v2 + v3))) && ((v2 + v3) >= (v2 + v3))) && (v4 <= v4)) && (v4 >= v4))
"(((((((uint1)1 && ((min((v0/4)*4, 1999) + -3) <= (max(min((v0/4)*4, 1999) + -4, min((v0/4)*4, 1999)) + -3))) && ((max(((v0 + 127)/4)*4, -3) + 4) >= ((max(((v0 + 127)/4)*4, -3) + 3) + 1))) && ((((v1 + v2) + 0) + 1) <= ((v1 + v2) + -3))) && ((((v1 + v2) + 3) + 1) >= ((v1 + v2) + 1))) && (0 <= 0)) && (2 >= 2))"
(((((((uint1)1 && (0 <= 0)) && ((16 - 1) >= (16 - 1))) && (((((v0 + v1)*4) + 0) + -7) <= (((v0 + v1)*4) + -7))) && (((((v0 + v1)*4) + 3) + -7) >= ((((v0 + v1)*4) + 3) + -7))) && (v2 <= v2)) && (v2 >= v2))
"((v0 + 4) < min(max(v1/8, (v0 + 1) + 4), v0 + 1))"
(((v0 + 7)/4) != 0)
"(((((((uint1)1 && (0 <= 0)) && ((4 - 1) >= (4 - 1))) && (max(((v0/125) + (v1*8)) + -1, (v0/125) + (v1*8)) <= (((0*4) + 0) + ((v0/125) + (v1*8))))) && ((((v0/125) + (v1*8)) + 7) >= (((((2 + 0) - 1)*4) + ((4 + 0) - 1)) + ((v0/125) + (v1*8))))) && (((0*32) + 0) <= 0)) && (((1*32) + 35) >= ((64 + 0) - 1)))"
"((v0 + 2) < (min(max(((min(v1, 8) + v2)/4)*4, (v0 + 1) + 27), (v0 + 1) + 15) + -25))"
(((((((uint1)1 && (((((v0*4) + v1) + -2) + 0) <= ((((v0*4) + 0) + v1) + -2))) && (((((v0*4) + v1) + ((6 + -2) - 1)) + 3) >= ((((v0*4) + ((4 + 0) - 1)) + v1) + ((6 + -2) - 1)))) && (0 <= 0)) && ((8 - 1) >= (8 - 1))) && (((v2*4) + v3) <= ((v2*4) + v3))) && (((v2*4) + v3) >= ((v2*4) + v3)))
(((((((uint1)1 && ((v0 + 0) <= (0 + v0))) && ((v0 + 3) >= (((4 + 0) - 1) + v0))) && ((v1/125) <= ((0 + v1)/125))) && (((v1 + 124)/125) >= ((((125 + 0) - 1) + v1)/125))) && (v2 <= v2)) && (v2 >= v2))
(((((((uint1)1 && (((0 + (((v0*64) + v1) + -5)) + 3) <= (((v0*64) + v1) + -2))) && (((3 + (((v0*64) + v1) + 128)) + 3) >= (((v0*64) + v1) + 66))) && (((v2 + v3) + 3) <= ((v2 + v3) + -2))) && (((v2 + v3) + 3) >= ((v2 + v3) + 3))) && (0 <= 0)) && (0 >= 0))
(((v0 + 35)/33) != 0)
"(((((((uint1)1 && (((((0*4) + (min(v0, 4) + v1)) + 0) + -4) <= ((0 + (min(v0, 4) + v1)) + -4))) && (((((0*4) + ((((max(v0, 4) + -1)/4)*4) + (min(v0, 4) + v1))) + 3) + -4) >= ((((4 + 0) - 1) + ((((max(v0, 4) + -1)/4)*4) + (min(v0, 4) + v1))) + -4))) && (v2 <= v2)) && (v2 >= v2)) && (v3 <= v3)) && (v3 >= v3))"
"(max(min(999 - (v1*2), (0 + ((min(v2 - v3, 0)*2) + 2)) - 1) + 1, min(max(0 - (v1*2), 0), ((min(v2 - v3, 0)*2) + 2) + 0)) <= min(max(0 - (v1*2), 0), ((min(v2 - v3, 0)*2) + 2) + 0))"
(((((v0 % ((v1 + 44)/32))*-32)/2)*2) == ((v0 % ((v1 + 44)/32))*-32))
((((v0 + v1) + v2) + -8) < ((((v0 + 1) + v1) + v2) + -8))
(((v0 + v1) + -4) < (((v0 + 1) + v1) + -4))
"((((max(min(v0, 25), 22)*8) + -204) + (208 - (max(min(v0, 25), 22)*8))) <= ((max(min(v0, 25), 22)*8) + -204))"
"(((min(v0*32, 220)/4)*4) == min(v0*32, 220))"
"(max(min(30 - (v0/4), (0 + 6) - 1) + 1, min(max((5 - v0)/4, 0), 6 + 0)) <= min(max((5 - v0)/4, 0), 6 + 0))"
"(max(min(2009 - ((v0*16) + v1), (0 + 16) - 1) + 1, min(max(10 - ((v0*16) + v1), 0), 16 + 0)) <= min(max(10 - ((v0*16) + v1), 0), 16 + 0))"
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((31*4) + v0) + 3) >= (((31*4) + ((4 + 0) - 1)) + v0))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (v3 <= v3)) && (v3 >= v3))
"(((min((v3*4) + (((max(v2, -1) + 1)*4) + 4), 33 - max(min(v1, 29), 25))/4)*4) == min((v3*4) + (((max(v2, -1) + 1)*4) + 4), 33 - max(min(v1, 29), 25)))"
((((v0*-32)/16)*16) == (v0*-32))
((((v0 + v1)*8) + 11) <= (((((v0 - 1) + v1)*8) + -1) - 1))
(((((v0*17) + v1) + v2) + -10) < ((((v0*17) + v1) + (v2 + 1)) + -10))
"(((((((uint1)1 && (((((0*4) + 0) + (min(v0, 4) + v1)) + -4) <= (0 + ((min(v0, 4) + v1) + -4)))) && (((((249*4) + 3) + ((((max(v0, 4) + -1)/1000)*1000) + (min(v0, 4) + v1))) + -4) >= (((4 + 0) - 1) + ((v0 + v1) + -4)))) && ((min(v2*63, 62) + v3) <= ((min(v2*63, 62) + 0) + v3))) && (((min(v2*63, 62) + v3) + 62) >= ((min(v2*63, 62) + ((63 + 0) - 1)) + v3))) && (v4 <= v4)) && (v4 >= v4))"
"(min(((v0*55) + v1) + v2, min(((v0*55) + v1) + v2, v3)) <= (max((((v0 - 1)*55) + v1) + v4, max((((v0 - 1)*55) + v1) + v4, v5)) - 1))"
"(max(0, min((((min(v0*64, v1 + -64) + v2) % 8) + 47)/32, (0 + 3) - 1) + 1) <= 0)"
(((v0/4) + 1) < ((v0 + 1)/4))
(((((((uint1)1 && ((v0 + -1) <= ((((((v0*2) + 0)*4) + 0) + -5)/8))) && (v1 >= ((((((v0*2) + (((v1 - v0)*2) + 1))*4) + 3) + -5)/8))) && ((((((v2*2) + v3)*4) + 0) + -5) <= (((((v2*2) + v3)*4) + 0) + -5))) && ((((((v2*2) + v3)*4) + ((4 + 0) - 1)) + -5) >= (((((v2*2) + v3)*4) + ((4 + 0) - 1)) + -5))) && ((0 + (v4*69)) <= (v4*69))) && ((3 + ((v4*69) + 68)) >= ((v4*69) + 68)))
"(max(0, min((((min(v0*500, v1 + -500) + v2) % 8) + 483)/32, (0 + (((v3 % 8) + 539)/32)) - 1) + 1) <= 0)"
(((((((uint1)1 && (v0 <= (0 + v0))) && ((v0 + 1) >= (((2 + 0) - 1) + v0))) && ((((v1*4) + v2) + 0) <= (((v1*4) + 0) + v2))) && ((((v1*4) + v2) + 3) >= (((v1*4) + ((4 + 0) - 1)) + v2))) && (v3 <= v3)) && (v3 >= v3))
((((((v0*17) + v1) + v2)*4) + -267) < (((((v0*17) + (v1 + 1)) + v2)*4) + -273))
(((v0 + 37)/32) != 0)
"(((((((uint1)1 && (((0 + (((v1*4) + (min(v2*64, 936) + v3)) + -5)) + -3) <= (-5 + (((v1*4) + (min(v2*64, 936) + v3)) + -3)))) && (((3 + ((((73 - max(v1*4, 70))/4)*4) + ((v1*4) + (min(v2*64, 936) + v3)))) + -3) >= (((6 + -5) - 1) + (min(((v1*4) + (min(v2*64, 936) + v3)) - max(v1*4, 70), min(v2*64, 936) + v3) + 70)))) && (0 <= 0)) && ((8 - 1) >= (8 - 1))) && (v4 <= v4)) && (v4 >= v4))"
"((((max(min(min((v3*1004) + 999, v4) + v2, 2997), 998) + (max(min(min((v3*1004) + 999, v4) + v2, 2001), 2)*-1))/4)*4) == (max(min(min((v3*1004) + 999, v4) + v2, 2997), 998) + (max(min(min((v3*1004) + 999, v4) + v2, 2001), 2)*-1)))"
"(0 == ((0 + (17 - max(v0*3, 14))) - 1))"
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((7*4) + v0) + 3) >= (((((8 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && ((0 + v1) <= (0 + v1))) && ((((125 + 0) - 1) + v1) >= (((125 + 0) - 1) + v1))) && (v2 <= v2)) && (v2 >= v2))
((v0 + -2) >= (((v0 - 1) + 3) + 1))
(((v0 + 44)/32) != 0)
"(max(min(min(min(249, min(((v1 + v2) + -4)/8, 249)), min(((v1 + v2) + 3)/8, 249)), ((((v3 + v4)*2) + -2) + 2) - 1) + 1, min(max(max(0, max((v2 + 11)/8, 0)), ((v3 + v4)*2) + -2), 2 + (((v3 + v4)*2) + -2))) <= min(max(max(0, max((v2 + 11)/8, 0)), ((v3 + v4)*2) + -2), 2 + (((v3 + v4)*2) + -2)))"
"(max(min(499, (((v1/4) + v2) + (((v1 % 4) + 7)/4)) - 1) + 1, min(max(0, (v1/4) + v2), (((v1 % 4) + 7)/4) + ((v1/4) + v2))) <= min(max(0, (v1/4) + v2), (((v1 % 4) + 7)/4) + ((v1/4) + v2)))"
"(((max(min((v0*-252) + v1, 252), 0)/4)*4) == max(min((v0*-252) + v1, 252), 0))"
"(((((((uint1)1 && ((((((v0*3) + v1)*4) + v2) + 0) <= ((((v0*3) + v1)*4) + v2))) && ((((((v0*3) + v1)*4) + v2) + 3) >= (((((v0*3) + v1)*4) + 3) + v2))) && (0 <= 0)) && (0 >= 0)) && ((min(v3*69, 68) + v4) <= (min(v3*69, 68) + v4))) && ((min(v3*69, 68) + v4) >= (min(v3*69, 68) + v4)))"
(((v0 + 74)/64) != 0)
"(((((min(v0*8, 117) + v1) + v2)/8) + 1) < (((min(v0*8, 117) + (v1 + 1)) + v2)/8))"
"(((max(min((v1*-128) + (max(v2*4, -3) - min(v3, 1999)), 124), -4)/4)*4) == max(min((v1*-128) + (max(v2*4, -3) - min(v3, 1999)), 124), -4))"
(((((((uint1)1 && ((0 + ((v0*8) + v1)) <= ((v0*8) + v1))) && ((3 + (((v0*8) + v1) + 4)) >= (((v0*8) + 7) + v1))) && ((0 + v2) <= (0 + v2))) && ((((1000 + 0) - 1) + v2) >= (((1000 + 0) - 1) + v2))) && (v3 <= v3)) && (v3 >= v3))
(((((v0 + v1) + v2) + v3) + -2) >= ((((((v0 - 1) + v1) + v2) + v3) + 3) + 1))
"(((((v0*3) + v1)*2) + -4) < (min(max(v1*2, ((((v0 + 1)*3) + v1)*2) + 1), (((v0 + 1)*3) + v1)*2) + -10))"
((0 - ((v0*63) + v1)) > (1999 - ((v0*63) + v1)))
"(max(min(123 - (v0/2), (-1 + 17) - 1) + 1, min(max(max(max(0, 0), ((v0*-2) + 2)/4), -1), 17 + -1)) <= min(max(max(max(0, 0), ((v0*-2) + 2)/4), -1), 17 + -1))"
(((v0*8) + 8) <= (v0*8))
((((v0*252)/12)*12) == (v0*252))
(((((((uint1)1 && (((((((v0*4) + v1) + 0)*4) + 0) + -4) <= (((((v0*4) + v1)*4) + 0) + -4))) && (((((((v0*4) + v1) + 3)*4) + 3) + -4) >= (((((v0*4) + v1)*4) + ((16 + 0) - 1)) + -4))) && (v2 <= v2)) && (v2 >= v2)) && (((v3*2) + v4) <= ((v3*2) + v4))) && (((v3*2) + v4) >= ((v3*2) + v4)))
(((((((uint1)1 && ((((((v0*125) + v1)*4) + v2) + 0) <= ((((v0*125) + v1)*4) + v2))) && ((((((v0*125) + v1)*4) + v2) + 3) >= (((((v0*125) + v1)*4) + 3) + v2))) && ((v3 + v4) <= (v3 + v4))) && ((v3 + v4) >= (v3 + v4))) && (v5 <= v5)) && (v5 >= v5))
((((v0*8) + 33)/23) != 0)
"(max(min(min(min((v4 - v5) + 79, ((min((v4*4) + 303, v2 + v3)/4) - v5) + 4), (((v2 + v3) + 13)/4) - v5), (0 + (min(((v6 - (v7*10)) - ((v8/8)*8))*8, -49) + 130)) - 1) + 1, min(max(((v3/4) - v5) + 5, 0), (min(((v6 - (v7*10)) - ((v8/8)*8))*8, -49) + 130) + 0)) <= min(max(((v3/4) - v5) + 5, 0), (min(((v6 - (v7*10)) - ((v8/8)*8))*8, -49) + 130) + 0))"
(((v0 + v1) + 1) < (((v0 + 1) + v1) + -2))
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((1*4) + v0) + 3) >= (((1*4) + ((4 + 0) - 1)) + v0))) && (v1 <= (0 + v1))) && ((v1 + 124) >= (((125 + 0) - 1) + v1))) && (v2 <= v2)) && (v2 >= v2))
((v0 + -127) >= (((v0 + -127) + 128) - 1))
"(0 == ((0 + (18 - (max(v0, 1)*9))) - 1))"
((10 - ((v0 + v1)*2)) > (509 - ((v0 + v1)*2)))
"(((((((uint1)1 && (((((0*4) + 0) + (min(v0, 4) + v1)) + -4) <= (0 + ((min(v0, 4) + v1) + -4)))) && (((((15*4) + 3) + ((((max(v0, 4) + -1)/64)*64) + (min(v0, 4) + v1))) + -4) >= (((4 + 0) - 1) + ((v0 + v1) + -4)))) && ((0 + ((min(v2*32, 93) + (v3*16)) + v4)) <= ((min(v2*32, 93) + (v3*16)) + v4))) && ((7 + (((min(v2*32, 93) + (v3*16)) + v4) + 8)) >= (((min(v2*32, 93) + (v3*16)) + 15) + v4))) && (v5 <= v5)) && (v5 >= v5))"
((((v0*8) + v1)*4) >= (((((v0*8) + v1)*4) + 32) - 1))
(((((((uint1)1 && (((((v0*3) + 0) + v1) + -2) <= ((((v0*3) + 0) + v1) + -2))) && (((((v0*3) + ((3 + 0) - 1)) + v1) + -2) >= ((((v0*3) + ((3 + 0) - 1)) + v1) + -2))) && (((((((v2*2) + 0)*4) + -2) + 0) + 1) <= ((((((v2*2) + 0)*4) + 0) + -2) + 1))) && (((((((v2*2) + 1)*4) + ((6 + -2) - 1)) + 3) + 1) >= ((((((v2*2) + 1)*4) + ((4 + 0) - 1)) + ((6 + -2) - 1)) + 1))) && (v3 <= v3)) && (v3 >= v3))
(((((((uint1)1 && ((((((v0*2) + v1)*4) + v2) + 0) <= ((((v0*2) + v1)*4) + v2))) && ((((((v0*2) + v1)*4) + v2) + 3) >= (((((v0*2) + v1)*4) + 3) + v2))) && ((v3 + v4) <= (v3 + v4))) && ((v3 + v4) >= (v3 + v4))) && (0 <= 0)) && (0 >= 0))
"((((max((v0*-125) + ((125 + ((v1 + min((v2*1000) + 1000, v3))/4)) + -252), ((v1 + min((v2*1000) + 1000, v3)) + -965)/4)*-4)/4)*4) == (max((v0*-125) + ((125 + ((v1 + min((v2*1000) + 1000, v3))/4)) + -252), ((v1 + min((v2*1000) + 1000, v3)) + -965)/4)*-4))"
"(((((((uint1)1 && ((((((v0*4) + v1) + -5) + 0) + 3) <= ((((v0*4) + v1) + 0) + max(-5, -2)))) && ((((((v0*4) + v1) + 3) + 3) + 3) >= ((((v0*4) + v1) + ((4 + 0) - 1)) + 3))) && (((((((v2*2) + v3)*4) + v4) + -2) + 1) <= ((((((v2*2) + v3)*4) + v4) + -2) + 1))) && (((((((v2*2) + v3)*4) + v4) + ((6 + -2) - 1)) + 1) >= ((((((v2*2) + v3)*4) + v4) + ((6 + -2) - 1)) + 1))) && (((v5*32) + v6) <= ((v5*32) + v6))) && (((v5*32) + v6) >= ((v5*32) + v6)))"
"((((min((v0*32) + (((v1 + min(v2*500, v3 + -500))/8) + -5), ((v1 + min(v2*500, v3 + -500)) + 515)/8)*-8)/8)*8) == (min((v0*32) + (((v1 + min(v2*500, v3 + -500))/8) + -5), ((v1 + min(v2*500, v3 + -500)) + 515)/8)*-8))"
(0 == ((0 + ((v0*2) + 52)) - 1))
"(max(-1030 - v0, v0 + 17) >= 0)"
((((v0 + v1)*4) + -1) < ((((v0 + 1) + v1)*4) + -4))
"((max(min(((v0*32) - min((v1 + v2) - (v3*126), (min(v0*32, 94) + v2) + 22)) + ((v4*8) + v2), 14), 7) + -16) == (((max(min(((v0*32) - min((v1 + v2) - (v3*126), (min(v0*32, 94) + v2) + 22)) + ((v4*8) + v2), 14), 7) + -16) + (18 - max(min(((v0*32) - min((v1 + v2) - (v3*126), (min(v0*32, 94) + v2) + 22)) + ((v4*8) + v2), 14), 7))) - 1))"
(((v0 + 9)/4) != 0)
"(((((((uint1)1 && ((((0*4) + 0) + ((max(min(v0, 46), 16) + (min(v0, 16) + v1)) + -72)) <= (-2 + ((min(v0, 16) + v1) + -24)))) && ((((15*4) + 3) + ((max(v0, 16) + (min(v0, 16) + v1)) + -72)) >= (((4 + -2) - 1) + (((max(v0, 16) + 15) + ((min(v0, 16) + v1) + -24)) - 1)))) && ((v2 + -10) <= (((((0*4) + v2) + -2) + 0) + -8))) && ((v2 + 132) >= (((((((35 + 0) - 1)*4) + v2) + ((4 + -2) - 1)) + 3) + -8))) && (v3 <= v3)) && (v3 >= v3))"
"(((((((uint1)1 && ((0 + v0) <= (0 + v0))) && ((((16 + 0) - 1) + v0) >= (((16 + 0) - 1) + v0))) && ((((v1*8) + v2) + v3) <= (((v1*8) + v2) + v3))) && ((((v1*8) + v2) + v3) >= (((v1*8) + v2) + v3))) && ((min(v4*4, 133) + 0) <= (min(v4*4, 133) + 0))) && ((min(v4*4, 133) + 3) >= (min(v4*4, 133) + ((4 + 0) - 1))))"
(((((v0*16) + v1)*2) + 2) <= (((v0*16) + v1)*2))
"(max(min(min(min(min(min(min(min(min(min((v5 + -123)/128, (v5 + -123)/128), (v5 + -123)/128), (min((v3 + v4) - v2, min(1997 - v2, v5) + 3) + -126)/128), (min(min(2124 - v2, v5), ((v3 + v4) - v2) + 124) + -123)/128), (min(min(2124 - v2, v5), ((v3 + v4) - v2) + 124) + -123)/128), (1874 - v2)/128), (1874 - v2)/128), (1874 - v2)/128), (0 + ((v5 + 132)/128)) - 1) + 1, min(max(max(max(max(max(((max(v4, 0) - v2) + 129)/128, ((max(v4, 0) - v2) + 129)/128), (2 - v2)/128), (129 - v2)/128), (129 - v2)/128), 0), ((v5 + 132)/128) + 0)) <= min(max(max(max(max(max(((max(v4, 0) - v2) + 129)/128, ((max(v4, 0) - v2) + 129)/128), (2 - v2)/128), (129 - v2)/128), (129 - v2)/128), 0), ((v5 + 132)/128) + 0))"
(((((((uint1)1 && ((0 + ((((v1*16) + ((v2*2) + v3))*4) + v4)) <= (((v1*64) + (((v2*2) + v3)*4)) + v4))) && ((3 + ((((v1*16) + ((v2*2) + v3))*4) + v4)) >= (((v1*64) + ((((v2*2) + v3)*4) + 3)) + v4))) && ((v5 + v6) <= (v5 + v6))) && ((v5 + v6) >= (v5 + v6))) && (v7 <= v7)) && (v7 >= v7))
(((((((uint1)1 && (0 <= 0)) && ((8 - 1) >= (8 - 1))) && (((((((v0*503) + v1) + v2) + v3) + -3) % 8) <= ((((((v0*503) + v1) + v2) + v3) + -3) % 8))) && (((((((v0*503) + v1) + v2) + v3) + -3) % 8) >= ((((((v0*503) + v1) + v2) + v3) + -3) % 8))) && (((v4*4) + 0) <= ((v4*4) + 0))) && (((v4*4) + 3) >= ((v4*4) + ((4 + 0) - 1))))
"((((((max(v0*4, -7) + (((v1 + v2) + min(v3*8, 117)) + 7))/4)*-4)/4)*4) == (((max(v0*4, -7) + (((v1 + v2) + min(v3*8, 117)) + 7))/4)*-4))"
(((v0 % 1004) + 1003) >= 0)
((((v0*8) + v1) + 64) < (((v0*8) + (v1 + 1)) + 1))
(((((v0/((v1 + 63)/64))*-1000)/4)*4) == ((v0/((v1 + 63)/64))*-1000))
"((0 - max(v0, 0)) == (((0 - max(v0, 0)) + (max(v0, 0) + 3)) - 1))"
((v0 + 5) != 0)
((-14 - (v0*2)) >= (499 - (v0*2)))
"(max(0, min(33 - ((v0 % 7)*5), (0 + 5) - 1) + 1) <= 0)"
((((v0*2) + v1)*4) >= (((((v0*2) + v1)*4) + 8) - 1))
(((v0 + v1) + -11) == ((((v0 + v1) + -11) + 17) - 1))
"(max(min(min(min(min(min(min(min((v5 + 1)/4, (v5 + 1)/4), (min((v3 + v4) - v2, min(1997 - v2, v5) + 3) + -2)/4), (min(min(2000 - v2, v5), (v3 + v4) - v2) + 1)/4), (min(min(2000 - v2, v5), (v3 + v4) - v2) + 1)/4), (1998 - v2)/4), (1998 - v2)/4), (0 + ((v5/4) + 2)) - 1) + 1, min(max(max(max(max(((max(v4, 0) - v2) + 5)/4, ((max(v4, 0) - v2) + 5)/4), (2 - v2)/4), (5 - v2)/4), 0), ((v5/4) + 2) + 0)) <= min(max(max(max(max(((max(v4, 0) - v2) + 5)/4, ((max(v4, 0) - v2) + 5)/4), (2 - v2)/4), (5 - v2)/4), 0), ((v5/4) + 2) + 0))"
((((v0 + v1) % 250) + 1999) >= 0)
(((((((uint1)1 && ((((((v0*16) + 0)*4) + v1) + 0) <= ((v0*64) + v1))) && ((((((v0*16) + 15)*4) + v1) + 3) >= (((v0*64) + 63) + v1))) && (v2 <= v2)) && (v2 >= v2)) && (v3 <= v3)) && (v3 >= v3))
"(max(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min((v5/1000) + -1, (v5/1000) + -1), (v5/1000) + -1), (v5/1000) + -1), (v5/1000) + -1), (v5/1000) + -1), (min(min(2001 - v2, v5), ((v3 + v4) - v2) + 1)/1000) + -1), (min(min(2997 - v2, v5), ((v3 + v4) - v2) + 997)/1000) + -1), (min(min(3001 - v2, v5), ((v3 + v4) - v2) + 1001)/1000) + -1), (min(min(3001 - v2, v5), ((v3 + v4) - v2) + 1001)/1000) + -1), (min((v3 + v4) - v2, min(1997 - v2, v5) + 3) + -1003)/1000), (997 - v2)/1000), (997 - v2)/1000), (997 - v2)/1000), (1001 - v2)/1000), (1001 - v2)/1000), (1001 - v2)/1000), (0 + ((v5 + 999)/1000)) - 1) + 1, min(max(max(max(max(max(max(max(max(max(max(max(((max(v4, 0) - v2) + 997)/1000, ((max(v4, 0) - v2) + 1001)/1000), ((max(v4, 0) - v2) + 1001)/1000), (-3 - v2)/1000), (1 - v2)/1000), (997 - v2)/1000), (997 - v2)/1000), (997 - v2)/1000), (1001 - v2)/1000), (1001 - v2)/1000), (1001 - v2)/1000), 0), ((v5 + 999)/1000) + 0)) <= min(max(max(max(max(max(max(max(max(max(max(max(((max(v4, 0) - v2) + 997)/1000, ((max(v4, 0) - v2) + 1001)/1000), ((max(v4, 0) - v2) + 1001)/1000), (-3 - v2)/1000), (1 - v2)/1000), (997 - v2)/1000), (997 - v2)/1000), (997 - v2)/1000), (1001 - v2)/1000), (1001 - v2)/1000), (1001 - v2)/1000), 0), ((v5 + 999)/1000) + 0))"
"(((v0*4) + -17) == ((((v0*4) + -17) + ((min(v1, 31)*4) + 24)) - 1))"
"(((((((uint1)1 && ((0 + (min(v0*64, 188) + v1)) <= (min(v0*64, 188) + v1))) && ((3 + ((min(v0*64, 188) + v1) + 60)) >= ((min(v0*64, 188) + 63) + v1))) && ((v2 + v3) <= (v2 + v3))) && ((v2 + v3) >= (v2 + v3))) && (v4 <= v4)) && (v4 >= v4))"
"(((((((uint1)1 && ((0 + (((min(v0, 4) + v1) + -36)/16)) <= (-2 + (((min(v0, 4) + v1) + -4)/16)))) && ((3 + ((((min(v0, 4) + v1) + -36)/16) + (((((((min(v0, 4) + v1) + 44)/16) + v2) - (((min(v0, 4) + v1) + -36)/16))/4)*4))) >= (((6 + -2) - 1) + (((v2 + 1) + (((min(v0, 4) + v1) + -4)/16)) - 1)))) && (((v3*8) + -1) <= (((((v3*2) + 0)*4) + 0) + -1))) && (((v3*8) + 11) >= (((((v3*2) + 3)*4) + 3) + -1))) && (v4 <= v4)) && (v4 >= v4))"
"(max(min(min(min(min(min(min(min(min(min((v5/1000) + -1, (v5/1000) + -1), (v5/1000) + -1), (min(min(3001 - v2, v5), ((v3 + v4) - v2) + 1001)/1000) + -1), (min(min(3001 - v2, v5), ((v3 + v4) - v2) + 1001)/1000) + -1), (min((v3 + v4) - v2, min(1997 - v2, v5) + 3) + -1003)/1000), (997 - v2)/1000), (997 - v2)/1000), (997 - v2)/1000), (0 + ((v5 + 999)/1000)) - 1) + 1, min(max(max(max(max(max(((max(v4, 0) - v2) + 1001)/1000, ((max(v4, 0) - v2) + 1001)/1000), (-3 - v2)/1000), (1001 - v2)/1000), (1001 - v2)/1000), 0), ((v5 + 999)/1000) + 0)) <= min(max(max(max(max(max(((max(v4, 0) - v2) + 1001)/1000, ((max(v4, 0) - v2) + 1001)/1000), (-3 - v2)/1000), (1001 - v2)/1000), (1001 - v2)/1000), 0), ((v5 + 999)/1000) + 0))"
"(max(min(min(min((v4 - v5) + 5, ((min((v4*4) + 4, v2 + v3)/4) - v5) + 4), (((v2 + v3) + 13)/4) - v5), (0 + (min(((((v6 + v7) + 3)/4) - (v8*63)) - (v7/4), 60) + 6)) - 1) + 1, min(max(((v3/4) - v5) + 5, 0), (min(((((v6 + v7) + 3)/4) - (v8*63)) - (v7/4), 60) + 6) + 0)) <= min(max(((v3/4) - v5) + 5, 0), (min(((((v6 + v7) + 3)/4) - (v8*63)) - (v7/4), 60) + 6) + 0))"
(((-168 - ((v0 + v1) % 8))/8) == ((((-168 - ((v0 + v1) % 8))/8) + ((((v0 + v1) % 8) + 183)/8)) - 1))
(v0 < ((v0 + 1) + -5))
(((((v0*4) + v1)*2) + v2) < ((((v0*4) + v1)*2) + (v2 + 1)))
(((((((v0*2) + v1) + v2)*2) + v3) + -4) < ((((((v0*2) + v1) + v2)*2) + (v3 + 1)) + -4))
(((((((uint1)1 && ((0 + ((v0*32) + v1)) <= ((v0*32) + v1))) && ((3 + (((v0*32) + v1) + 28)) >= (((v0*32) + 31) + v1))) && ((v2/250) <= (v2/250))) && ((((v3 + v2) + -1)/250) >= (((v3 + v2) - 1)/250))) && ((v4 + (v5/((v6 + 95)/96))) <= ((v5/((v6 + 95)/96)) + v4))) && ((v4 + (v5/((v6 + 95)/96))) >= ((v5/((v6 + 95)/96)) + v4)))
"(((((((min(v0, 4) + v1)/4) + v2)*4) + v3) + 4) < (max(((min(v0, 4) + v1)/4)*4, (((((min(v0, 4) + v1)/4) + v2)*4) + (v3 + 1)) + 25) + -21))"
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((1*4) + v0) + 3) >= (((1*4) + ((4 + 0) - 1)) + v0))) && (v1 <= v1)) && (v1 >= v1)) && (v2 <= v2)) && (v2 >= v2))
((((v0*64) + 216)/112) != 0)
(((v0 + v1)/250) <= ((((v0 - 1) + v1)/250) - 1))
"(max(0, min(8 - ((v0 % 5)*2), (0 + 2) - 1) + 1) <= 0)"
(((v0*2) + 2) <= (v0*2))
(((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && ((0 + ((v1*32) + v2)) <= ((v1*32) + v2))) && ((3 + (((v1*32) + v2) + 28)) >= (((v1*32) + 31) + v2))) && (v3 <= v3)) && (v3 >= v3))
(((v0/250) + 1) != 0)
(((v0*32) + v1) < ((v0*32) + (v1 + 1)))
"(((max(min((v1*-32) + (max(max(-127 - (((v2 + v3)/4)*4), (((v2 + v3)/4)*4) + -1999), 0) + (v4*-64)), -96), -132)/4)*4) == max(min((v1*-32) + (max(max(-127 - (((v2 + v3)/4)*4), (((v2 + v3)/4)*4) + -1999), 0) + (v4*-64)), -96), -132))"
((((v0*16)/4)*4) == (v0*16))
(((((((uint1)1 && ((0 + (v0*2)) <= (((((0*4) + v0) + 0)*2) + 0))) && ((3 + ((v0*2) + 13)) >= (((((1*4) + v0) + ((4 + 0) - 1))*2) + ((3 + 0) - 1)))) && ((((((v1*8) + v2) + v3)*2) + 0) <= (((((v1*8) + v2) + v3)*2) + 0))) && ((((((v1*8) + v2) + v3)*2) + ((3 + 0) - 1)) >= (((((v1*8) + v2) + v3)*2) + ((3 + 0) - 1)))) && ((((v4*3) + v5)*3) <= ((((v4*3) + v5)*3) + 0))) && (((((v4*3) + v5)*3) + 2) >= ((((v4*3) + v5)*3) + ((3 + 0) - 1))))
(((v0 + v1) + 1) <= ((((v0 - 1) + v1) + -2) - 1))
"(max(min(min(min(1999, 1999), min(v1 + v2, 2000) + -1), ((((v3*251) + v4) + -10) + (v5 + 18)) - 1) + 1, min(max(max(max(0, 0), max(v2, 0)), ((v3*251) + v4) + -10), (v5 + 18) + (((v3*251) + v4) + -10))) <= min(max(max(max(0, 0), max(v2, 0)), ((v3*251) + v4) + -10), (v5 + 18) + (((v3*251) + v4) + -10)))"
"(max(min((v1 + v2) + -1, (((v3*32) + -17) + 295) - 1) + 1, min(max(v2, (v3*32) + -17), 295 + ((v3*32) + -17))) <= min(max(v2, (v3*32) + -17), 295 + ((v3*32) + -17)))"
(((((((uint1)1 && ((((((0*4) + v0) + -2) + 0) + -5) <= (-2 + (v0 + -5)))) && ((((((((252 + 0) - 1)*4) + v0) + ((4 + -2) - 1)) + 3) + -5) >= (((4 + -2) - 1) + (v0 + 1000)))) && ((-2 + v1) <= (-2 + v1))) && ((((4 + -2) - 1) + v1) >= (((4 + -2) - 1) + v1))) && (v2 <= v2)) && (v2 >= v2))
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((250*4) + v0) + 3) >= (((250*4) + ((4 + 0) - 1)) + v0))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (v3 <= v3)) && (v3 >= v3))
(((((((uint1)1 && (((((v0*4) + v1) + 0) + -4) <= ((((v0*4) + 0) + v1) + -4))) && (((((v0*4) + v1) + 3) + -4) >= ((((v0*4) + ((4 + 0) - 1)) + v1) + -4))) && (v2 <= v2)) && (v2 >= v2)) && (v3 <= v3)) && (v3 >= v3))
"(0 == ((0 + (33 - max(v0*20, 13))) - 1))"
"((max(min(v0, 5), -58) + -7) >= (((max(min(v0, 5), -58) + -7) + (9 - max(min(v0, 5), -58))) - 1))"
"((((v0 + v1)*2) + -8) < (min(max(v1*2, (((v0 + 1) + v1)*2) + 1), ((v0 + 1) + v1)*2) + -10))"
"(((max(min((v1*-1000) + (((v2/1000)*-1000) + v2), 1000), -4)/4)*4) == max(min((v1*-1000) + (((v2/1000)*-1000) + v2), 1000), -4))"
((((v0*-36)/4)*4) == (v0*-36))
((-30 - (v0*2)) > (499 - (v0*2)))
"(max(min(509 - v0, (0 + 129) - 1) + 1, min(max(10 - v0, 0), 129 + 0)) <= min(max(10 - v0, 0), 129 + 0))"
((((v0 + v1) + v2)/250) <= (((((v0 - 1) + v1) + v2)/250) - 1))
"(max(0, min(136 - ((v0 % 2)*69), (0 + 69) - 1) + 1) <= 0)"
(((((((uint1)1 && (v0 <= (0 + v0))) && ((v0 + 511) >= (499 + v0))) && ((0 + ((v1*250) + v2)) <= (((v1*250) + 0) + v2))) && ((124 + (((v1*250) + v2) + 125)) >= (((v1*250) + ((250 + 0) - 1)) + v2))) && (v3 <= v3)) && (((v4 + v3) + -1) >= ((v4 + v3) - 1)))
"(max(min(min(min((v4 - v5) + 2, (((v2 + v3) + 3)/4) - v5), ((min((v4*4) + 2, v2 + v3) + 6)/4) - v5), (0 + (min(((((v6 + v7) + 3)/4) - (v8*252)) - (v7/4), 249) + 3)) - 1) + 1, min(max((((v3 + 6)/4) - v5) + 1, 0), (min(((((v6 + v7) + 3)/4) - (v8*252)) - (v7/4), 249) + 3) + 0)) <= min(max((((v3 + 6)/4) - v5) + 1, 0), (min(((((v6 + v7) + 3)/4) - (v8*252)) - (v7/4), 249) + 3) + 0))"
"((((max(min((v1*-1000) + v2, 1000), 0) + (v1*1000))/4)*4) == (max(min((v1*-1000) + v2, 1000), 0) + (v1*1000)))"
"(((max(v0, 85)*4) + -357) == ((((max(v0, 85)*4) + -357) + (359 - (max(v0, 85)*4))) - 1))"
"(((v0*4) + 3) < (min(max((v0 + 1)*2, (max(min(((v1*8) + v2)*2, 499), 0)*2) + 1)*2, ((v0 + 1)*4) + 2) + -6))"
(((((((uint1)1 && ((v0 + -3) <= (v0 + -3))) && ((v0 + 1) >= (v0 + 1))) && ((((v1 + v2) + 0) + 1) <= ((v1 + v2) + -3))) && ((((v1 + v2) + 3) + 1) >= ((v1 + v2) + 1))) && (0 <= 0)) && (2 >= 2))
"(((min(v0, 249)*8) + -4) == ((((min(v0, 249)*8) + -4) + 8) - 1))"
((v0 + -1) >= ((v0 - 1) + 1))
"((((v0*151) + (v1 + v2)) + -10) == (((((v0*151) + (v1 + v2)) + -10) + (306 - max(v0*151, 152))) - 1))"
((v0 + 8) < ((v0 + 1) + -2))
"(((((((uint1)1 && ((0 + (((min(v0, 500) + v1) + -508)/8)) <= (0 + (((min(v0, 500) + v1) + -508)/8)))) && ((3 + ((((min(v0, 500) + v1) + -508)/8) + ((v2/4)*4))) >= (((4 + 0) - 1) + ((((min(v0, 500) + v1) + -508)/8) + ((v2/4)*4))))) && ((((v3*33) + v4) + -1) <= ((((v3*33) + v4) + 0) + -1))) && ((((v3*33) + v4) + 31) >= ((((v3*33) + v4) + ((33 + 0) - 1)) + -1))) && (v5 <= v5)) && (v5 >= v5))"
(((v0*8) + ((v1*4) + v2)) < ((v0*8) + ((v1*4) + (v2 + 1))))
(((((v0 % ((v1 + 261)/252))*-252)/4)*4) == ((v0 % ((v1 + 261)/252))*-252))
"(max(min((v1 + v2) + -1, (((v3*256) + -177) + 423) - 1) + 1, min(max(v2, (v3*256) + -177), 423 + ((v3*256) + -177))) <= min(max(v2, (v3*256) + -177), 423 + ((v3*256) + -177)))"
(((((((uint1)1 && ((((((0*4) + v0) + -5) + 0) + -503) <= (((((0*4) + 0) + v0) + -5) + -503))) && ((((((125*4) + v0) + ((6 + -5) - 1)) + 3) + -503) >= (((((125*4) + ((4 + 0) - 1)) + v0) + ((6 + -5) - 1)) + -503))) && ((-5 + v1) <= (-5 + v1))) && ((((6 + -5) - 1) + v1) >= (((6 + -5) - 1) + v1))) && (v2 <= v2)) && (v2 >= v2))
"(((((((uint1)1 && ((((0*4) + (v0 + -2)) + 0) <= (-2 + v0))) && ((((1*4) + (v0 + 9)) + 3) >= (((4 + -2) - 1) + (v0 + 11)))) && ((max(v1 + 3, min(v2*4, 247) + v3) + -2) <= (-2 + v1))) && ((v1 + 1) >= (((4 + -2) - 1) + v1))) && (v4 <= v4)) && (v4 >= v4))"
(((((((uint1)1 && ((0 + ((v0*16) + v1)) <= (0 + ((v0*16) + v1)))) && ((3 + (((v0*16) + v1) + 12)) >= (3 + (((v0*16) + v1) + 12)))) && (((v2*2) + v3) <= (((v2*2) + 0) + v3))) && ((((v2*2) + v3) + 1) >= (((v2*2) + ((2 + 0) - 1)) + v3))) && (0 <= 0)) && (3 >= 3))
"(max(-703 - (v0*256), (v0*256) + 422) >= 0)"
(((v0 + 63)/64) != 0)
(((v0 + 255)/251) != 0)
"(((min(max(min(v2/((v3 + 37)/32), 0)*9, -8) + 3, max(min(v2/((v3 + 37)/32), 1)*9, -8) - (max(min(v2/((v3 + 37)/32), 1), 0)*9))/4)*4) == min(max(min(v2/((v3 + 37)/32), 0)*9, -8) + 3, max(min(v2/((v3 + 37)/32), 1)*9, -8) - (max(min(v2/((v3 + 37)/32), 1), 0)*9)))"
"(max(min(509 - v0, (0 + 9) - 1) + 1, min(max(10 - v0, 0), 9 + 0)) <= min(max(10 - v0, 0), 9 + 0))"
"(max(0, min(min((((v0 + v1) - max(min((v2*128) + v4, 2001), 2)) + -2)/4, ((max(min(min((v2*128) + 128, v3) + v4, 1997), -2) - max(min((v2*128) + v4, 2001), 2)) + 1)/4), (0 + ((v5/4) + 2)) - 1) + 1) <= 0)"
"(max(min(63 - (v0*32), (0 + 32) - 1) + 1, min(max(0 - (v0*32), 0), 32 + 0)) <= min(max(0 - (v0*32), 0), 32 + 0))"
(((((v0*3) + v1) + 6)/4) < ((((v0 + 1)*3) + v1)/4))
"(max(min(min(1999, min(v1 + v2, 2000) + -1), ((min(v3*2, 123) + v4) + 2) - 1) + 1, min(max(max(max(max(0, 0), max(v2, 0)), max(v2, 0)), min(v3*2, 123) + v4), 2 + (min(v3*2, 123) + v4))) <= min(max(max(max(max(0, 0), max(v2, 0)), max(v2, 0)), min(v3*2, 123) + v4), 2 + (min(v3*2, 123) + v4)))"
"(max(0, min(((v0 % 8) + 259)/256, (0 + (((v0 % 8) + 763)/256)) - 1) + 1) <= 0)"
(((v0 + v1) + -2) >= ((((v0 - 1) + v1) + 3) + 1))
(((((((uint1)1 && (((0 + (v0 + -6)) + 1) <= (-5 + v0))) && (((3 + (v0 + 996)) + 1) >= (1 + (v0 + 999)))) && (((v1 + v2) + 1) <= ((v1 + v2) + -5))) && (((v1 + v2) + 1) >= ((v1 + v2) + 1))) && (0 <= 0)) && (1 >= 1))
(((v0 + v1) + 1) < (((v0 + 1) + v1) + -5))
(((((v0*250) + v1) + v2) + 3) < ((((v0*250) + (v1 + 1)) + v2) + -2))
"(max(min(125 - (v0*2), (0 + 2) - 1) + 1, min(max(1 - (v0*2), 0), 2 + 0)) <= min(max(1 - (v0*2), 0), 2 + 0))"
(((((((uint1)1 && (((((((v0*16) + v1)*4) + v2) + 0) + -1) <= (((((v0*16) + v1)*4) + v2) + -1))) && (((((((v0*16) + v1)*4) + v2) + 3) + -1) >= ((((((v0*16) + v1)*4) + 3) + v2) + -1))) && ((v3/4) <= (v3/4))) && (((v3/4) + 32) >= ((33 + (v3/4)) - 1))) && ((v4*16) <= ((v4*16) + 0))) && (((v4*16) + 15) >= ((v4*16) + ((16 + 0) - 1))))
"((((min(v0*42, 83) + (v1*6)) + v2) + 6) < (((min(v0*42, 83) + ((v1 + 1)*6)) + v2) + -5))"
(((((((uint1)1 && ((0 + ((((v0*64) + v1)*2) + -3)) <= ((((v0*64) + v1)*2) + 0))) && ((3 + ((((v0*64) + v1)*2) + 125)) >= (((((v0*64) + v1) + 63)*2) + 2))) && ((0 + (v2*2)) <= (((((0*4) + v2) + 0)*2) + 0))) && ((2 + ((v2*2) + 14)) >= (((((1*4) + v2) + 3)*2) + 2))) && (((v3*2) + v4) <= ((v3*2) + v4))) && (((v3*2) + v4) >= ((v3*2) + v4)))
((0 - (((v0*2) + v1)*2)) > (499 - (((v0*2) + v1)*2)))
(((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && ((((0*4) + v1) + 0) <= (((0*4) + 0) + v1))) && ((((7*4) + v1) + 3) >= (((7*4) + ((4 + 0) - 1)) + v1))) && (0 <= 0)) && (((48 + 0) - 1) >= ((48 + 0) - 1)))
(((v0/125) + 1) != 0)
((((v0 + v1) + v2) + 5) <= (((((v0 - 1) + v1) + v2) + -4) - 1))
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= ((v0*4) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + v1) + 3))) && ((v2/4) <= (v2/4))) && (((v2 + 503)/4) >= ((v2 + 503)/4))) && (v3 <= v3)) && (v3 >= v3))
"(v0 < min(max((v1/8) + -5, v0 + 1), (v0 + 1) + -5))"
"(max(min(min(min(min(min(41, (((v5 + v3)/16) - (v4*2)) + 1), (((v5 + v3)/16) - (v4*2)) + 1), (((v5 + v3) + -2)/16) - (v4*2)), (((v5 + v3) + -2)/16) - (v4*2)), (0 + 43) - 1) + 1, min(max(((v3/16) - (v4*2)) + 2, 0), 43 + 0)) <= min(max(((v3/16) - (v4*2)) + 2, 0), 43 + 0))"
"(((((((uint1)1 && ((((v0 + v1)/8) + v2) <= (((v0 + v1)/8) + v2))) && ((((v0 + v1)/8) + v2) >= (((v0 + v1)/8) + v2))) && (((v3*2) + v4) <= (((v3*2) + 0) + v4))) && ((((v3*2) + v4) + 1) >= (((v3*2) + ((2 + 0) - 1)) + v4))) && ((((0*4) + (min(v5*72, 65) + (v6*4))) + 0) <= (min(v5*72, 65) + (v6*4)))) && ((((0*4) + (min(v5*72, 65) + (v6*4))) + 3) >= ((min(v5*72, 65) + (v6*4)) + 3)))"
"(max(min(125 - v0, (0 + 17) - 1) + 1, min(max(1 - v0, 0), 17 + 0)) <= min(max(1 - v0, 0), 17 + 0))"
((v0 + -127) == (((v0 + -127) + 128) - 1))
"((max(((v0*5) + v1)*8, 71) + -80) == (((max(((v0*5) + v1)*8, 71) + -80) + (82 - max(((v0*5) + v1)*8, 71))) - 1))"
"(max(min(min(min(1999, 1999), min(v1 + v2, 2000) + -1), ((((v3*151) + v4) + -10) + (306 - max(v3*151, 152))) - 1) + 1, min(max(max(max(0, 0), max(v2, 0)), ((v3*151) + v4) + -10), (306 - max(v3*151, 152)) + (((v3*151) + v4) + -10))) <= min(max(max(max(0, 0), max(v2, 0)), ((v3*151) + v4) + -10), (306 - max(v3*151, 152)) + (((v3*151) + v4) + -10)))"
"(max(min(min(min(((v4 - ((v7*128) + ((v8*252) + v6))) + 14)/4, (((v2 + v3) - ((v7*128) + ((v8*252) + v6))) + 7)/4), ((min(v4 + 4, v2 + v3) - ((v7*128) + ((v8*252) + v6))) + 10)/4), (0 + (((v5 - v6) + 21)/4)) - 1) + 1, min(max(((v3 - ((v7*128) + ((v8*252) + v6))) + 14)/4, 0), (((v5 - v6) + 21)/4) + 0)) <= min(max(((v3 - ((v7*128) + ((v8*252) + v6))) + 14)/4, 0), (((v5 - v6) + 21)/4) + 0))"
"((((((v0 + v1)/4) + (v2*2))*4) + 81) == (((((((v0 + v1)/4) + (v2*2))*4) + 81) + ((max(v2*2, 11)*-4) + 52)) - 1))"
(((v0 + v1) + -11) >= ((((v0 + v1) + -11) + 143) - 1))
(((v0 + v1) + 112) >= ((((v0 + v1) + 112) + 20) - 1))
"(((min(v0*8, 117) + v1) + v2) < ((min(v0*8, 117) + (v1 + 1)) + v2))"
(((v0*9) + ((v1*3) + v2)) < ((v0*9) + ((v1*3) + (v2 + 1))))
"(max(min(min(min(min(((v1 + v2)/4) + 1, ((v1 + v2)/4) + 1), ((v1 + v2) + -2)/4), ((v1 + v2) + -2)/4), ((((v3 + v4)*8) + -67) + 9) - 1) + 1, min(max((v2/4) + 2, ((v3 + v4)*8) + -67), 9 + (((v3 + v4)*8) + -67))) <= min(max((v2/4) + 2, ((v3 + v4)*8) + -67), 9 + (((v3 + v4)*8) + -67)))"
(((v0/8) + 1) != 0)
"(((max(v0*126, -3) + (v1 + v2)) + -244) == ((((max(v0*126, -3) + (v1 + v2)) + -244) + (min(v0*126, -3) + 129)) - 1))"
(((((((uint1)1 && ((v0 + -2) <= (v0 + -2))) && ((v0 + 1002) >= (v0 + 1002))) && ((((v1 + v2) + 0) + 3) <= ((v1 + v2) + -2))) && ((((v1 + v2) + 3) + 3) >= ((v1 + v2) + 3))) && (0 <= 0)) && (0 >= 0))
"(0 == ((0 + (18 - (max(min(v0, 6), 5)*3))) - 1))"
"(max(0, min(((max(min(((v0*32) + v1)*2, 435), -64) - max(min(((v0*32) + v1)*2, 499), 0)) + 61)/4, (0 + ((v2/4) + 17)) - 1) + 1) <= 0)"
"(((min(v0*32, 93) + ((v1*8) + v2)) + v3) < ((min(v0*32, 93) + ((v1*8) + (v2 + 1))) + v3))"
"(((((((uint1)1 && ((((0 + v0)*2) + 0) <= (((0 + v0)*2) + 0))) && ((((((3 + 0) - 1) + v0)*2) + ((3 + 0) - 1)) >= (((((3 + 0) - 1) + v0)*2) + ((3 + 0) - 1)))) && (((v1*2) + 0) <= ((v1*2) + 0))) && (((v1*2) + ((3 + 0) - 1)) >= ((v1*2) + ((3 + 0) - 1)))) && ((min(v2*4, 14) + 0) <= (min(v2*4, 14) + 0))) && ((min(v2*4, 14) + 3) >= (min(v2*4, 14) + ((4 + 0) - 1))))"
(0 >= ((0 + ((((((v0 + v1) % 250) + 999)/250)*16) + 23)) - 1))
"(((v0*4) + -4) == ((((v0*4) + -4) + ((min(v1 - (v2*33), -32)*4) + 264)) - 1))"
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + v1) + 0))) && ((((v0*4) + v1) + 3) >= (((v0*4) + v1) + 3))) && ((v2 + v3) <= (v2 + v3))) && ((v2 + v3) >= (v2 + v3))) && (0 <= 0)) && (24 >= 24))
((v0 + 1) < ((v0 + 1) + -2))
"(((((((uint1)1 && ((v0 + 0) <= (0 + v0))) && ((v0 + 3) >= (((4 + 0) - 1) + v0))) && (((min(v1*2, 123) + v2) + v3) <= ((min(v1*2, 123) + v2) + v3))) && (((min(v1*2, 123) + v2) + v3) >= ((min(v1*2, 123) + v2) + v3))) && (v4 <= v4)) && (v4 >= v4))"
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + v1) + 0))) && ((((v0*4) + v1) + 3) >= (((v0*4) + v1) + ((4 + 0) - 1)))) && (v2 <= v2)) && (v2 >= v2)) && (v3 <= v3)) && (v3 >= v3))
"(max(min(min(min((((v1 + v2) - max(min(v4, 2009), 10)) + 6)/4, ((min(max(min(v3 + v4, 1992), -7) + 5, v1 + v2) - max(min(v4, 2009), 10)) + 9)/4), ((max(min(v3 + v4, 1992), -7) - max(min(v4, 2009), 10)) + 14)/4), (0 + ((v5 + 21)/4)) - 1) + 1, min(max(((v2 - max(min(v4, 2009), 10)) + 13)/4, 0), ((v5 + 21)/4) + 0)) <= min(max(((v2 - max(min(v4, 2009), 10)) + 13)/4, 0), ((v5 + 21)/4) + 0))"
((0 - ((v0 + v1)*2)) >= (499 - ((v0 + v1)*2)))
"((((max((v2*32) + (max(min(v1/16, 126), 2)*16), (min(max((v2*2) + (max(min(v1/16, 126), 2) - max(min(((v3 + v1) + 47)/16, 124), 0)), 1)*16, 40) + (min((v2*2) + max(min(v1/16, 126), 2), max(min(((v3 + v1) + 47)/16, 124), 0) + 1)*16)) + -16)*-1)/4)*4) == (max((v2*32) + (max(min(v1/16, 126), 2)*16), (min(max((v2*2) + (max(min(v1/16, 126), 2) - max(min(((v3 + v1) + 47)/16, 124), 0)), 1)*16, 40) + (min((v2*2) + max(min(v1/16, 126), 2), max(min(((v3 + v1) + 47)/16, 124), 0) + 1)*16)) + -16)*-1))"
"(max(min(min((((v1 + v2) - ((v4/4)*4)) + -60)/64, ((min((v1 + v2) + 69, v3) - ((v4/4)*4)) + -53)/64), (0 + ((v5 + 74)/64)) - 1) + 1, min(max(((v2 - ((v4/4)*4)) + 80)/64, 0), ((v5 + 74)/64) + 0)) <= min(max(((v2 - ((v4/4)*4)) + 80)/64, 0), ((v5 + 74)/64) + 0))"
((((v0 + v1) + v2) + 3) <= (((((v0 - 1) + v1) + v2) + -2) - 1))
"(max(0, min(((max(min(v0*8, 113), -11) - max(min(v0*8, 125), 1)) + 9)/4, (0 + ((v1/4) + 4)) - 1) + 1) <= 0)"
(((((((uint1)1 && (((((0*4) + v0) + 0) + -3) <= ((((0*4) + 0) + v0) + -3))) && (((((63*4) + v0) + 3) + -3) >= ((((((64 + 0) - 1)*4) + ((4 + 0) - 1)) + v0) + -3))) && ((v1*4) <= (v1*4))) && ((v1*4) >= (v1*4))) && (v2 <= v2)) && (v2 >= v2))
((((v0*24)/8)*8) == (v0*24))
"(((min(v0*16, 236)/4)*4) == min(v0*16, 236))"
(((v0/2) + 2) != 0)
"(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + v1) + 0))) && ((((v0*4) + v1) + 3) >= (((v0*4) + v1) + 3))) && ((v2/125) <= (((min(0*8, 117) + 0) + v2)/125))) && (((v2 + 124)/125) >= (((min(((16 + 0) - 1)*8, 117) + ((8 + 0) - 1)) + v2)/125))) && (v3 <= v3)) && (v3 >= v3))"
((v0*4) == (((v0*4) + 12) - 1))
(((((v0*2) + v1) + v2)*4) == ((((((v0*2) + v1) + v2)*4) + 4) - 1))
(((((((uint1)1 && (((v0*8) + v1) <= ((v0*8) + v1))) && ((((v0*8) + v1) + 7) >= (((v0*8) + 7) + v1))) && ((((0*4) + v2) + 0) <= v2)) && ((((((v3 + -1)/4)*4) + v2) + 3) >= ((v3 + v2) - 1))) && (v4 <= v4)) && (((v5 + v4) + -1) >= ((v5 + v4) - 1)))
"((v0*4) == (((v0*4) + ((min(v1 - max(min(v2, 509), 10), -11)*4) + 48)) - 1))"
"(((((((uint1)1 && ((v0 + 0) <= (0 + v0))) && ((v0 + 3) >= (((4 + 0) - 1) + v0))) && (((min(v1*63, 62) + (min(v2*4, 59) + v3)) + v4) <= ((min(v1*63, 62) + (min(v2*4, 59) + v3)) + v4))) && (((min(v1*63, 62) + (min(v2*4, 59) + v3)) + v4) >= ((min(v1*63, 62) + (min(v2*4, 59) + v3)) + v4))) && (v5 <= v5)) && (v5 >= v5))"
"(((max(min((v1*-128) + ((max((v2 + 4)/128, 0)*-128) + (max(v3*4, -3) - min(v4, 1999))), 124), -4)/4)*4) == max(min((v1*-128) + ((max((v2 + 4)/128, 0)*-128) + (max(v3*4, -3) - min(v4, 1999))), 124), -4))"
"(((((((uint1)1 && ((0 + ((min(v1*168, 332) + (((v2*3) + v3)*4)) + v4)) <= ((min(v1*168, 332) + (((v2*3) + v3)*4)) + v4))) && ((3 + ((min(v1*168, 332) + (((v2*3) + v3)*4)) + v4)) >= ((min(v1*168, 332) + ((((v2*3) + v3)*4) + 3)) + v4))) && (((min(v5*42, 83) + (v6*14)) + v7) <= ((min(v5*42, 83) + (v6*14)) + v7))) && ((((min(v5*42, 83) + (v6*14)) + v7) + 13) >= (((min(v5*42, 83) + (v6*14)) + 13) + v7))) && (v8 <= v8)) && (v8 >= v8))"
"(((((((uint1)1 && ((0 + (((min(v1, 4) + v2) + -36)/16)) <= (((0*4) + (((min(v1, 4) + v2) + -36)/16)) + 0))) && ((3 + ((((min(v1, 4) + v2) + -36)/16) + ((((((((min(v1, 4) + v2) + 44)/16) + ((v3/4)*4)) - (((min(v1, 4) + v2) + -36)/16)) + 3)/4)*4))) >= ((((min(((((min(v1, 4) + v2) + 44)/16) + ((v3/4)*4)) - (((min(v1, 4) + v2) + -84)/16), 0)/4)*4) + max(((min(v1, 4) + v2) + -36)/16, (((min(v1, 4) + v2) + 92)/16) + ((v3/4)*4))) + 3))) && ((((v4/125)*8) + -1) <= (((v4/125)*8) + -1))) && (((((((v4 % 125) + 124)/125) + (v4/125))*8) + 11) >= ((((((v4 % 125) + 124)/125) + (v4/125))*8) + 11))) && (v5 <= v5)) && (v5 >= v5))"
"(((((((uint1)1 && ((0 + ((min(v0*128, 372) + (v1*4)) + v2)) <= ((min(v0*128, 372) + (v1*4)) + v2))) && ((3 + ((min(v0*128, 372) + (v1*4)) + v2)) >= (((min(v0*128, 372) + (v1*4)) + v2) + 3))) && ((v3/8) <= (v3/8))) && (((v3 + 132)/8) >= ((v3 + 132)/8))) && (v4 <= v4)) && (v4 >= v4))"
"(((((((uint1)1 && (((0 + (min(v0, 16) + v1)) + -16) <= ((min(v0, 16) + v1) + -16))) && (((3 + ((((max(v0, 16) + -1)/4)*4) + (min(v0, 16) + v1))) + -16) >= ((v0 + v1) + -1))) && (((min(v2*42, 83) + v3)/4) <= ((min(v2*42, 83) + v3)/4))) && ((((min(v2*42, 83) + v3) + 45)/4) >= (((min(v2*42, 83) + v3) + 45)/4))) && (v4 <= v4)) && (v4 >= v4))"
"((v0 + 5) < (min(max((v0 + 1) + 20, min(v1, 4) + v2), (v0 + 1) + 11) + -15))"
((v0/16) >= (((v0/16) + (((v0 % 16) + 15)/16)) - 1))
(((v0/252) + 1) != 0)
"(max(min(min(min(min(min(min(min(0, 1), 1), (1935 - v3)/64), (1935 - v3)/64), min(((min(v1 + v2, 2000) - v3) + -65)/64, 0)), min(((min(v1 + v2, 2000) - v3) + 1)/64, 1)), (0 + 2) - 1) + 1, min(max(max(max(max(-1 - (v3/64), ((max(v2, 0) - v3) + 65)/64), (65 - v3)/64), (65 - v3)/64), 0), 2 + 0)) <= min(max(max(max(max(-1 - (v3/64), ((max(v2, 0) - v3) + 65)/64), (65 - v3)/64), (65 - v3)/64), 0), 2 + 0))"
(((v0 + 49)/32) != 0)
((((v0*-1004)/4)*4) == (v0*-1004))
(((((((uint1)1 && (((((v0*4) + v1) + -2) + 0) <= ((((v0*4) + 0) + v1) + -2))) && (((((v0*4) + v1) + ((6 + -2) - 1)) + 3) >= ((((v0*4) + ((4 + 0) - 1)) + v1) + ((6 + -2) - 1)))) && ((((((v2*8) + v3) + v4) + 1) % 8) <= (((((v2*8) + v3) + v4) + 1) % 8))) && ((((((v2*8) + v3) + v4) + 1) % 8) >= (((((v2*8) + v3) + v4) + 1) % 8))) && (((v5*4) + v6) <= ((v5*4) + v6))) && (((v5*4) + v6) >= ((v5*4) + v6)))
"(((((((uint1)1 && ((max(v0/4, (((v0/4) + (((v0 % 4) + 999)/4)) + v1) + 2) + -3) <= (max(v0/4, (((v0/4) + (((v0 % 4) + 999)/4)) + v1) + 2) + -3))) && ((((v0/4) + (((v0 % 4) + 995)/4)) + v1) >= (((v0/4) + (((v0 % 4) + 995)/4)) + v1))) && ((0 + (v2/4)) <= (0 + (v2/4)))) && ((3 + ((v2/4) + 32)) >= (3 + ((v2/4) + 32)))) && (v3 <= v3)) && (v3 >= v3))"
"((max((min(v0*4, 3) + ((((v1/8)*2) + v2)*128)) - ((((((v1/8)*2) + v2)*32) + v0)*4), (min(v0*4, 3) + ((((((v1/8)*2) + v2)*8) + v3)*16)) - ((((((((v1/8)*2) + v2)*8) + v3)*4) + v0)*4)) + 19) <= 1024)"
"(max(v0/4, 0) >= ((max(v0/4, 0) + max(((v0 + 3)/4) - max(v0/4, 0), 0)) - 1))"
(((v0 + v1) + 4) < ((v0 + 1) + v1))
"(max(min(1999, (((v1*8) + v2) + 8) - 1) + 1, min(max(0, (v1*8) + v2), 8 + ((v1*8) + v2))) <= min(max(0, (v1*8) + v2), 8 + ((v1*8) + v2)))"
"((((max((v0*-125) + ((((v1 + min(((v2 + v3)*1000) + 1000, v4))/4) - -125) + -252), ((v1 + min(((v2 + v3)*1000) + 1000, v4)) + -965)/4)*-4)/4)*4) == (max((v0*-125) + ((((v1 + min(((v2 + v3)*1000) + 1000, v4))/4) - -125) + -252), ((v1 + min(((v2 + v3)*1000) + 1000, v4)) + -965)/4)*-4))"
"(((((min(((v4/((v5 + 999)/1000))*250) + v3, (v6 + v3) + -250) - (max(((min(((v4/((v5 + 999)/1000))*250) + v3, (v6 + v3) + -250) + ((((min(((v4/((v5 + 999)/1000))*250) + v3, (v6 + v3) + -250) % 4) + 253)/128)*128))/4) + 28, min((min(((v4/((v5 + 999)/1000))*250) + v3, (v6 + v3) + -250) + 257)/4, ((min(((v4/((v5 + 999)/1000))*250) + v3, (v6 + v3) + -250) + ((((min(((v4/((v5 + 999)/1000))*250) + v3, (v6 + v3) + -250) % 4) + 253)/128)*128))/4) + 28))*4))/4)/4)*4) == ((min(((v4/((v5 + 999)/1000))*250) + v3, (v6 + v3) + -250) - (max(((min(((v4/((v5 + 999)/1000))*250) + v3, (v6 + v3) + -250) + ((((min(((v4/((v5 + 999)/1000))*250) + v3, (v6 + v3) + -250) % 4) + 253)/128)*128))/4) + 28, min((min(((v4/((v5 + 999)/1000))*250) + v3, (v6 + v3) + -250) + 257)/4, ((min(((v4/((v5 + 999)/1000))*250) + v3, (v6 + v3) + -250) + ((((min(((v4/((v5 + 999)/1000))*250) + v3, (v6 + v3) + -250) % 4) + 253)/128)*128))/4) + 28))*4))/4))"
"(((((((uint1)1 && ((0 + ((((v0*8) + v1)*8) + v2)) <= (((v0*64) + (v1*8)) + v2))) && ((3 + (((((v0*8) + v1)*8) + v2) + 4)) >= (((v0*64) + ((v1*8) + 7)) + v2))) && ((((v3*32) + 0) + v4) <= (((v3*32) + 0) + v4))) && ((((v3*32) + ((32 + 0) - 1)) + v4) >= (((v3*32) + ((32 + 0) - 1)) + v4))) && (((min(v5, 1)*9) + (min(v6*2, 7) + v7)) <= ((min(v5, 1)*9) + (min(v6*2, 7) + v7)))) && (((min(v5, 1)*9) + (min(v6*2, 7) + v7)) >= ((min(v5, 1)*9) + (min(v6*2, 7) + v7))))"
"(max(min(1999, (((max(v1*4, -5) + v2) + 3) + (min(v1*4, -5) + 9)) - 1) + 1, min(max(0, (max(v1*4, -5) + v2) + 3), (min(v1*4, -5) + 9) + ((max(v1*4, -5) + v2) + 3))) <= min(max(0, (max(v1*4, -5) + v2) + 3), (min(v1*4, -5) + 9) + ((max(v1*4, -5) + v2) + 3)))"
"((((max((v0*4) + v1, 7)*-4)/4)*4) == (max((v0*4) + v1, 7)*-4))"
"(max(min(min(min(min((((v7 + v4) - max(min(v5, 2001), 2)) + -6)/8, (((v7 + v4) - max(min(v5, 2001), 2)) + -6)/8), ((min(max(min(v6 + v5, 1997), -2), (v7 + v4) + 4) - max(min(v5, 2001), 2)) + -3)/8), ((min(max(min(v6 + v5, 1997), -2), (v7 + v4) + 4) - max(min(v5, 2001), 2)) + -3)/8), (0 + ((v3 + 12)/8)) - 1) + 1, min(max(((v4 - max(min(v5, 2001), 2)) + 9)/8, 0), ((v3 + 12)/8) + 0)) <= min(max(((v4 - max(min(v5, 2001), 2)) + 9)/8, 0), ((v3 + 12)/8) + 0))"
"((max(v0, 500) + 4) >= 0)"
(((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && ((0 + (v1 + -3)) <= (v1 + -2))) && ((3 + (v1 + 33)) >= (v1 + 36))) && (0 <= 0)) && (2 >= ((3 + 0) - 1)))
"(max(min(min(min(min(min((((v5 + v4) - max(min(v2, 2001), 2)) + -2)/4, (((v5 + v4) - max(min(v2, 2001), 2)) + -2)/4), (((v5 + v4) - max(min(v2, 2001), 2)) + 1)/4), (((v5 + v4) - max(min(v2, 2001), 2)) + 1)/4), ((max(min(v2, 1869), -130) - max(min(v2, 2001), 2)) + 129)/4), (0 + ((v3/4) + 34)) - 1) + 1, min(max(((v4 - max(min(v2, 2001), 2)) + 5)/4, 0), ((v3/4) + 34) + 0)) <= min(max(((v4 - max(min(v2, 2001), 2)) + 5)/4, 0), ((v3/4) + 34) + 0))"
"(((((((uint1)1 && ((0 + ((min(v0*64, 436) + (v1*32)) + v2)) <= (0 + ((min(v0*64, 436) + (v1*32)) + v2)))) && ((3 + (((min(v0*64, 436) + (v1*32)) + v2) + 28)) >= (3 + (((min(v0*64, 436) + (v1*32)) + v2) + 28)))) && ((v3/4) <= ((0 + v3)/4))) && (((v3 + 31)/4) >= ((((32 + 0) - 1) + v3)/4))) && (v4 <= v4)) && (((v5 + v4) + -1) >= ((v5 + v4) - 1)))"
"((((min((v0*4) + (((v1 + 1) + ((v2/250)*2))*4), ((((v3 + v2) + -1)/250)*8) + 4)*-32)/4)*4) == (min((v0*4) + (((v1 + 1) + ((v2/250)*2))*4), ((((v3 + v2) + -1)/250)*8) + 4)*-32))"
(((v0 + 66)/63) != 0)
"((((min(v0 + (0 - max(min((v1 + v2)/8, 0), -125)), 124)*8)/4)*4) == (min(v0 + (0 - max(min((v1 + v2)/8, 0), -125)), 124)*8))"
"(max(min(248, (v1 + 128) - 1) + 1, min(max(0, v1), 128 + v1)) <= min(max(0, v1), 128 + v1))"
((((v0 + v1) + v2) + -1) >= ((((v0 - 1) + v1) + v2) + 1))
"(max(min(499, (v2 + (min(v1, 1) + 1)) - 1) + 1, min(max(0, v2), (min(v1, 1) + 1) + v2)) <= min(max(0, v2), (min(v1, 1) + 1) + v2))"
"(((((((uint1)1 && (((0 + (((v1*4) + ((v2*4) + v3)) + -2)) + -5) <= (-2 + (((v1*4) + ((v2*4) + v3)) + -5)))) && (((3 + (((((min(v1*-4, -6) + 9)/4)*4) + ((v1*4) + ((v2*4) + v3))) + 1)) + -5) >= (((4 + -2) - 1) + (min(((v1*4) + ((v2*4) + v3)) - max(v1*4, 6), (v2*4) + v3) + 4)))) && (0 <= 0)) && ((4 - 1) >= (4 - 1))) && (v4 <= v4)) && (v4 >= v4))"
"(max(min(1999, ((v1*4) + 4) - 1) + 1, min(max(0, v1*4), 4 + (v1*4))) <= min(max(0, v1*4), 4 + (v1*4)))"
"(((min(v0 - v1, 13)*32) + -416) >= 2)"
((((v0 + v1)/4)*4) >= (((((v0 + v1)/4)*4) + 132) - 1))
"(max(0, min(min((((v0 + v1) - max(min(v2, 1999), 0))/4) + -1, ((max(min((v3*128) + v4, min(v5 + v4, 2000) + -128), -127) - max(min((v3*128) + v4, min(v5 + v4, 2127) + -128), 0))/4) + 31), (0 + ((v6 + 131)/4)) - 1) + 1) <= 0)"
(((((((uint1)1 && (0 <= 0)) && (0 >= 0)) && ((0 + (((v0*4) + v1) + 1)) <= (((v0*4) + v1) + -2))) && ((3 + (((v0*4) + v1) + 1)) >= (((v0*4) + v1) + 4))) && (0 <= 0)) && (2 >= ((3 + 0) - 1)))
"(((((((uint1)1 && (((max(v0*4, -6) + v1) + 1) <= (-5 + ((v0*4) + v1)))) && ((((v0*4) + v1) + 4) >= (1 + (((v0*4) + v1) + 3)))) && (((0 + (min(v2*16, 47) + v3)) + -5) <= (-5 + (min(v2*16, 47) + v3)))) && (((3 + ((min(v2*16, 47) + v3) + 20)) + -5) >= (1 + ((min(v2*16, 47) + v3) + 15)))) && (0 <= 0)) && (1 >= 1))"
(((((((uint1)1 && (((0 + v0) + -2) <= ((0 + v0) + -2))) && (((((8 + 0) - 1) + v0) + ((6 + -2) - 1)) >= ((((8 + 0) - 1) + v0) + ((6 + -2) - 1)))) && (((((v1*8) + v2) + -2) + 1) <= ((((v1*8) + v2) + -2) + 1))) && (((((v1*8) + v2) + ((6 + -2) - 1)) + 1) >= ((((v1*8) + v2) + ((6 + -2) - 1)) + 1))) && ((((v3 % 16)*4) + 0) <= (((v3 % 16)*4) + 0))) && ((((v3 % 16)*4) + 3) >= (((v3 % 16)*4) + ((4 + 0) - 1))))
"(((((((uint1)1 && ((((max(-2*4, -6) + v0) + 0) + 1) <= (-5 + v0))) && ((((max(249*4, -6) + v0) + 3) + 1) >= (1 + (v0 + 999)))) && (((v1 + v2) + 1) <= ((v1 + v2) + -5))) && (((v1 + v2) + 1) >= ((v1 + v2) + 1))) && (0 <= 0)) && (1 >= 1))"
(((v0*4) + 3) <= ((((v0 - 1)*4) + -4) - 1))
"((v0 + -17) >= (((v0 + -17) + (min(((min((((v1 + v2) + 3)/4)*4, (((v2/4) + (v3*251))*4) + 998) - (v3*1004)) - ((v2/4)*4)) + v4, -21) + 22)) - 1))"
(((v0 + 128)/126) != 0)
"(((((((uint1)1 && ((-2 + v4) <= (-2 + v4))) && ((((4 + -2) - 1) + v4) >= (((4 + -2) - 1) + v4))) && (((0 + (v5 + v0)) + -5) <= (v5 + (v0 + -5)))) && (((3 + ((((228 - max(v1*4, 225))/4)*4) + (v5 + v0))) + -5) >= (v5 + (min(v0 - max(v1*4, 225), min(v2*223, 444) + v3) + 223)))) && (v6 <= v6)) && (v6 >= v6))"
(((((((uint1)1 && ((((0*4) + 0) + v0) <= (((0*4) + 0) + v0))) && ((((15*4) + 3) + (v0 + 188)) >= (((((63 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && (v1 <= (0 + v1))) && ((v1 + 124) >= (((125 + 0) - 1) + v1))) && (v2 <= v2)) && (v2 >= v2))
"(((((((uint1)1 && ((((min(v0*32, 973) + v1) + v2) + 5) <= (((min(v0*32, 973) + v1) + v2) + -4))) && ((((min(v0*32, 973) + v1) + v2) + 5) >= (((min(v0*32, 973) + v1) + v2) + 5))) && (((((0*4) + v3) + 0) + -4) <= (v3 + -4))) && (((((6*4) + v3) + 3) + -4) >= (v3 + 20))) && (0 <= 0)) && (2 >= 2))"
"(((min(v0*252, 248)/4)*4) == min(v0*252, 248))"
"(max(min(min(v1 + v2, 2000) + -1, ((min(v3*63, 62) + v4) + 63) - 1) + 1, min(max(max(max(max(0, 0), max(v2, 0)), max(v2, 0)), min(v3*63, 62) + v4), 63 + (min(v3*63, 62) + v4))) <= min(max(max(max(max(0, 0), max(v2, 0)), max(v2, 0)), min(v3*63, 62) + v4), 63 + (min(v3*63, 62) + v4)))"
"(max(min(min(min(1999, 1999), min(v1 + v2, 2000) + -1), ((v3 + -2) + 130) - 1) + 1, min(max(max(max(0, 0), max(v2, 0)), v3 + -2), 130 + (v3 + -2))) <= min(max(max(max(0, 0), max(v2, 0)), v3 + -2), 130 + (v3 + -2)))"
((((v0*0)/4)*4) == (v0*0))
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((2*4) + v0) + 3) >= (((2*4) + ((4 + 0) - 1)) + v0))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (v3 <= v3)) && (((v4 + v3) + -1) >= ((v4 + v3) - 1)))
(((((((uint1)1 && ((((v0 + v1) + 0) + 5) <= ((v0 + v1) + -4))) && ((((v0 + v1) + 3) + 5) >= ((v0 + v1) + 5))) && ((((v2*32) + v3) + -4) <= (((v2*32) + v3) + -4))) && ((((v2*32) + v3) + 36) >= (((v2*32) + v3) + 36))) && (0 <= 0)) && (2 >= 2))
"(((((min(v0*32, 93) + v1) + v2)/8) + 1) < (((min(v0*32, 93) + (v1 + 1)) + v2)/8))"
"(((max(min((v2*-64) + max(max(-3 - (min(min(((v3 + v4) + -1)/4, v5 + 249), ((v6*32) + v5) + 31)*4), (min(min(((v3 + v4) + -1)/4, v5 + 249), ((v6*32) + v5) + 31)*4) + -2123), 0), -64), -132)/4)*4) == max(min((v2*-64) + max(max(-3 - (min(min(((v3 + v4) + -1)/4, v5 + 249), ((v6*32) + v5) + 31)*4), (min(min(((v3 + v4) + -1)/4, v5 + 249), ((v6*32) + v5) + 31)*4) + -2123), 0), -64), -132))"
"(max(min(499, (((v1*2) + v2) + 2) - 1) + 1, min(max(0, (v1*2) + v2), 2 + ((v1*2) + v2))) <= min(max(0, (v1*2) + v2), 2 + ((v1*2) + v2)))"
"(max(0, min(((((v0 % 250) + 999)/250)*16) + 21, (0 + (((((v0 % 250) + 999)/250)*16) + 23)) - 1) + 1) <= 0)"
"((v0*4) == (((v0*4) + ((min(v1, 31)*4) + 4)) - 1))"
"(((((((v0 + v1) + 3)/4) - ((min(v0, 8) + v1)/4))*4) + 13) >= 0)"
(((((((uint1)1 && (0 <= 0)) && (0 >= 0)) && ((((v0*4) + v1) + 0) <= (((v0*4) + v1) + 0))) && ((((v0*4) + v1) + 3) >= (((v0*4) + v1) + ((4 + 0) - 1)))) && (v2 <= v2)) && (v2 >= v2))
(((((((uint1)1 && (((((0*4) + v0) + -2) + 0) <= ((((0*4) + 0) + v0) + -2))) && (((((3*4) + v0) + ((6 + -2) - 1)) + 3) >= ((((3*4) + ((4 + 0) - 1)) + v0) + ((6 + -2) - 1)))) && (((((v1*8) + v2) + -2) + 1) <= ((((v1*8) + v2) + -2) + 1))) && (((((v1*8) + v2) + ((6 + -2) - 1)) + 1) >= ((((v1*8) + v2) + ((6 + -2) - 1)) + 1))) && (((v3*4) + v4) <= ((v3*4) + v4))) && (((v3*4) + v4) >= ((v3*4) + v4)))
"((((min(((v0 % (((v1*8) + 29)/22))*22) + (((v2/250)*8) + -5), ((((v3 + v2) + -1)/250)*8) + -19) % 8)/8)*8) == (min(((v0 % (((v1*8) + 29)/22))*22) + (((v2/250)*8) + -5), ((((v3 + v2) + -1)/250)*8) + -19) % 8))"
(((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && ((0 + v1) <= (0 + v1))) && ((3 + v1) >= (((4 + 0) - 1) + v1))) && (((v2*9) + v3) <= ((v2*9) + v3))) && (((v2*9) + v3) >= ((v2*9) + v3)))
(((((((uint1)1 && (((((0*4) + v0) + -2) + 0) <= ((((0*4) + 0) + v0) + -2))) && (((((62*4) + v0) + ((11 + -2) - 1)) + 3) >= ((((62*4) + ((4 + 0) - 1)) + v0) + ((11 + -2) - 1)))) && (v1 <= v1)) && (v1 >= v1)) && ((v2*8) <= (v2*8))) && (((v2*8) + 7) >= ((8 + (v2*8)) - 1)))
((v0 + 4) != 0)
"(((min((v0*4) + (((v1*2)*4) + -5), (v2*8) + -1)/8)*8) == min((v0*4) + (((v1*2)*4) + -5), (v2*8) + -1))"
"(max(min(124, (((v1*8) + -1) + 69) - 1) + 1, min(max(0, (v1*8) + -1), 69 + ((v1*8) + -1))) <= min(max(0, (v1*8) + -1), 69 + ((v1*8) + -1)))"
"(max(min(min(min(min(min(min(min(min(min(min(min(min(min((v4 + 1)/4, (v4 + 1)/4), (v4 + 1)/4), (v4 + 1)/4), (min((v6 + v5) - v3, min(1997 - v3, v4) + 3) + -2)/4), (min((v6 + v5) - v3, min(1997 - v3, v4) + 3) + -2)/4), (min(min(2000 - v3, v4), (v6 + v5) - v3) + 1)/4), (min(min(2000 - v3, v4), (v6 + v5) - v3) + 1)/4), (min(min(2000 - v3, v4), (v6 + v5) - v3) + 1)/4), (1998 - v3)/4), (1998 - v3)/4), (1998 - v3)/4), (1998 - v3)/4), (0 + ((v4/4) + 2)) - 1) + 1, min(max(max(max(max(max(max(max(((max(v5, 0) - v3) + 5)/4, ((max(v5, 0) - v3) + 5)/4), ((max(v5, 0) - v3) + 5)/4), (2 - v3)/4), (2 - v3)/4), (5 - v3)/4), (5 - v3)/4), 0), ((v4/4) + 2) + 0)) <= min(max(max(max(max(max(max(max(((max(v5, 0) - v3) + 5)/4, ((max(v5, 0) - v3) + 5)/4), ((max(v5, 0) - v3) + 5)/4), (2 - v3)/4), (2 - v3)/4), (5 - v3)/4), (5 - v3)/4), 0), ((v4/4) + 2) + 0))"
"((v0 + 3) < (min(max(v1/16, (v0 + 1) + 5), v0 + 1) + -2))"
(((((((uint1)1 && ((v0 + v1) <= (v0 + v1))) && ((v0 + v1) >= (v0 + v1))) && ((((v2*4) + v3) + 0) <= (((v2*4) + 0) + v3))) && ((((v2*4) + v3) + 3) >= (((v2*4) + ((4 + 0) - 1)) + v3))) && (v4 <= v4)) && (v4 >= v4))
"(((min(v0*223, 444) + v1) + v2) < ((min(v0*223, 444) + (v1 + 1)) + v2))"
"(max(min(min((((v1 + v2) - max(min(v4, 2009), 10)) + -53)/63, ((min(max(min(v3 + v4, 1992), -7), (v1 + v2) + 54) - max(min(v4, 2009), 10)) + -45)/63), (0 + ((v5 + 80)/63)) - 1) + 1, min(max(((v2 - max(min(v4, 2009), 10)) + 72)/63, 0), ((v5 + 80)/63) + 0)) <= min(max(((v2 - max(min(v4, 2009), 10)) + 72)/63, 0), ((v5 + 80)/63) + 0))"
(((((((uint1)1 && ((-2 + v0) <= (-2 + v0))) && ((((11 + -2) - 1) + v0) >= (((11 + -2) - 1) + v0))) && (v1 <= v1)) && (v1 >= v1)) && (((0*4) + 0) <= 0)) && (((((12 + 0) - 1)*4) + 3) >= 47))
"(max(min(((v1 + v2) + -1)/8, ((max(v3*4, -1) + v4) + (min(v3*4, -1) + 5)) - 1) + 1, min(max((v2 + 7)/8, max(v3*4, -1) + v4), (min(v3*4, -1) + 5) + (max(v3*4, -1) + v4))) <= min(max((v2 + 7)/8, max(v3*4, -1) + v4), (min(v3*4, -1) + 5) + (max(v3*4, -1) + v4)))"
(((((((uint1)1 && (((((v0*4) + v1) + 0) + -1) <= ((((v0*4) + 0) + v1) + -1))) && (((((v0*4) + v1) + 3) + -1) >= ((((v0*4) + ((4 + 0) - 1)) + v1) + -1))) && (0 <= 0)) && (0 >= 0)) && (v2 <= v2)) && (v2 >= v2))
"((max(min((v0*8) - v1, 5), -2) + -7) == (((max(min((v0*8) - v1, 5), -2) + -7) + (9 - max(min((v0*8) - v1, 5), -2))) - 1))"
"(max(min(min((((v1 + v2) - (max(min((v4/125)*8, 125), 1)*16)) + -105)/125, ((min((max(min((((v3 + v4) + -1)/125)*8, 113), -11)*16) + 64, v1 + v2) - (max(min((v4/125)*8, 125), 1)*16)) + 19)/125), (0 + (((v5*16) + 332)/125)) - 1) + 1, min(max(((v2 - (max(min((v4/125)*8, 125), 1)*16)) + 144)/125, 0), (((v5*16) + 332)/125) + 0)) <= min(max(((v2 - (max(min((v4/125)*8, 125), 1)*16)) + 144)/125, 0), (((v5*16) + 332)/125) + 0))"
"(v0 >= ((v0 + (min(v1 - (max(((v2*16) - (((v3 + v4) + -1)/4)) + v5, -15)*4), 0) + 1)) - 1))"
"(max(-1009 - v0, v0 + 4) >= 0)"
(((v0 + 67)/63) != 0)
(((((v0*4) + v1) + v2) + 5) < (((v0*4) + (v1 + 1)) + v2))
((v0 + 13) != 0)
(((v0*4) + 4) != 0)
((((v0*64) + 105)/17) != 0)
"((v0 + -17) == (((v0 + -17) + (min((((((v1 + v2) + 3)/4)*4) - (v3*126)) - ((v2/4)*4), 114) + 24)) - 1))"
(((v0 + 19)/17) != 0)
"(max(min(min(2, min(v1 + v2, 3) + -1), (v4 + v3) - 1) + 1, min(max(max(0, max(v2, 0)), v4), v3 + v4)) <= min(max(max(0, max(v2, 0)), v4), v3 + v4))"
"(((v0*4) + -7) == ((((v0*4) + -7) + ((max(v1*18, 17)*-4) + 140)) - 1))"
"(((((((uint1)1 && ((v0 + v1) <= (v0 + v1))) && ((v0 + v1) >= (v0 + v1))) && ((((0*4) + 0) + v2) <= (0 + v2))) && ((((7*4) + 3) + (v2 + 32)) >= (((64 + 0) - 1) + v2))) && ((min(v3*4, 14) + 0) <= (min(v3*4, 14) + 0))) && ((min(v3*4, 14) + 3) >= (min(v3*4, 14) + ((4 + 0) - 1))))"
(((((((uint1)1 && ((0 + v0) <= (((0*4) + 0) + v0))) && ((3 + (v0 + 12)) >= (((((4 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && ((v1*4) <= (v1*4))) && ((v1*4) >= (v1*4))) && (v2 <= v2)) && (v2 >= v2))
"(((((((uint1)1 && ((((max(v0*4, -6) + v1) + 0) + 1) <= (-5 + ((v0*4) + v1)))) && ((((max(v0*4, -6) + v1) + 3) + 1) >= (1 + (((v0*4) + v1) + 3)))) && ((v2 + -5) <= ((0 + v2) + -5))) && ((v2 + 125) >= ((((125 + 0) - 1) + v2) + 1))) && (0 <= 0)) && (1 >= 1))"
"(max(min(min(v1 + v2, 2000) + -1, (((v4 + v5) + 3) + (min(v3*4, -5) + 9)) - 1) + 1, min(max(max(max(max(max(max(0, 0), 0), max(v2, 0)), max(v2, 0)), max(v2, 0)), (v4 + v5) + 3), (min(v3*4, -5) + 9) + ((v4 + v5) + 3))) <= min(max(max(max(max(max(max(0, 0), 0), max(v2, 0)), max(v2, 0)), max(v2, 0)), (v4 + v5) + 3), (min(v3*4, -5) + 9) + ((v4 + v5) + 3)))"
(0 >= ((0 + ((((v0 + v1) % 4) + 507)/4)) - 1))
"(0 == ((0 + (16 - (max(min(v0, 8), 7)*2))) - 1))"
"((max(((((min(v0, 4) + v1) + 1036)/16) + (v2*63)) - min(max(((min(v0, 4) + v1) + -36)/16, (((min(v0, 4) + v1) + 44)/16) + (v2*63)), (((min(v0, 4) + v1) + -36)/16) + (v2*63)), 67) + 1) <= 1024)"
"(((((((uint1)1 && ((max(v0/16, v1 + 5) + -2) <= (-2 + v1))) && ((v1 + 3) >= (((6 + -2) - 1) + v1))) && ((((max(-2*4, -5) + v2) + 0) + -60) <= (((((max(-2, 0)*4) + 0) + v2) + -2) + -63))) && ((((max(2*4, -5) + v2) + 3) + -60) >= (((((2*4) + ((4 + 0) - 1)) + v2) + ((6 + -2) - 1)) + -63))) && (0 <= 0)) && (0 >= 0))"
"(max(min(min(v1 + v2, 2000) + -1, ((v3 + -2) + 130) - 1) + 1, min(max(max(max(max(max(max(0, 0), 0), max(v2, 0)), max(v2, 0)), max(v2, 0)), v3 + -2), 130 + (v3 + -2))) <= min(max(max(max(max(max(max(0, 0), 0), max(v2, 0)), max(v2, 0)), max(v2, 0)), v3 + -2), 130 + (v3 + -2)))"
"(((max(min(((v0 + v1)/125)*8, 125), 1)*2) + -2) == ((((max(min(((v0 + v1)/125)*8, 125), 1)*2) + -2) + ((v2*2) + 26)) - 1))"
"((((((min(((v0 % ((v1 + 999)/1000))*1000) + v2, (v1 + v2) + -1000) - ((min(((v0 % ((v1 + 999)/1000))*1000) + v2, (v1 + v2) + -1000)/4)*4)) + ((((min(((v0 % ((v1 + 999)/1000))*1000) + v2, (v1 + v2) + -1000) % 4) + 999)/4)*4))/4)/130)*130) == (((min(((v0 % ((v1 + 999)/1000))*1000) + v2, (v1 + v2) + -1000) - ((min(((v0 % ((v1 + 999)/1000))*1000) + v2, (v1 + v2) + -1000)/4)*4)) + ((((min(((v0 % ((v1 + 999)/1000))*1000) + v2, (v1 + v2) + -1000) % 4) + 999)/4)*4))/4))"
"(((max(min(v0*2, 509), 10)*4) + -44) == ((((max(min(v0*2, 509), 10)*4) + -44) + ((v1*4) + 56)) - 1))"
"(((((((uint1)1 && (((((0*4) + 0) + (max(v0*16, -5) + v1)) + 3) <= ((0 + ((v0*16) + v1)) + -2))) && (((((1*4) + 3) + ((((min(v0*16, -5) + 20)/8)*8) + (max(v0*16, -5) + v1))) + 3) >= ((3 + (((v0*16) + v1) + 20)) + -2))) && (((v2*8) + -1) <= (-2 + ((v2*8) + 1)))) && (((v2*8) + 11) >= (3 + ((v2*8) + 8)))) && (v3 <= v3)) && (v3 >= v3))"
(((((((uint1)1 && ((((0*4) + v0) + 0) <= v0)) && ((((249*4) + v0) + 3) >= (v0 + 999))) && ((v1/4) <= (v1/4))) && (((v1/4) + 32) >= ((v1/4) + 32))) && (v2 <= v2)) && (v2 >= v2))
"(((((((uint1)1 && ((((0*4) + 0) + ((min(v0, 128) + v1) + -128)) <= (0 + ((min(v0, 4) + v1) + -4)))) && ((((31*4) + 3) + (min(((((max(v0, 4) + -1)/128)*128) + (min(v0, 4) + v1)) + 124, v0 + v1) + -128)) >= (((4 + 0) - 1) + ((v0 + v1) + -4)))) && ((0 + (min(v2*63, 62) + v3)) <= ((min(v2*63, 62) + 0) + v3))) && ((1 + ((min(v2*63, 62) + v3) + 61)) >= ((min(v2*63, 62) + ((63 + 0) - 1)) + v3))) && (v4 <= v4)) && (v4 >= v4))"
"((max(v0, 8) + 9) >= 0)"
((((v0*-12)/4)*4) == (v0*-12))
((0 - (v0*2)) >= (499 - (v0*2)))
"((((max(min(((max((max(min(min(((v0 % ((v1 + 69)/64))*64) + ((v2/8) + -5), ((v3 + v2) + -497)/8)/8, 0), -8)*-1) + 0, min(((min(((v0 % ((v1 + 69)/64))*64) + ((v2/8) + -5), ((v3 + v2) + -497)/8)*-1) + 241)/8, 7) + 1)*8) + min(((v0 % ((v1 + 69)/64))*64) + ((v2/8) + -5), ((v3 + v2) + -497)/8))*2, 515), 16)*2)/2)*2) == (max(min(((max((max(min(min(((v0 % ((v1 + 69)/64))*64) + ((v2/8) + -5), ((v3 + v2) + -497)/8)/8, 0), -8)*-1) + 0, min(((min(((v0 % ((v1 + 69)/64))*64) + ((v2/8) + -5), ((v3 + v2) + -497)/8)*-1) + 241)/8, 7) + 1)*8) + min(((v0 % ((v1 + 69)/64))*64) + ((v2/8) + -5), ((v3 + v2) + -497)/8))*2, 515), 16)*2))"
"(max(min(min(min(min(((v1 + v2)/4) + 1, ((v1 + v2)/4) + 1), ((v1 + v2) + -2)/4), ((v1 + v2) + -2)/4), (((v4*8) + -67) + ((min(v3, -2)*8) + 89)) - 1) + 1, min(max((v2/4) + 2, (v4*8) + -67), ((min(v3, -2)*8) + 89) + ((v4*8) + -67))) <= min(max((v2/4) + 2, (v4*8) + -67), ((min(v3, -2)*8) + 89) + ((v4*8) + -67)))"
"(max(min(min((min(v0 + v1, 2000) - v2) + -1, 1999 - v2), (0 + 1000) - 1) + 1, min(max(max(max(max(0 - v2, 0 - v2), max(v1, 0) - v2), max(v1, 0) - v2), 0), 1000 + 0)) <= min(max(max(max(max(0 - v2, 0 - v2), max(v1, 0) - v2), max(v1, 0) - v2), 0), 1000 + 0))"
(((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && ((((v1*4) + v2) + 0) <= (((v1*4) + 0) + v2))) && ((((v1*4) + v2) + 3) >= (((v1*4) + ((4 + 0) - 1)) + v2))) && (v3 <= v3)) && (v3 >= v3))
"((((max(min(v0, 5), 2)*8) + -44) + (48 - (max(min(v0, 5), 2)*8))) <= ((max(min(v0, 5), 2)*8) + -44))"
((((v0*32) + v1) + v2) < (((v0*32) + (v1 + 1)) + v2))
(((v0 + 76)/63) != 0)
(((((((uint1)1 && ((((((v0*16) + v1)*4) + v2) + 0) <= ((((v0*16) + v1)*4) + v2))) && ((((((v0*16) + v1)*4) + v2) + 3) >= (((((v0*16) + v1)*4) + 3) + v2))) && (0 <= 0)) && (0 >= 0)) && (v3 <= v3)) && (v3 >= v3))
"(((((min((v2*16) + (((v1/250)*4)*16), ((((v3 + v1) + -1)/250)*64) + 89)*4) + (min(min((v2*16) + (((v1/250)*4)*16), ((((v3 + v1) + -1)/250)*64) + 105)*4, (v2*64) + ((((v1/250)*4)*64) + 3))*-1))/4)*4) == ((min((v2*16) + (((v1/250)*4)*16), ((((v3 + v1) + -1)/250)*64) + 89)*4) + (min(min((v2*16) + (((v1/250)*4)*16), ((((v3 + v1) + -1)/250)*64) + 105)*4, (v2*64) + ((((v1/250)*4)*64) + 3))*-1)))"
(((((((uint1)1 && (((((v0 + v1)*4) + -5) + -268) <= ((((v0 + v1)*4) + -5) + -268))) && (((((v0 + v1)*4) + ((7 + -5) - 1)) + -268) >= ((((v0 + v1)*4) + ((7 + -5) - 1)) + -268))) && (((0 + ((v2*4) + -2)) + -175) <= ((((((0*4) + 0) + v2)*4) + -5) + -172))) && (((3 + ((v2*4) + 461)) + -175) >= ((((((14*4) + ((4 + 0) - 1)) + v2)*4) + ((7 + -5) - 1)) + -172))) && (v3 <= v3)) && (v3 >= v3))
"(((min(v0*3, 5) + v1) + v2) < ((min(v0*3, 5) + (v1 + 1)) + v2))"
"(0 == ((0 + (127 - max(v0*8, 119))) - 1))"
"(max(min(min(min(min(min(((2006 - v3)/4) + (v4*-252), ((v7 + 14)/4) - (v4*252)), ((v7 + 14)/4) - (v4*252)), ((min(v5 + v6, min(v3 + v7, 1992) + 8) - ((v4*1008) + v3)) + 6)/4), ((min(v5 + v6, min(v3 + v7, 1995) + 5) - ((v4*1008) + v3)) + 9)/4), (0 + ((min(v8, 993) + 21)/4)) - 1) + 1, min(max(max(max((((6 - v3)/4) + (v4*-252)) + 1, (((9 - v3)/4) + (v4*-252)) + 1), max(((v6 - ((v4*1008) + v3)) + 13)/4, (((9 - v3)/4) + (v4*-252)) + 1)), 0), ((min(v8, 993) + 21)/4) + 0)) <= min(max(max(max((((6 - v3)/4) + (v4*-252)) + 1, (((9 - v3)/4) + (v4*-252)) + 1), max(((v6 - ((v4*1008) + v3)) + 13)/4, (((9 - v3)/4) + (v4*-252)) + 1)), 0), ((min(v8, 993) + 21)/4) + 0))"
"(max(min(min(((v1 + v2)/4) + 1, ((v1 + v2) + -2)/4), (((v3*8) + -3) + 137) - 1) + 1, min(max((v2/4) + 2, (v3*8) + -3), 137 + ((v3*8) + -3))) <= min(max((v2/4) + 2, (v3*8) + -3), 137 + ((v3*8) + -3)))"
(((v0*4) + 5) != 0)
"(((((((uint1)1 && ((((0*4) + max((((v0*4) + v1)/8)*8, ((v0*4) - (((v0*4) + v1) % 8)) + v1)) + 0) <= ((((v0*4) + v1)/8)*8))) && ((((0*4) + max((((v0*4) + v1)/8)*8, ((v0*4) + v1) + 3)) + 3) >= (((v0*4) + v1) + 3))) && (v2 <= v2)) && ((v2 + 8) >= (v2 + 8))) && (v3 <= v3)) && (v3 >= v3))"
(((v0*4) + 4) <= (v0*4))
"(max(min(min(min(min(min(min((v4/125) + -1, (v4/125) + -1), (min(min(2134 - v1, v4), ((v2 + v3) - v1) + 134)/125) + -1), (min((v2 + v3) - v1, min(1992 - v1, v4) + 8) + -133)/125), (1867 - v1)/125), (1867 - v1)/125), (0 + ((v4 + 124)/125)) - 1) + 1, min(max(max(max(max(((max(v3, 0) - v1) + 134)/125, (-8 - v1)/125), (134 - v1)/125), (134 - v1)/125), 0), ((v4 + 124)/125) + 0)) <= min(max(max(max(max(((max(v3, 0) - v1) + 134)/125, (-8 - v1)/125), (134 - v1)/125), (134 - v1)/125), 0), ((v4 + 124)/125) + 0))"
(((((((uint1)1 && (0 <= 0)) && (0 >= 0)) && ((0 + (((v0*4) + v1) + 1)) <= (((v0*4) + v1) + -2))) && ((3 + (((v0*4) + v1) + 1)) >= (((v0*4) + v1) + 4))) && (v2 <= v2)) && (v2 >= v2))
((v0*4) == (((v0*4) + (((((v1*2) + v2) - v0)*4) + 8)) - 1))
"(((((((uint1)1 && ((0 + ((((v0*8) + v1)*8) + v2)) <= (((v0*64) + (v1*8)) + v2))) && ((3 + (((((v0*8) + v1)*8) + v2) + 4)) >= (((v0*64) + ((v1*8) + 7)) + v2))) && (((min(v3*4, 246) + v4) + v5) <= ((min(v3*4, 246) + v4) + v5))) && (((min(v3*4, 246) + v4) + v5) >= ((min(v3*4, 246) + v4) + v5))) && (v6 <= v6)) && (v6 >= v6))"
((((v0 + v1)/8) + 1) <= ((((v0 - 1) + v1)/8) - 1))
"(((min((v0*16) + (((v1/250)*8) + -5), ((((v2 + v1) + -1)/250)*8) + -13)/8)*8) == min((v0*16) + (((v1/250)*8) + -5), ((((v2 + v1) + -1)/250)*8) + -13))"
"(max(min(min(min(min(min(((v6 - ((v2*335) + v3)) + -1)/4, ((v6 - ((v2*335) + v3)) + -1)/4), ((min(min((v4 + v5) + 7, v6), 2007) - ((v2*335) + v3)) + -1)/4), ((min(min((v4 + v5) + 10, v6), 2010) - ((v2*335) + v3)) + -1)/4), (2006 - ((v2*335) + v3))/4), (0 + ((v7 + 6)/4)) - 1) + 1, min(max(max(max(((max(v5, 0) - ((v2*335) + v3)) + 13)/4, (10 - ((v2*335) + v3))/4), (13 - ((v2*335) + v3))/4), 0), ((v7 + 6)/4) + 0)) <= min(max(max(max(((max(v5, 0) - ((v2*335) + v3)) + 13)/4, (10 - ((v2*335) + v3))/4), (13 - ((v2*335) + v3))/4), 0), ((v7 + 6)/4) + 0))"
"(((((((uint1)1 && ((((v0*4) + v1) + v2) <= (((v0*4) + v1) + v2))) && ((((v0*4) + v1) + v2) >= (((v0*4) + v1) + v2))) && (0 <= 0)) && (0 >= 0)) && ((min(v3*4, 133) + 0) <= (min(v3*4, 133) + 0))) && ((min(v3*4, 133) + 3) >= (min(v3*4, 133) + ((4 + 0) - 1))))"
"(((v0*4) + -44) == ((((v0*4) + -44) + ((min((max(min((((v1 + v2) + 7)/8)*2, 497), -2) - ((v3/5)*167)) - max(min((v2/8)*2, 509), 10), 154)*4) + 56)) - 1))"
"((((max(min((v0*2) + v1, 4), 3)*-8)/4)*4) == (max(min((v0*2) + v1, 4), 3)*-8))"
(((((((uint1)1 && (((((v0*63) + v1) + v2) + -2) <= ((((v0*63) + v1) + v2) + -2))) && (((((v0*63) + v1) + v2) + ((11 + -2) - 1)) >= ((((v0*63) + v1) + v2) + ((11 + -2) - 1)))) && ((((0*4) + ((v3*12) + v4)) + 0) <= (0 + ((v3*12) + v4)))) && ((((0*4) + ((v5*4) + ((v3*12) + v4))) + 3) >= (((4 + 0) - 1) + ((v5*4) + ((v3*12) + v4))))) && (v6 <= v6)) && (v6 >= v6))
"(0 >= ((0 + (35 - max((v0 % 4)*9, 26))) - 1))"
(((((((uint1)1 && ((((((v0*3) + v1)*4) + v2) + 0) <= ((((v0*3) + v1)*4) + v2))) && ((((((v0*3) + v1)*4) + v2) + 3) >= (((((v0*3) + v1)*4) + 3) + v2))) && (0 <= 0)) && (0 >= 0)) && (v3 <= v3)) && (v3 >= v3))
"(max(min((122 - v0)/4, (0 + 9) - 1) + 1, min(max(((0 - v0)/4) + 1, 0), 9 + 0)) <= min(max(((0 - v0)/4) + 1, 0), 9 + 0))"
"((((max(min((max((v0*4) + ((v1/250) - (((v2 + v1) + -1)/250)), -3)*-64) + 65, (min((v0*-4) + ((((v2 + v1) + -1)/250) - (v1/250)), 3)*64) + 88)/24, -1)*24)/4)*4) == (max(min((max((v0*4) + ((v1/250) - (((v2 + v1) + -1)/250)), -3)*-64) + 65, (min((v0*-4) + ((((v2 + v1) + -1)/250) - (v1/250)), 3)*64) + 88)/24, -1)*24))"
(((((v0/4)*4) + v1) + 131) < ((((v0/4)*4) + (v1 + 1)) + -2))
"(((((((uint1)1 && ((0 + ((((((v0*32) + v1)*2) + v2)*2) + 1)) <= ((((((v0*32) + v1)*2) + v2)*2) + 0))) && ((3 + (min(((((v0*32) + v1)*2) + v2)*2, (max(((v0*64) + v2)*2, (((((v0*32) + v1)*2) + v2)*2) + 1) + (((0 - max(v1*-4, 1))/4)*4)) + 3) + 1)) >= (((((((v0*32) + v1)*2) + v2) + 1)*2) + 2))) && ((0 + (v3*2)) <= (((((0*4) + v3) + 0)*2) + 0))) && ((2 + ((v3*2) + 14)) >= (((((1*4) + v3) + 3)*2) + 2))) && (0 <= 0)) && (0 >= 0))"
"(max(min((v1 + v2) + -1, ((((v4*16) + v5)*4) + ((min(v3, 15)*4) + 4)) - 1) + 1, min(max(v2, ((v4*16) + v5)*4), ((min(v3, 15)*4) + 4) + (((v4*16) + v5)*4))) <= min(max(v2, ((v4*16) + v5)*4), ((min(v3, 15)*4) + 4) + (((v4*16) + v5)*4)))"
"(((min(v0*63, 62) + (min(v1*2, 61) + v2)) + v3) < ((min(v0*63, 62) + (min(v1*2, 61) + (v2 + 1))) + v3))"
((((v0 + v1)*2) + 2) <= ((((v0 - 1) + v1)*2) - 1))
"((((max(min(((max(min(min(((v0 % ((v1 + 69)/64))*64) + ((v2/8) + -5), ((v3 + v2) + -497)/8)/8, 0), -8)*-8) + min(((v0 % ((v1 + 69)/64))*64) + ((v2/8) + -5), ((v3 + v2) + -497)/8))*2, 499), 0)*2)/2)*2) == (max(min(((max(min(min(((v0 % ((v1 + 69)/64))*64) + ((v2/8) + -5), ((v3 + v2) + -497)/8)/8, 0), -8)*-8) + min(((v0 % ((v1 + 69)/64))*64) + ((v2/8) + -5), ((v3 + v2) + -497)/8))*2, 499), 0)*2))"
((v0 + -5) >= (((v0 + -5) + 5) - 1))
"(max(min((v1 + v2) + -1, (((v3*18) + v4) + 18) - 1) + 1, min(max(v2, (v3*18) + v4), 18 + ((v3*18) + v4))) <= min(max(v2, (v3*18) + v4), 18 + ((v3*18) + v4)))"
"(((min(v0*168, 332)/4)*4) == min(v0*168, 332))"
(((((((uint1)1 && ((((v0*65) + v1) + -10) <= ((((v0*65) + 0) + v1) + -10))) && ((((v0*65) + v1) + 54) >= ((((v0*65) + ((65 + 0) - 1)) + v1) + -10))) && ((((((v2*2) + v3)*2) + 0) + -10) <= ((((v2*2) + v3)*2) + -10))) && ((((((v2*2) + v3)*2) + 3) + -10) >= (((((v2*2) + v3)*2) + 3) + -10))) && ((v4*5) <= ((v4*5) + 0))) && (((v4*5) + 4) >= ((v4*5) + ((5 + 0) - 1))))
"(((v0*4) + -8) == ((((v0*4) + -8) + ((min(v1, 5)*4) + 12)) - 1))"
(((((((uint1)1 && ((v0 + v1) <= (v0 + v1))) && ((v0 + v1) >= (v0 + v1))) && ((v2 + 0) <= (0 + v2))) && ((v2 + 3) >= (((4 + 0) - 1) + v2))) && (v3 <= v3)) && (v3 >= v3))
(((((v0 % ((v1 + 6)/4))*-4)/2)*2) == ((v0 % ((v1 + 6)/4))*-4))
(((((((uint1)1 && (0 <= 0)) && (0 >= 0)) && (((((v0*4) + v1) + 0) + -1) <= ((((v0*4) + 0) + v1) + -1))) && (((((v0*4) + v1) + 3) + -1) >= ((((v0*4) + ((4 + 0) - 1)) + v1) + -1))) && (v2 <= v2)) && (v2 >= v2))
(((((((uint1)1 && ((0 + ((((v1*4) + ((v2*2) + v3))*4) + v4)) <= (((v1*16) + (((v2*2) + v3)*4)) + v4))) && ((3 + ((((v1*4) + ((v2*2) + v3))*4) + v4)) >= (((v1*16) + ((((v2*2) + v3)*4) + 3)) + v4))) && ((v5/4) <= (v5/4))) && (((v6 + (v5/4)) - 1) >= ((v6 + (v5/4)) - 1))) && (((v7*12) + v8) <= ((v7*12) + v8))) && (((v7*12) + v8) >= ((v7*12) + v8)))
"(max(min(((v1 + v2) + -1)/4, (v3 + (33 - max(v4*12, 21))) - 1) + 1, min(max((v2 + 3)/4, v3), (33 - max(v4*12, 21)) + v3)) <= min(max((v2 + 3)/4, v3), (33 - max(v4*12, 21)) + v3))"
((v0 + -20) >= (((v0 + -20) + (24 - (2*8))) - 1))
((((v0*500)/4)*4) == (v0*500))
"(max(min((v1 + v2) + -1, (((v4*4) + -17) + ((min(v3, 60)*4) + 24)) - 1) + 1, min(max(v2, (v4*4) + -17), ((min(v3, 60)*4) + 24) + ((v4*4) + -17))) <= min(max(v2, (v4*4) + -17), ((min(v3, 60)*4) + 24) + ((v4*4) + -17)))"
((((v0 + v1)*2) + v2) >= (((((v0 - 1) + v1)*2) + v2) + 1))
(((((((uint1)1 && ((((((0*4) + v0) + -5) + 0) + -3) <= (-5 + (v0 + -3)))) && ((((((((128 + 0) - 1)*4) + v0) + ((6 + -5) - 1)) + 3) + -3) >= (((6 + -5) - 1) + (v0 + 506)))) && ((-5 + v1) <= (-5 + v1))) && ((((6 + -5) - 1) + v1) >= (((6 + -5) - 1) + v1))) && (v2 <= v2)) && (v2 >= v2))
"(max(min(63 - (v0*16), (0 + 16) - 1) + 1, min(max(0 - (v0*16), 0), 16 + 0)) <= min(max(0 - (v0*16), 0), 16 + 0))"
"(max(0, min(70 - ((v0 % 2)*36), (0 + 36) - 1) + 1) <= 0)"
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && ((v2/4) <= ((0 + v2)/4))) && (((v2/4) + 31) >= ((((125 + 0) - 1) + v2)/4))) && (v3 <= v3)) && (v3 >= v3))
"(max(min(124, ((v1 + -1) + (13 - max((v2 - v3)*8, 5))) - 1) + 1, min(max(0, v1 + -1), (13 - max((v2 - v3)*8, 5)) + (v1 + -1))) <= min(max(0, v1 + -1), (13 - max((v2 - v3)*8, 5)) + (v1 + -1)))"
"(((((((uint1)1 && ((v0/8) <= ((0 + v0)/8))) && (((v0 + 3)/8) >= ((((4 + 0) - 1) + v0)/8))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && ((((0*4) + (min(v3*28, 109) + (v4*4))) + 0) <= (min(v3*28, 109) + (v4*4)))) && ((((0*4) + (min(v3*28, 109) + (v4*4))) + 3) >= ((min(v3*28, 109) + (v4*4)) + 3)))"
((((v0*8) + ((v1*2) + v2)) + -4) < (((v0*8) + ((v1*2) + (v2 + 1))) + -4))
((((v0*4) + v1) + 3) < (((v0 + 1)*4) + v1))
"(((((((uint1)1 && (((min(v0, 999) + v1) + -1010) <= (((max(-3*4, -9) + ((min(v0, 999) + v1) + -1006)) + 0) + 5))) && (((v0 + v1) + 6) >= (((max(251*4, -9) + ((v0 + v1) + -1006)) + 3) + 5))) && ((0 + ((min(max(v2*8, -9), (v2*8) + 4) + v3) + 5)) <= ((((v2*8) + -9) + v3) + 5))) && ((3 + (min((((min(v2*8, -9)/4)*4) + (max(v2*8, -9) + v3)) + 12, (v2*8) + v3) + 9)) >= ((((v2*8) + 7) + v3) + 5))) && (0 <= 0)) && (2 >= 2))"
(((v0*8) + 12) != 0)
"((max(min(((v0*8) + v1) - min((v2 + v1) - (v3*126), v1 + 116), -82), -89) + 80) == (((max(min(((v0*8) + v1) - min((v2 + v1) - (v3*126), v1 + 116), -82), -89) + 80) + (-78 - max(min(((v0*8) + v1) - min((v2 + v1) - (v3*126), v1 + 116), -82), -89))) - 1))"
"(((((((uint1)1 && ((0 + ((min(v0*128, 124) + (v1*4)) + v2)) <= ((min(v0*128, 124) + (v1*4)) + v2))) && ((3 + ((min(v0*128, 124) + (v1*4)) + v2)) >= (((min(v0*128, 124) + (v1*4)) + 3) + v2))) && (0 <= 0)) && (0 >= 0)) && (v3 <= v3)) && (v3 >= v3))"
((((v0*1000)/4)*4) == (v0*1000))
"(((((((uint1)1 && ((((-65 + v0) + 0) + 63) <= ((((0*4) + 0) + v0) + max(-65, -2)))) && ((((3 + v0) + 3) + 63) >= ((((((16 + 0) - 1)*4) + ((4 + 0) - 1)) + v0) + 3))) && ((((v1*8) + v2) + 8) <= (v2 + ((v1*8) + 1)))) && ((((v1*8) + v2) + 8) >= (v2 + ((8 + ((v1*8) + 1)) - 1)))) && (v3 <= v3)) && (v3 >= v3))"
(((((((uint1)1 && (((v0/16) + -2) <= ((v0/16) + -2))) && ((((((v0 % 16) + 223)/16) + ((v0/16) + -2)) - 1) >= (((((v0 % 16) + 223)/16) + ((v0/16) + -2)) - 1))) && (v1 <= v1)) && (v1 >= v1)) && (((((v2*8) + 0)*4) + 0) <= (v2*32))) && (((((v2*8) + 7)*4) + 3) >= ((v2*32) + 31)))
((((v0*4) + (v1 + v2)) + -2) == (((((v0*4) + (v1 + v2)) + -2) + 9) - 1))
(((((v0 % ((v1 + 255)/252))*-252)/4)*4) == ((v0 % ((v1 + 255)/252))*-252))
(0 >= ((0 + ((((v0 + v1) % 4) + 78)/16)) - 1))
(((((v0*4) + v1) + v2) + 119) < ((((v0*4) + (v1 + 1)) + v2) + -5))
"(max(0, min(18 - ((v0 % 2)*10), (0 + 10) - 1) + 1) <= 0)"
(((((((uint1)1 && ((v0 + v1) <= (v0 + v1))) && ((v0 + v1) >= (v0 + v1))) && ((v2 + 0) <= (0 + v2))) && ((v2 + 3) >= (((4 + 0) - 1) + v2))) && (0 <= 0)) && (0 >= 0))
"(0 == ((0 + (10 - (max(min(v0, 2), 1)*5))) - 1))"
(((((((uint1)1 && (0 <= 0)) && ((8 - 1) >= (8 - 1))) && ((((((v0*8) + v1) + v2) + 1) % 8) <= (((((v0*8) + v1) + v2) + 1) % 8))) && ((((((v0*8) + v1) + v2) + 1) % 8) >= (((((v0*8) + v1) + v2) + 1) % 8))) && ((((v3 % 16)*4) + 0) <= (((v3 % 16)*4) + 0))) && ((((v3 % 16)*4) + 3) >= (((v3 % 16)*4) + ((4 + 0) - 1))))
((((v0*4)/2)*2) == (v0*4))
"(((((((uint1)1 && ((((0*4) + 0) + ((((v0*2) + v1)*32) + v2)) <= (((v0*64) + (v1*32)) + v2))) && ((((2*4) + 3) + (((((v0*2) + v1)*32) + v2) + 24)) >= (((v0*64) + ((v1*32) + 31)) + v2))) && (((min(v3*11, 53) + (min(v4*4, 7) + v5)) + v6) <= ((min(v3*11, 53) + (min(v4*4, 7) + v5)) + v6))) && (((min(v3*11, 53) + (min(v4*4, 7) + v5)) + v6) >= ((min(v3*11, 53) + (min(v4*4, 7) + v5)) + v6))) && (v7 <= v7)) && (v7 >= v7))"
"(0 == ((0 + (17 - max(min(v0*3, 17), 14))) - 1))"
"((((max(min((v0*64) + ((((((0 - max(min(v1/32, 0), -4))*2) + v2)*16) + v1)*2), 499), 0)*4)/4)*4) == (max(min((v0*64) + ((((((0 - max(min(v1/32, 0), -4))*2) + v2)*16) + v1)*2), 499), 0)*4))"
((((v0*8)/4)*4) == (v0*8))
(((((((uint1)1 && ((v0 + v1) <= (v0 + v1))) && ((v0 + v1) >= (v0 + v1))) && ((((0*4) + v2) + 0) <= (((0*4) + 0) + v2))) && ((((2*4) + v2) + 3) >= (((((3 + 0) - 1)*4) + ((4 + 0) - 1)) + v2))) && (0 <= 0)) && (2 >= ((3 + 0) - 1)))
((((v0*32)/4)*4) == (v0*32))
((((v0*6) + v1) + 5) < (((v0 + 1)*6) + v1))
"(((((((uint1)1 && ((v0 + v1) <= (v0 + v1))) && ((v0 + v1) >= (v0 + v1))) && (0 <= 0)) && (0 >= 0)) && ((min((v2 % 5)*4, 14) + 0) <= (min((v2 % 5)*4, 14) + 0))) && ((min((v2 % 5)*4, 14) + 3) >= (min((v2 % 5)*4, 14) + ((4 + 0) - 1))))"
(((((((uint1)1 && (((((v0*4) + v1) + 0) + -1) <= ((((v0*4) + 0) + v1) + -1))) && (((((v0*4) + v1) + 3) + -1) >= ((((v0*4) + ((4 + 0) - 1)) + v1) + -1))) && (v2 <= v2)) && (v2 >= v2)) && (((v3*16) + v4) <= ((v3*16) + v4))) && (((v3*16) + v4) >= ((v3*16) + v4)))
((((v0*8) + 47)/35) != 0)
(((((((uint1)1 && ((0 + ((v0*8) + v1)) <= ((v0*8) + v1))) && ((3 + (((v0*8) + v1) + 4)) >= (((v0*8) + 7) + v1))) && ((v2 + v3) <= (v2 + v3))) && ((v2 + v3) >= (v2 + v3))) && (0 <= 0)) && (0 >= 0))
"(((((((uint1)1 && (((0 + (v0/4)) + -2) <= (-2 + (v0/4)))) && (((2 + ((v0/4) + 258)) + -2) >= (((11 + -2) - 1) + (((((v0 % 4) + 1003)/4) + (v0/4)) - 1)))) && ((0 + ((min(v1*63, 62) + v2)/4)) <= (0 + ((min(v1*63, 62) + v2)/4)))) && ((3 + (((min(v1*63, 62) + v2)/4) + 16)) >= (((4 + 0) - 1) + (((min(v1*63, 62) + v2)/4) + 16)))) && (((v3*8) + v4) <= ((v3*8) + v4))) && (((v3*8) + v4) >= ((v3*8) + v4)))"
"(max(min(min(min(min(min(min(min(min(min(((v3 - ((v4*12) + v5)) + 7)/4, ((((v1 + v2)/4) - ((v4*12) + v5)) + -2)/4), (((((v1 + v2) + -17)/4) - ((v4*12) + v5)) + 2)/4), (((((v1 + v2) + -15)/4) - ((v4*12) + v5)) + 2)/4), (((((v1 + v2) + -14)/4) - ((v4*12) + v5)) + 2)/4), ((min((v1 + v2)/4, v3 + 6) - ((v4*12) + v5)) + 1)/4), ((min(((v1 + v2) + -5)/4, v3 + 5) - ((v4*12) + v5)) + 2)/4), ((min(((v1 + v2) + -3)/4, v3 + 5) - ((v4*12) + v5)) + 2)/4), ((min(((v1 + v2) + -2)/4, v3 + 5) - ((v4*12) + v5)) + 2)/4), (0 + ((min(v6 - v5, 1) + 14)/4)) - 1) + 1, min(max(max(max(max((((v2/4) - ((v4*12) + v5)) + 5)/4, ((((v2 + -1)/4) - ((v4*12) + v5)) + 5)/4), ((((v2 + 1)/4) - ((v4*12) + v5)) + 5)/4), ((((v2 + 2)/4) - ((v4*12) + v5)) + 5)/4), 0), ((min(v6 - v5, 1) + 14)/4) + 0)) <= min(max(max(max(max((((v2/4) - ((v4*12) + v5)) + 5)/4, ((((v2 + -1)/4) - ((v4*12) + v5)) + 5)/4), ((((v2 + 1)/4) - ((v4*12) + v5)) + 5)/4), ((((v2 + 2)/4) - ((v4*12) + v5)) + 5)/4), 0), ((min(v6 - v5, 1) + 14)/4) + 0))"
"(((((((uint1)1 && (((((0*4) + v0) + 0) + -2) <= (-2 + v0))) && (((((4*4) + v0) + 3) + -2) >= (((4 + -2) - 1) + (v0 + 15)))) && ((max(v1 + 3, v2) + -2) <= (-2 + v1))) && ((v1 + 1) >= (((4 + -2) - 1) + v1))) && (v3 <= v3)) && (v3 >= v3))"
"(((((((uint1)1 && (((max(v0*16, -5) + ((v1*32) + v2)) + 2) <= ((((0*4) + ((v0*16) + ((v1*32) + v2))) + 0) + -3))) && ((((v0*16) + ((v1*32) + v2)) + 17) >= ((((5*4) + ((v0*16) + ((v1*32) + v2))) + 3) + -3))) && ((((((v3*2) + 0)*4) + 0) + -1) <= (-2 + ((v3*8) + 1)))) && ((((((v3*2) + 3)*4) + 3) + -1) >= (((6 + -2) - 1) + ((8 + ((v3*8) + 1)) - 1)))) && (v4 <= v4)) && (v4 >= v4))"
"(((((((uint1)1 && ((((0*4) + 0) + ((min(max(v0*500, -5), (v0*500) + 492) + v1) + 3)) <= ((0 + (((v0*500) + v1) + -5)) + 3))) && ((((1*4) + 3) + (min((((min(v0*500, -5)/8)*8) + (max(v0*500, -5) + v1)) + 12, (v0*500) + v1) + 495)) >= ((3 + (((v0*500) + v1) + 1000)) + 3))) && ((0 + (v2 + -2)) <= ((-5 + v2) + 3))) && ((1 + (v2 + 126)) >= ((124 + v2) + 3))) && (0 <= 0)) && (0 >= 0))"
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((31*4) + v0) + 3) >= (((((32 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (v3 <= v3)) && (v3 >= v3))
(0 == ((0 + ((v0*2) + -6)) - 1))
(((v0 + 10)/504) == ((((v0 + 10)/504) + ((((v0 + 10) % 504) + 503)/504)) - 1))
"(((max(min((v1*-32) + ((max(((v3 + v4)/4)*4, -127) - min(((v3 + v4)/4)*4, 1999)) + (v2*-64)), -96), -132)/4)*4) == max(min((v1*-32) + ((max(((v3 + v4)/4)*4, -127) - min(((v3 + v4)/4)*4, 1999)) + (v2*-64)), -96), -132))"
"(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + v0) + 0))) && ((((3*4) + v0) + 3) >= (((3*4) + v0) + 3))) && (((min(v1*42, 83) + ((v2*3) + v3)) + v4) <= ((min(v1*42, 83) + ((v2*3) + v3)) + v4))) && (((min(v1*42, 83) + ((v2*3) + v3)) + v4) >= ((min(v1*42, 83) + ((v2*3) + v3)) + v4))) && (0 <= 0)) && (24 >= 24))"
"(((max(max(min(v0*-4, -165) + 165, (v1*8) + (min(v0*4, 165) + (((v1*2) + v0)*-4))), 0)*4) + 22) <= 1024)"
"(max(min(((v1 + v2) + -1)/4, (((v4*16) + v5) + (min(v3, 15) + 1)) - 1) + 1, min(max((v2 + 3)/4, (v4*16) + v5), (min(v3, 15) + 1) + ((v4*16) + v5))) <= min(max((v2 + 3)/4, (v4*16) + v5), (min(v3, 15) + 1) + ((v4*16) + v5)))"
"(((max(min(v0, 12), -3)*4) + -52) == ((((max(min(v0, 12), -3)*4) + -52) + ((max(min(v0, 12), -3)*-4) + 56)) - 1))"
"(((v0*8) + 11) < (min(max((v1/125)*8, ((v0 + 1)*8) + 5), (v0 + 1)*8) + -1))"
(0 == ((0 + (((((v0 + v1) + 2) % 4) + 78)/16)) - 1))
(((((v0*8) + v1)*2) + 1) < (((v0*8) + (v1 + 1))*2))
"(((min((v0*-12) + 0, -20)/4)*4) == min((v0*-12) + 0, -20))"
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((31*4) + v0) + 3) >= (((31*4) + ((4 + 0) - 1)) + v0))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (v3 <= v3)) && (((v4 + v3) + -1) >= ((v4 + v3) - 1)))
"(((min(v0*63, 62) + v1) + v2) < ((min(v0*63, 62) + (v1 + 1)) + v2))"
"(max(min(((2006 - v1)/4) + (v2*-253), (0 + 253) - 1) + 1, min(max((((9 - v1)/4) + (v2*-253)) + 1, 0), 253 + 0)) <= min(max((((9 - v1)/4) + (v2*-253)) + 1, 0), 253 + 0))"
((v0/8) <= (((v0 - 1)/8) - 1))
(((v0 + 262)/250) != 0)
((v0*3) == (((v0*3) + 3) - 1))
"(max(0, min(1, (0 + (((v0 % 4) + 1499)/500)) - 1) + 1) <= 0)"
"(((((((uint1)1 && ((max((min(v0, 4) + v1)/4, v2 + 11) + -3) <= (v2 + -2))) && ((v2 + 8) >= (v2 + 8))) && ((((0*4) + (v3/4)) + 0) <= (((0*4) + (v3/4)) + 0))) && ((((4*4) + ((v3/4) + 20)) + 3) >= (((4*4) + ((v3/4) + 20)) + 3))) && (v4 <= v4)) && (v4 >= v4))"
"((max((((min(v0*63, -3) + 65)/33)*33) + (max(v0*63, -3) + v1), ((v0*63) + v1) + 30) + 33) < ((((v0 + 1)*63) + v1) + -2))"
"((((max(min(min(v3*128, v4 + -128) + v2, 1996), -3) + (max(min(min(v3*128, v4 + -128) + v2, 1876), -123)*-1))/4)*4) == (max(min(min(v3*128, v4 + -128) + v2, 1996), -3) + (max(min(min(v3*128, v4 + -128) + v2, 1876), -123)*-1)))"
(((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && ((((((v1*2) + v2)*4) + 0) + -1) <= (((((v1*2) + v2)*4) + 0) + -1))) && ((((((v1*2) + v2)*4) + 3) + -1) >= (((((v1*2) + v2)*4) + ((4 + 0) - 1)) + -1))) && (((v3*2) + v4) <= ((v3*2) + v4))) && (((v3*2) + v4) >= ((v3*2) + v4)))
((((v0*8) + 46)/34) != 0)
"(((max(v0, 10)*8) + -204) == ((((max(v0, 10)*8) + -204) + (208 - (max(v0, 10)*8))) - 1))"
(((((((uint1)1 && ((0 + ((((v0*2) + v1)*8) + v2)) <= (0 + ((((v0*2) + v1)*8) + v2)))) && ((3 + (((((v0*2) + v1)*8) + v2) + 4)) >= (3 + (((((v0*2) + v1)*8) + v2) + 4)))) && (((v3/4)*4) <= ((v3/4)*4))) && (((((v3/4) + v4)*4) + -4) >= ((((v3/4) + v4) + -1)*4))) && (0 <= 0)) && (2 >= 2))
(((v0 + 499)/500) != 0)
(((((((uint1)1 && ((v0 + -2) <= (-2 + v0))) && ((v0 + 39) >= (((11 + -2) - 1) + ((32 + v0) - 1)))) && ((0 + (v1/4)) <= (0 + (v1/4)))) && ((3 + ((v1/4) + (((v2 + 3)/4)*4))) >= (((4 + 0) - 1) + ((v1/4) + (((v2 + 3)/4)*4))))) && (((v3*4) + v4) <= ((v3*4) + v4))) && (((v3*4) + v4) >= ((v3*4) + v4)))
"(max(min(min(min((v2 - v5) + 12, (((v3 + v4)/4) - v5) + 10), ((min((v2*4) + 5, v3 + v4) + 43)/4) - v5), (0 + (min((max(min(v6*2, 497), -2) - (v7*12)) - max(min((v8/8)*2, 509), 10), -1) + 14)) - 1) + 1, min(max((((v4 + 43)/4) - v5) + 1, 0), (min((max(min(v6*2, 497), -2) - (v7*12)) - max(min((v8/8)*2, 509), 10), -1) + 14) + 0)) <= min(max((((v4 + 43)/4) - v5) + 1, 0), (min((max(min(v6*2, 497), -2) - (v7*12)) - max(min((v8/8)*2, 509), 10), -1) + 14) + 0))"
(((v0 + v1) + -6) >= ((((v0 + v1) + -6) + 131) - 1))
"(((max(min((v1*-500) + ((max((v2 + 4)/500, 0)*-500) + (max(v3*4, -3) - min((v4/4)*4, 1999))), 496), -8)/4)*4) == max(min((v1*-500) + ((max((v2 + 4)/500, 0)*-500) + (max(v3*4, -3) - min((v4/4)*4, 1999))), 496), -8))"
((v0 + -20) == (((v0 + -20) + (24 - (2*8))) - 1))
"(max(min(min(min(min(((min(v1 + v2, 2000) - v3)/4) + -1, (1996 - v3)/4), (1996 - v3)/4), min((((v1 + v2) - v3) + -1)/4, 499 - (v3/4))), (0 + 251) - 1) + 1, min(max(max(max(max(0 - (v3/4), 0 - (v3/4)), (0 - v3)/4), max(((v2 - v3) + 3)/4, 0 - (v3/4))), 0), 251 + 0)) <= min(max(max(max(max(0 - (v3/4), 0 - (v3/4)), (0 - v3)/4), max(((v2 - v3) + 3)/4, 0 - (v3/4))), 0), 251 + 0))"
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((62*4) + v0) + 3) >= (((((63 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && ((((v1*500) + 0) + v2) <= (((v1*500) + 0) + v2))) && ((((v1*500) + ((500 + 0) - 1)) + v2) >= (((v1*500) + ((500 + 0) - 1)) + v2))) && (v3 <= v3)) && (v3 >= v3))
(((v0 + 124)/125) != 0)
((0 - (v0*9)) > (17 - (v0*9)))
"((((min(v0*16, 110) + v1) + v2) + 5) < (((min(v0*16, 110) + (v1 + 1)) + v2) + -4))"
"((((min(v0, 1)*16)/4)*4) == (min(v0, 1)*16))"
"(max(min(min(2, min(v1 + v2, 3) + -1), (v4 + v3) - 1) + 1, min(max(max(max(max(0, 0), max(v2, 0)), max(v2, 0)), v4), v3 + v4)) <= min(max(max(max(max(0, 0), max(v2, 0)), max(v2, 0)), v4), v3 + v4))"
(((((((uint1)1 && ((v0*8) <= (v0*8))) && ((v0*8) >= (v0*8))) && (((((0*4) + ((v1*4) + ((v2*32) + v3))) + 0) + -5) <= (((v1*4) + ((v2*32) + v3)) + -5))) && (((((0*4) + ((v1*4) + ((v2*32) + v3))) + 3) + -5) >= ((((v1*4) + ((v2*32) + v3)) + 3) + -5))) && ((((v4*2) + v5) + v6) <= (((v4*2) + v5) + v6))) && ((((v4*2) + v5) + v6) >= (((v4*2) + v5) + v6)))
(((((((uint1)1 && ((((0*4) + v0) + 0) <= v0)) && ((((1*4) + v0) + 3) >= (v0 + 7))) && ((v1/4) <= (v1/4))) && (((v1 + 1003)/4) >= ((v1 + 1003)/4))) && (v2 <= v2)) && (v2 >= v2))
"((((min(v0*8, 55) + v1) + v2) + 5) < (((min(v0*8, 55) + (v1 + 1)) + v2) + -4))"
"(max(min(1999, (v1 + 250) - 1) + 1, min(max(0, v1), 250 + v1)) <= min(max(0, v1), 250 + v1))"
(((v0 + v1) + -8) >= ((((v0 + v1) + -8) + 134) - 1))
(((v0/16) + 1) != 0)
(((v0/44) + 1) != 0)
"(max(0, min(0, (0 + (((v0 % 8) + 263)/88)) - 1) + 1) <= 0)"
(((v0 + 266)/252) != 0)
"(((((((uint1)1 && (((0 + (max(v0*8, -5) + v1)) + 3) <= (((-5 + ((v0*8) + v1)) + 0) + 3))) && (((3 + ((max(v0*8, -5) + v1) + 4)) + 3) >= (((3 + (((v0*8) + v1) + 4)) + 3) + 3))) && (((v2*8) + -1) <= (-2 + ((v2*8) + 1)))) && (((v2*8) + 11) >= (3 + ((v2*8) + 8)))) && (v3 <= v3)) && (v3 >= v3))"
"(((((((uint1)1 && (((0 + ((v0*252) + v1)) + -71) <= (-2 + (((v0*252) + v1) + -69)))) && (((3 + ((((min((v0*-252) + (((v2 + v3) - (v4*504)) - (min(v2, 64) + v3)), 182)/4)*4) + ((v0*252) + v1)) + 72)) + -71) >= (((4 + -2) - 1) + min(v2 + v3, ((v0*252) + v1) + 182)))) && ((((min(v5*21, 104) + v6) + v7) + 21) <= (v7 + ((min(v5*21, 104) + v6) + -5)))) && ((((min(v5*21, 104) + v6) + v7) + 21) >= (v7 + ((27 + ((min(v5*21, 104) + v6) + -5)) - 1)))) && (v8 <= v8)) && (v8 >= v8))"
((((v0*4) + v1) + v2) < (((v0*4) + (v1 + 1)) + v2))
"(((((((uint1)1 && (((0 + (min(v0, 4) + v1)) + -6) <= ((min(v0, 4) + v1) + -6))) && (((250 + ((((max(v0, 4) + 4)/251)*251) + (min(v0, 4) + v1))) + -6) >= (((((max(v0, 4) + -1)/4)*4) + (min(v0, 4) + v1)) + 2))) && (((0 + (max(v2*8, -5) + v3)) + 3) <= (((v2*8) + v3) + -2))) && (((3 + ((max(v2*8, -5) + v3) + 4)) + 3) >= (((v2*8) + v3) + 10))) && (0 <= 0)) && (0 >= 0))"
"(((((((uint1)1 && (((v0*4) + v1) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (max((v2/125) + -1, v2/125) <= (((0*4) + 0) + (v2/125)))) && ((((v2/125) + ((v3/8)*8)) + 7) >= (((((2 + 0) - 1)*4) + ((4 + 0) - 1)) + ((v2/125) + ((v3/8)*8))))) && (((0*32) + 0) <= 0)) && (((1*32) + 35) >= ((64 + 0) - 1)))"
"(max(max(min(v0*4, 1), (max((v0*4) + v1, -4) - max(min(v0*4, 1999), max((v0*4) + v1, -3) + 4)) + 5), 0) <= 1024)"
(((v0 + 685)/668) != 0)
"(((v0*2) + -4) == ((((v0*2) + -4) + ((min(v1, 61)*2) + 4)) - 1))"
"(((max(min((v1*-64) + (((v4 + 1)*-64) + max(max(-127 - (((v2 + v3)/4)*4), (((v2 + v3)/4)*4) + -1999), 0)), -64), -132)/4)*4) == max(min((v1*-64) + (((v4 + 1)*-64) + max(max(-127 - (((v2 + v3)/4)*4), (((v2 + v3)/4)*4) + -1999), 0)), -64), -132))"
"(max(0, min(((v0 % 8) + 419)/96, (0 + 6) - 1) + 1) <= 0)"
(((((((uint1)1 && ((v0 + -2) <= ((0 + v0) + -2))) && ((v0 + 6) >= ((((4 + 0) - 1) + v0) + ((6 + -2) - 1)))) && (((v1*8) + -1) <= ((((v1*8) + 0) + -2) + 1))) && (((v1*8) + 19) >= ((((v1*8) + ((16 + 0) - 1)) + ((6 + -2) - 1)) + 1))) && (((((v2*4) + v3)*4) + 0) <= (((v2*4) + v3)*4))) && (((((v2*4) + v3)*4) + 3) >= ((((v2*4) + v3)*4) + 3)))
"(max(min(min(1999, min(v1 + v2, 2000) + -1), ((v4 + -10) + (min(v3, 24) + 18)) - 1) + 1, min(max(max(0, max(v2, 0)), v4 + -10), (min(v3, 24) + 18) + (v4 + -10))) <= min(max(max(0, max(v2, 0)), v4 + -10), (min(v3, 24) + 18) + (v4 + -10)))"
((((v0*256) + 458)/36) != 0)
"((v0 + 5) < (min(max((v0 + 1) + 7, max(v1*4, -9) + v2) + 2, v0 + 1) + -4))"
(((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && ((((v1*4) + v2) + 0) <= ((v1*4) + v2))) && ((((v1*4) + v2) + 3) >= (((v1*4) + v2) + 3))) && (0 <= 0)) && (2 >= 2))
"(((max(min((v2*-64) + (max(((v3 + min(v5*125, v6 + -125))/4)*4, -127) - ((v4*32) + min(((v3 + min(v5*125, v6 + -125))/4)*4, 1999))), -96), -132)/4)*4) == max(min((v2*-64) + (max(((v3 + min(v5*125, v6 + -125))/4)*4, -127) - ((v4*32) + min(((v3 + min(v5*125, v6 + -125))/4)*4, 1999))), -96), -132))"
((((v0*-144)/4)*4) == (v0*-144))
"(-124 == ((-124 + (131 - max(min(v0*4, 131), 3))) - 1))"
((2 - v0) > (251 - v0))
((2 - v0) > (126 - v0))
"(((((((uint1)1 && ((max(v0 + 7, max(v1*4, -9) + v2) + -2) <= (v0 + -4))) && ((v0 + 5) >= (v0 + 5))) && ((((max(-3*4, -9) + v3) + 0) + 5) <= (v3 + -4))) && ((((max(16*4, -9) + v3) + 3) + 5) >= (v3 + 72))) && (0 <= 0)) && (2 >= 2))"
"(((((((uint1)1 && (((((0*4) + v0) + 0) + -7) <= (-2 + (v0 + -5)))) && (((((252*4) + v0) + 3) + -7) >= (((4 + -2) - 1) + (v0 + 1000)))) && ((max(v1 + 8, v2) + -7) <= (-2 + v1))) && ((v1 + 1) >= (((4 + -2) - 1) + v1))) && (v3 <= v3)) && (v3 >= v3))"
(((((((uint1)1 && ((((((v0*4) + v1) + -5) + 0) + -503) <= (((((v0*4) + 0) + v1) + -5) + -503))) && ((((((v0*4) + v1) + ((6 + -5) - 1)) + 3) + -503) >= (((((v0*4) + ((4 + 0) - 1)) + v1) + ((6 + -5) - 1)) + -503))) && (0 <= 0)) && ((8 - 1) >= (8 - 1))) && (v2 <= v2)) && (v2 >= v2))
"(((((((uint1)1 && (((v0 + v1) + 3) <= ((v0 + v1) + -2))) && (((v0 + v1) + 3) >= ((v0 + v1) + 3))) && (((((0*4) + (v2*8)) + 0) + -1) <= ((((((((max(-1, 0)*4) + v2)*2) + 0)*4) + 0) + -2) + 1))) && (((((17*4) + ((v2*8) + 37)) + 3) + -1) >= ((((((((1*4) + v2)*2) + 7)*4) + 3) + 3) + 1))) && (v3 <= v3)) && (v3 >= v3))"
"(((min(((v0/4)*16) + (((v1/250)*8) + -5), ((((v2 + v1) + -1)/250)*8) + -13)/8)*8) == min(((v0/4)*16) + (((v1/250)*8) + -5), ((((v2 + v1) + -1)/250)*8) + -13))"
"(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (((min(v2*2, 123) + v3) + v4) <= ((min(v2*2, 123) + v3) + v4))) && (((min(v2*2, 123) + v3) + v4) >= ((min(v2*2, 123) + v3) + v4))) && (v5 <= v5)) && (v5 >= v5))"
"((max(v0, 16) + 8) >= 0)"
"(max(0, min(((v0 % 8) + 233)/32, (0 + 9) - 1) + 1) <= 0)"
(((((((uint1)1 && (((v0/2) + -1) <= ((((v0*4) + 0) + -5)/8))) && (((v0 + -1)/2) >= ((((v0*4) + ((4 + 0) - 1)) + -5)/8))) && (((((((v1/250)*2) + 0)*4) + 0) + -5) <= ((((((v1/250)*2) + 0)*4) + 0) + -5))) && (((((((v1/250)*2) + ((v2*2) + 1))*4) + 3) + -5) >= ((((((v1/250)*2) + ((v2*2) + 1))*4) + ((4 + 0) - 1)) + -5))) && (((v3*9) + ((v4*3) + v5)) <= ((v3*9) + ((v4*3) + v5)))) && (((v3*9) + ((v4*3) + v5)) >= ((v3*9) + ((v4*3) + v5))))
"(((max(min((v1*-252) + (max(min(v2 + v3, 2000), 1) - max(min(min(v2, 4) + v3, 2003), 4)), 248), -4)/4)*4) == max(min((v1*-252) + (max(min(v2 + v3, 2000), 1) - max(min(min(v2, 4) + v3, 2003), 4)), 248), -4))"
"(max(min(min(min((((v1 + v2) - max(min(v3, 1999), 0))/4) + -1, ((max(min((v4*128) + v5, min(v6 + v5, 2000) + -128), -127) - max(min((v4*128) + v5, min(v6 + v5, 2127) + -128), 0))/4) + 31), ((min(max(min(v3, 1872), -127) + 125, v1 + v2) - max(min(v3, 1999), 0)) + -1)/4), (0 + ((v7 + 131)/4)) - 1) + 1, min(max(((v2 - max(min(v3, 1999), 0)) + 3)/4, 0), ((v7 + 131)/4) + 0)) <= min(max(((v2 - max(min(v3, 1999), 0)) + 3)/4, 0), ((v7 + 131)/4) + 0))"
"(max(min(min(min((((v1 + v2) - max(min(v3, 1999), 0))/4) + -1, ((max(min(v3, 1964), -35) - max(min(v3, 1999), 0))/4) + 8), ((min(max(min(v3, 1964), -35) + 33, v1 + v2) - max(min(v3, 1999), 0)) + -1)/4), (0 + ((v4 + 39)/4)) - 1) + 1, min(max(((v2 - max(min(v3, 1999), 0)) + 3)/4, 0), ((v4 + 39)/4) + 0)) <= min(max(((v2 - max(min(v3, 1999), 0)) + 3)/4, 0), ((v4 + 39)/4) + 0))"
"(((((((uint1)1 && ((0 + ((min(v1*12, 52) + (v2*64)) + v3)) <= (((v2*64) + min(v1*12, 52)) + v3))) && ((3 + (((min(v1*12, 52) + (v2*64)) + v3) + 8)) >= (((v2*64) + (min(v1*12, 52) + 11)) + v3))) && ((v4 + v5) <= (v4 + v5))) && ((v4 + v5) >= (v4 + v5))) && (v6 <= v6)) && (v6 >= v6))"
(((v0*9) + 8) < ((v0 + 1)*9))
"((((min((v0*4) + (((v1/250)*2)*4), ((((v2 + v1) + -1)/250)*8) + 4)*-32)/4)*4) == (min((v0*4) + (((v1/250)*2)*4), ((((v2 + v1) + -1)/250)*8) + 4)*-32))"
"(max(min(min(min(min(min(((v2 - v5) + 14)/4, ((v2 - v5) + 14)/4), ((min(v3 + v4, min(v2, 1992) + 8) - v5) + 6)/4), ((min(v3 + v4, min(v2, 1995) + 5) - v5) + 9)/4), (2006 - v5)/4), (0 + ((min(min(v6, 494) - (v7*256), 241) + 21)/4)) - 1) + 1, min(max(max(max(((max(v4, 0) - v5) + 13)/4, (10 - v5)/4), (13 - v5)/4), 0), ((min(min(v6, 494) - (v7*256), 241) + 21)/4) + 0)) <= min(max(max(max(((max(v4, 0) - v5) + 13)/4, (10 - v5)/4), (13 - v5)/4), 0), ((min(min(v6, 494) - (v7*256), 241) + 21)/4) + 0))"
"(max(min((v2 + v3) + -1, (((v4*16) + -36) + ((min((max(min(((v5 + v6) + 47)/16, 124), 0) - (v7*4)) - max(min(v6/16, 126), 2), 1)*16) + 48)) - 1) + 1, min(max(v3, (v4*16) + -36), ((min((max(min(((v5 + v6) + 47)/16, 124), 0) - (v7*4)) - max(min(v6/16, 126), 2), 1)*16) + 48) + ((v4*16) + -36))) <= min(max(v3, (v4*16) + -36), ((min((max(min(((v5 + v6) + 47)/16, 124), 0) - (v7*4)) - max(min(v6/16, 126), 2), 1)*16) + 48) + ((v4*16) + -36)))"
(((((((uint1)1 && (((0 + (((v0*16) + v1) + -9)) + 5) <= (((v0*16) + v1) + -4))) && (((3 + (((v0*16) + v1) + 36)) + 5) >= (((v0*16) + v1) + 20))) && (((v2 + v3) + 5) <= ((v2 + v3) + -4))) && (((v2 + v3) + 5) >= ((v2 + v3) + 5))) && (0 <= 0)) && (2 >= 2))
(((v0 + v1) + 131) < ((v0 + (v1 + 1)) + -8))
(((((((uint1)1 && (((v0/4) + -2) <= (-2 + (v0/4)))) && (((v0/4) + (((v0 % 4) + 1031)/4)) >= (((11 + -2) - 1) + (((((v0 % 4) + 1003)/4) + (v0/4)) - 1)))) && (v1 <= v1)) && (v1 >= v1)) && (((0*4) + 0) <= ((0*4) + 0))) && (((11*4) + 3) >= ((((12 + 0) - 1)*4) + 3)))
"((((max((v0*-125) + (((v1 + v2)/4) + -252), ((v1 + v2) + -965)/4)*-4)/4)*4) == (max((v0*-125) + (((v1 + v2)/4) + -252), ((v1 + v2) + -965)/4)*-4))"
(((((((uint1)1 && ((v0 + 0) <= (0 + v0))) && ((v0 + 3) >= (((4 + 0) - 1) + v0))) && (v1 <= v1)) && (v1 >= v1)) && (((v2*16) + v3) <= ((v2*16) + v3))) && (((v2*16) + v3) >= ((v2*16) + v3)))
(((v0 + 33)/32) != 0)
(((v0 + 46)/44) != 0)
((((v0*64)/4)*4) == (v0*64))
"(max(min(124, ((v2 + 3) + (min(v1*16, -5) + 21)) - 1) + 1, min(max(0, v2 + 3), (min(v1*16, -5) + 21) + (v2 + 3))) <= min(max(0, v2 + 3), (min(v1*16, -5) + 21) + (v2 + 3)))"
(((v0 + 693)/676) != 0)
(v0 != 0)
"(max(0, min(((v0 % 4) + 243)/12, (0 + (((v0 % 4) + 263)/12)) - 1) + 1) <= 0)"
"((((v0*70) + (v1 + v2)) + -10) == (((((v0*70) + (v1 + v2)) + -10) + (146 - max(v0*70, 73))) - 1))"
"(max(min(min(min(min(1999, 1999), min(v1 + v2, 2000) + -1), min(v1 + v2, 2000) + -1), ((v3 + -2) + 130) - 1) + 1, min(max(max(max(max(max(max(0, 0), 0), max(v2, 0)), max(v2, 0)), max(v2, 0)), v3 + -2), 130 + (v3 + -2))) <= min(max(max(max(max(max(max(0, 0), 0), max(v2, 0)), max(v2, 0)), max(v2, 0)), v3 + -2), 130 + (v3 + -2)))"
(((v0 + v1) + 3) < (((v0 + 1) + v1) + -1))
"(((((((uint1)1 && (0 <= 0)) && (0 >= 0)) && (((((0*4) + ((v0*4) + (max(v1*8, -5) + v2))) + 0) + 3) <= ((0 + ((v0*4) + (max(v1*8, -5) + v2))) + 3))) && (((((0*4) + ((v0*4) + (max(v1*8, -5) + v2))) + 3) + 3) >= ((((4 + 0) - 1) + ((v0*4) + (max(v1*8, -5) + v2))) + 3))) && (0 <= 0)) && (0 >= 0))"
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + v1) + 0))) && ((((v0*4) + v1) + 3) >= (((v0*4) + v1) + ((4 + 0) - 1)))) && (0 <= 0)) && (0 >= 0)) && (v2 <= v2)) && (v2 >= v2))
((((v0/16) + (v1*32)) + 34) < (((v0/16) + ((v1 + 1)*32)) + -2))
((v0*4) >= ((((v0 - 1)*4) + 3) + 1))
"(max(min(min(min(249, ((v1 + v2) + -4)/8), min(((v1 + v2) + 3)/8, 249)), ((v3*2) + 2) - 1) + 1, min(max((v2 + 11)/8, v3*2), 2 + (v3*2))) <= min(max((v2 + 11)/8, v3*2), 2 + (v3*2)))"
(v0 <= (((v0 - 1) + -1) - 1))
(((v0*8) + 7) < ((v0 + 1)*8))
(((v0 + 270)/253) != 0)
"((min(((v0/4)*4) - v1, 5) + -5) >= (((min(((v0/4)*4) - v1, 5) + -5) + (8 - min(((v0/4)*4) - v1, 5))) - 1))"
"(max(min(min(1999, min(v1 + v2, 2000) + -1), ((v3 + -2) + 27) - 1) + 1, min(max(max(0, max(v2, 0)), v3 + -2), 27 + (v3 + -2))) <= min(max(max(0, max(v2, 0)), v3 + -2), 27 + (v3 + -2)))"
"(((max(min(v0, 25), 10)*8) + -204) == ((((max(min(v0, 25), 10)*8) + -204) + (208 - (max(min(v0, 25), 10)*8))) - 1))"
(((v0 + v1) + 6) < (((v0 + 1) + v1) + -3))
"(((((((uint1)1 && (((0 + (((v0*4) + (min(v1, 500) + v2)) + v3)) + -503) <= (((0 + ((v0*4) + (min(v1, 500) + v2))) + v3) + -503))) && (((3 + (((v0*4) + (min(v1, 500) + v2)) + v3)) + -503) >= (((((4 + 0) - 1) + ((v0*4) + (min(v1, 500) + v2))) + v3) + -503))) && (0 <= 0)) && ((8 - 1) >= (8 - 1))) && (0 <= 0)) && (0 >= 0))"
(((v0 + 132)/128) != 0)
"(0 == ((0 + (7 - max(v0*4, 3))) - 1))"
(((((((uint1)1 && ((((((v0*126) + v1) + v2) + -5) + -3) <= (((((v0*126) + v1) + v2) + -5) + -3))) && ((((((v0*126) + v1) + v2) + ((6 + -5) - 1)) + -3) >= (((((v0*126) + v1) + v2) + ((6 + -5) - 1)) + -3))) && ((v3 + -8) <= (((0 + v3) + -5) + -3))) && ((v3 + 60) >= (((((64 + 0) - 1) + v3) + ((6 + -5) - 1)) + -3))) && (((v4*4) + 0) <= ((v4*4) + 0))) && (((v4*4) + 3) >= ((v4*4) + ((4 + 0) - 1))))
(v0 >= ((v0 + 250) - 1))
((v0 + 12) != 0)
(((v0 % 502) + 501) >= 0)
((((v0*-500)/4)*4) == (v0*-500))
"(max(min(min(min((((v1 + v2) - max(min((v3*8) + v4, 1999), 0))/4) + -1, ((max(min((v3*8) + v4, 1992), -7) - max(min((v3*8) + v4, 1999), 0))/4) + 1), ((min(max(min((v3*8) + v4, 1992), -7) + 5, v1 + v2) - max(min((v3*8) + v4, 1999), 0)) + -1)/4), (0 + ((v5 + 11)/4)) - 1) + 1, min(max(((v2 - max(min((v3*8) + v4, 1999), 0)) + 3)/4, 0), ((v5 + 11)/4) + 0)) <= min(max(((v2 - max(min((v3*8) + v4, 1999), 0)) + 3)/4, 0), ((v5 + 11)/4) + 0))"
"(((max(min((v2*-64) + (max(((v3 + min(v4*125, v5 + -125))/4)*4, -127) - min(((v3 + min(v4*125, v5 + -125))/4)*4, 1999)), -64), -132)/4)*4) == max(min((v2*-64) + (max(((v3 + min(v4*125, v5 + -125))/4)*4, -127) - min(((v3 + min(v4*125, v5 + -125))/4)*4, 1999)), -64), -132))"
(((v0 + 261)/252) != 0)
"(max(0, min((((min(v0*125, v1 + -125) + v2) % 8) + 108)/32, (0 + 5) - 1) + 1) <= 0)"
"(max(min(509 - v0, (0 + 65) - 1) + 1, min(max(10 - v0, 0), 65 + 0)) <= min(max(10 - v0, 0), 65 + 0))"
"(max(min(min(v1 + v2, 2000) + -1, ((v3 + -2) + 1005) - 1) + 1, min(max(max(max(max(max(max(0, 0), 0), max(v2, 0)), max(v2, 0)), max(v2, 0)), v3 + -2), 1005 + (v3 + -2))) <= min(max(max(max(max(max(max(0, 0), 0), max(v2, 0)), max(v2, 0)), max(v2, 0)), v3 + -2), 1005 + (v3 + -2)))"
"(max(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min((v5 + -7)/12, (v5 + -7)/12), (v5 + -7)/12), (v5 + -7)/12), (v5 + -7)/12), (v5 + -7)/12), (v5 + -7)/12), (v5 + -7)/12), (v5 + -7)/12), (min((v3 + v4) - v2, min(1997 - v2, v5) + 3) + -10)/12), (min(min(2000 - v2, v5), (v3 + v4) - v2) + -7)/12), (min(min(2001 - v2, v5), ((v3 + v4) - v2) + 1) + -7)/12), (min(min(2004 - v2, v5), ((v3 + v4) - v2) + 4) + -7)/12), (min(min(2005 - v2, v5), ((v3 + v4) - v2) + 5) + -7)/12), (min(min(2008 - v2, v5), ((v3 + v4) - v2) + 8) + -7)/12), (min(min(2008 - v2, v5), ((v3 + v4) - v2) + 8) + -7)/12), (1990 - v2)/12), (1990 - v2)/12), (1990 - v2)/12), (1994 - v2)/12), (1994 - v2)/12), (1994 - v2)/12), (1998 - v2)/12), (1998 - v2)/12), (1998 - v2)/12), (0 + ((v5 + 16)/12)) - 1) + 1, min(max(max(max(max(max(max(max(max(max(max(max(max(max(((max(v4, 0) - v2) + 5)/12, ((max(v4, 0) - v2) + 9)/12), ((max(v4, 0) - v2) + 13)/12), ((max(v4, 0) - v2) + 13)/12), (2 - v2)/12), (5 - v2)/12), (5 - v2)/12), (6 - v2)/12), (9 - v2)/12), (9 - v2)/12), (10 - v2)/12), (13 - v2)/12), (13 - v2)/12), 0), ((v5 + 16)/12) + 0)) <= min(max(max(max(max(max(max(max(max(max(max(max(max(max(((max(v4, 0) - v2) + 5)/12, ((max(v4, 0) - v2) + 9)/12), ((max(v4, 0) - v2) + 13)/12), ((max(v4, 0) - v2) + 13)/12), (2 - v2)/12), (5 - v2)/12), (5 - v2)/12), (6 - v2)/12), (9 - v2)/12), (9 - v2)/12), (10 - v2)/12), (13 - v2)/12), (13 - v2)/12), 0), ((v5 + 16)/12) + 0))"
"(max(0, min(((max(min(v0*8, 105), -19) - max(min(v0*8, 125), 1)) + 13)/8, (0 + ((v1 + 28)/8)) - 1) + 1) <= 0)"
(((v0 + v1) + -3) < (((v0 + 1) + v1) + -3))
(((((v0*2) + v1)*2) + -2) == ((((((v0*2) + v1)*2) + -2) + ((v2*2) + 4)) - 1))
(((((((uint1)1 && ((0 + v0) <= (0 + v0))) && ((((127 + 0) - 1) + v0) >= (((127 + 0) - 1) + v0))) && ((0 + ((v1*8) + v2)) <= ((v1*8) + v2))) && ((3 + (((v1*8) + v2) + 4)) >= (((v1*8) + 7) + v2))) && (v3 <= v3)) && (v3 >= v3))
"(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((15*4) + v0) + 3) >= (((((16 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && ((min(v1*8, 117) + v2) <= ((min(v1*8, 117) + 0) + v2))) && (((min(v1*8, 117) + v2) + 7) >= ((min(v1*8, 117) + ((8 + 0) - 1)) + v2))) && (v3 <= v3)) && (v3 >= v3))"
(((((((uint1)1 && (((v0*2) + v1) <= ((v0*2) + v1))) && (((v0*2) + v1) >= ((v0*2) + v1))) && (((((((v2*4) + v3)*2) + v4) + 0) + -4) <= ((((((v2*4) + v3) + 0)*2) + v4) + -10))) && (((((((v2*4) + v3)*2) + v4) + 3) + -4) >= ((((((v2*4) + v3) + ((4 + 0) - 1))*2) + v4) + -10))) && (v5 <= v5)) && (v5 >= v5))
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (v2 <= v2)) && (((v3 + v2) + -1) >= ((v3 + v2) - 1))) && (v4 <= v4)) && (v4 >= v4))
(((((((uint1)1 && ((((v0*4) + v1) + v2) <= (((v0*4) + v1) + v2))) && ((((v0*4) + v1) + v2) >= (((v0*4) + v1) + v2))) && ((((v3*4) + v4) + 0) <= (((v3*4) + 0) + v4))) && ((((v3*4) + v4) + 3) >= (((v3*4) + ((4 + 0) - 1)) + v4))) && (0 <= 0)) && (0 >= 0))
"((v0 + -10) >= (((v0 + -10) + (min(min(v1, 111) + v2, -16) + 17)) - 1))"
"(max(min(min(min(min(min(min(min(min(min((v5 + 1)/4, (v5 + 1)/4), (v5 + 1)/4), (min((v3 + v4) - v2, min(1997 - v2, v5) + 3) + -2)/4), (min(min(2000 - v2, v5), (v3 + v4) - v2) + 1)/4), (min(min(2000 - v2, v5), (v3 + v4) - v2) + 1)/4), (1998 - v2)/4), (1998 - v2)/4), (1998 - v2)/4), (0 + ((v5/4) + 2)) - 1) + 1, min(max(max(max(max(max(((max(v4, 0) - v2) + 5)/4, ((max(v4, 0) - v2) + 5)/4), (2 - v2)/4), (5 - v2)/4), (5 - v2)/4), 0), ((v5/4) + 2) + 0)) <= min(max(max(max(max(max(((max(v4, 0) - v2) + 5)/4, ((max(v4, 0) - v2) + 5)/4), (2 - v2)/4), (5 - v2)/4), (5 - v2)/4), 0), ((v5/4) + 2) + 0))"
((v0 + 2) != 0)
(((v0/128) + 1) != 0)
"(max(min(min(min(((v4/4) - v5) + 5, ((min(v4 + 4, v2 + v3)/4) - v5) + 4), (((v2 + v3) + 13)/4) - v5), (0 + (((((min((((v6 + v7) + 3)/4)*4, (((v7/4) + (v8*251))*4) + 998) + 31)/4) - (v8*251)) - (v7/4)) + -1)) - 1) + 1, min(max(((v3/4) - v5) + 5, 0), (((((min((((v6 + v7) + 3)/4)*4, (((v7/4) + (v8*251))*4) + 998) + 31)/4) - (v8*251)) - (v7/4)) + -1) + 0)) <= min(max(((v3/4) - v5) + 5, 0), (((((min((((v6 + v7) + 3)/4)*4, (((v7/4) + (v8*251))*4) + 998) + 31)/4) - (v8*251)) - (v7/4)) + -1) + 0))"
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= ((v0*4) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + v1) + 3))) && ((v2/4) <= (v2/4))) && ((((v3 + v2) + 3)/4) >= (((v3 + v2) + 3)/4))) && (v4 <= v4)) && (v4 >= v4))
(((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && ((0 + v1) <= (0 + v1))) && ((3 + v1) >= (((4 + 0) - 1) + v1))) && (v2 <= v2)) && (v2 >= v2))
(((v0 + 31)/32) != 0)
"(((((((uint1)1 && ((0 + (v0 + -2)) <= ((((0*4) + v0) + 0) + -2))) && ((3 + (v0 + 5)) >= ((((2*4) + v0) + 3) + -2))) && (((max(v1*126, -3) + v2) + 1) <= (((v1*126) + v2) + -2))) && ((((v1*126) + v2) + 126) >= (((v1*126) + v2) + 126))) && (0 <= 0)) && (2 >= 2))"
(((v0*55) + 54) < ((v0 + 1)*55))
(((v0 + v1) + 3) < (((v0 + 1) + v1) + -2))
"(max(min(min((((v1 + v2) - (max(min((v4/8)*2, 509), 10)*4)) + -82)/126, ((min(max(min((((v3 + v4) + 7)/8)*2, 497), -2)*4, (v1 + v2) + 113) - (max(min((v4/8)*2, 509), 10)*4)) + -70)/126), (0 + (((v5*4) + 181)/126)) - 1) + 1, min(max(((v2 - (max(min((v4/8)*2, 509), 10)*4)) + 169)/126, 0), (((v5*4) + 181)/126) + 0)) <= min(max(((v2 - (max(min((v4/8)*2, 509), 10)*4)) + 169)/126, 0), (((v5*4) + 181)/126) + 0))"
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (0 <= 0)) && (0 >= 0)) && (v2 <= v2)) && (((v3 + v2) + -1) >= ((v3 + v2) - 1)))
(((((((uint1)1 && (((v0 + v1) + -2) <= ((v0 + v1) + -2))) && (((v0 + v1) + -2) >= ((v0 + v1) + -2))) && (0 <= 0)) && (0 >= 0)) && ((((v2*4) + v3) + 0) <= (((v2*4) + v3) + 0))) && ((((v2*4) + v3) + 3) >= (((v2*4) + v3) + ((4 + 0) - 1))))
(((v0*32) + 32) <= (v0*32))
((((v0*-56)/4)*4) == (v0*-56))
(((((v0*63) + v1) + v2) + 1) < ((((v0*63) + v1) + (v2 + 1)) + -5))
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((7*4) + v0) + 3) >= (((((8 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && ((0 + v1) <= (0 + v1))) && ((((1000 + 0) - 1) + v1) >= (((1000 + 0) - 1) + v1))) && (v2 <= v2)) && (v2 >= v2))
(((v0 + v1)/4) >= ((((v0 + v1)/4) + 33) - 1))
"(((((((uint1)1 && (((0 + ((min(v0*16, 52) + v1) + -9)) + 5) <= ((min(v0*16, 52) + v1) + -4))) && (((3 + ((min(v0*16, 52) + v1) + 12)) + 5) >= ((min(v0*16, 52) + v1) + 20))) && ((max(v2 + 16, v3) + -11) <= (v2 + -4))) && ((v2 + 5) >= (v2 + 5))) && (0 <= 0)) && (2 >= 2))"
"(((((((uint1)1 && (((0 + (min(v0, 4) + v1)) + -4) <= (0 + ((min(v0, 4) + v1) + -4)))) && (((3 + ((((max(v0, 4) + -1)/4)*4) + (min(v0, 4) + v1))) + -4) >= (((4 + 0) - 1) + ((v0 + v1) + -4)))) && ((min(v2*8, 117) + v3) <= ((min(v2*8, 117) + 0) + v3))) && (((min(v2*8, 117) + v3) + 7) >= ((min(v2*8, 117) + ((8 + 0) - 1)) + v3))) && (v4 <= v4)) && (v4 >= v4))"
((v0 + 3) <= (((v0 - 1) + -2) - 1))
"(((((((uint1)1 && (((((v0*4) + v1) + -2) + 0) <= (-2 + ((v0*4) + v1)))) && (((((v0*4) + v1) + ((4 + -2) - 1)) + 3) >= (((4 + -2) - 1) + (min(((v0*4) + v1) - (max(v0, 63)*4), v1) + 255)))) && (0 <= 0)) && ((4 - 1) >= (4 - 1))) && (v2 <= v2)) && (v2 >= v2))"
"(((((((uint1)1 && (((0 + ((v0*8) + v1)) + -11) <= (((v0*8) + v1) + -11))) && (((3 + (((v0*8) + v1) + 24)) + -11) >= (((v0*8) + v1) + 14))) && (((max(v2*4, -9) + v3) + 5) <= (((v2*4) + v3) + -4))) && ((((v2*4) + v3) + 8) >= (((v2*4) + v3) + 8))) && (0 <= 0)) && (2 >= 2))"
"(max(min(v0, 0), -62) == ((max(min(v0, 0), -62) + (5 - max(min(v0, 0), -62))) - 1))"
"(((min(v0 - v1, 5)*2) + -10) == ((((min(v0 - v1, 5)*2) + -10) + (13 - (min(v0 - v1, 5)*2))) - 1))"
(((v0 + 4)/3) != 0)
((((v0*8) + 44)/34) != 0)
((((v0 + v1)*8) + -67) >= (((((v0 + v1)*8) + -67) + 9) - 1))
(((v0 + 1007)/1003) != 0)
(((((((uint1)1 && ((((((v0*2) + v1) + v2)*4) + 0) <= ((((v0*2) + v1) + v2)*4))) && ((((((v0*2) + v1) + v2)*4) + 3) >= (((((v0*2) + v1) + v2)*4) + 3))) && (((v3*4) + -1000) <= (((v3*4) + 0) + -1000))) && (((v3*4) + -1) >= (((v3*4) + ((1000 + 0) - 1)) + -1000))) && (0 <= 0)) && (19 >= ((20 + 0) - 1)))
(((((((uint1)1 && ((0 + ((((v0*2) + v1)*8) + v2)) <= (0 + ((((v0*2) + v1)*8) + v2)))) && ((3 + (((((v0*2) + v1)*8) + v2) + 4)) >= (((4 + 0) - 1) + (((((v0*2) + v1)*8) + v2) + 4)))) && (v3 <= v3)) && (v3 >= v3)) && (v4 <= v4)) && (v4 >= v4))
(((v0 + v1) + -2) >= ((((v0 + v1) + -2) + 69) - 1))
"(0 == ((0 + (7 - max(min(v0*4, 7), 3))) - 1))"
"(((((((uint1)1 && ((((0*4) + v0) + 0) <= (0 + v0))) && ((((62*4) + v0) + 3) >= (3 + (v0 + 248)))) && ((v1/250) <= (((min(0*4, 121) + 0) + v1)/250))) && (((v1 + 124)/250) >= (((min(((32 + 0) - 1)*4, 121) + ((4 + 0) - 1)) + v1)/250))) && (v2 <= v2)) && (v2 >= v2))"
(((v0 + 13)/8) != 0)
(((v0 + 10)/8) != 0)
(((v0/125) + (((v0 % 125) + 249)/125)) <= (v0/125))
"(0 >= ((0 + (11 - max((v0 % 3)*4, 7))) - 1))"
"(0 == ((0 + (19 - max(v0*4, 15))) - 1))"
(((v0 + 95)/96) != 0)
(0 == ((0 + ((((v0 + v1) % 8) + 188)/16)) - 1))
"(((((((uint1)1 && ((((0*4) + 0) + ((min(v0, 252) + v1) + -252)) <= (((0*4) + ((min(v0, 252) + v1) + -252)) + 0))) && ((((15*4) + 3) + (min((((max(v0, 252) + -1)/64)*64) + (min(v0, 252) + v1), (v0 + v1) + 188) + -252)) >= (((62*4) + ((v0 + v1) + -252)) + 3))) && ((min(v2*63, 62) + v3) <= ((min(v2*63, 62) + 0) + v3))) && (((min(v2*63, 62) + v3) + 62) >= ((min(v2*63, 62) + ((63 + 0) - 1)) + v3))) && (v4 <= v4)) && (v4 >= v4))"
"(((((((uint1)1 && ((((min(v0, 4) + v1)/4) + -3) <= (((min(v0, 4) + v1)/4) + -3))) && (((((min(v0, 4) + v1)/4) + v2) + 7) >= (((v2 + 11) + (((min(v0, 4) + v1)/4) + -3)) - 1))) && ((0 + (v3/4)) <= (0 + (v3/4)))) && ((3 + ((v3/4) + 32)) >= (((4 + 0) - 1) + ((v3/4) + 32)))) && (((((v4*4) + v5)*2) + v6) <= ((((v4*4) + v5)*2) + v6))) && (((((v4*4) + v5)*2) + v6) >= ((((v4*4) + v5)*2) + v6)))"
(((v0 + 508)/504) != 0)
((((v0 + v1) + v2) + -133) == (((((v0 + v1) + v2) + -133) + 10) - 1))
(((((((uint1)1 && (0 <= 0)) && ((16 - 1) >= (16 - 1))) && ((((0*4) + ((v0*4) + ((v1*64) + v2))) + 0) <= ((v0*4) + ((v1*64) + v2)))) && ((((0*4) + ((v0*4) + ((v1*64) + v2))) + 3) >= (((v0*4) + ((v1*64) + v2)) + 3))) && (v3 <= v3)) && (v3 >= v3))
"((v0 + 1) < (min(max(min(((v1/4) + v2)*4, 1999), (v0 + 1) + 4), v0 + 1) + -3))"
(((((v0 + v1) + v2) + v3) + 1) <= ((((((v0 - 1) + v1) + v2) + v3) + -2) - 1))
"(((min(v0*64, 936)/4)*4) == min(v0*64, 936))"
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (v2 <= v2)) && (v2 >= v2)) && (v3 <= v3)) && (((v4 + v3) + -1) >= ((v4 + v3) - 1)))
((((v0 + v1)*4) + -11) < ((((v0 + 1) + v1)*4) + -17))
"(min(((v0*32) + v1) + v2, min(((v0*32) + v1) + v2, v3)) <= (max((((v0 - 1)*32) + v1) + v4, max((((v0 - 1)*32) + v1) + v4, v5)) - 1))"
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((249*4) + v0) + 3) >= (((249*4) + ((4 + 0) - 1)) + v0))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (v3 <= v3)) && (((v4 + v3) + -1) >= ((v4 + v3) - 1)))
(((((((uint1)1 && (0 <= 0)) && (0 >= 0)) && ((((0*4) + ((v0/4) + (v1*4))) + 0) <= (0 + ((v0/4) + (v1*4))))) && ((((0*4) + ((v0/4) + (v1*4))) + 3) >= (((4 + 0) - 1) + ((v0/4) + (v1*4))))) && (((v2*104) + 0) <= ((v2*104) + 0))) && (((v2*104) + ((104 + 0) - 1)) >= ((v2*104) + ((104 + 0) - 1))))
"(((((((uint1)1 && ((0 + ((min(v0*224, 444) + (v1*4)) + v2)) <= ((min(v0*224, 444) + (v1*4)) + v2))) && ((3 + ((min(v0*224, 444) + (v1*4)) + v2)) >= (((min(v0*224, 444) + (v1*4)) + 3) + v2))) && (0 <= 0)) && (0 >= 0)) && (v3 <= v3)) && (v3 >= v3))"
(((v0*4) + 3) < ((v0 + 1)*4))
((((v0*65) + (v1 + v2)) + -10) == (((((v0*65) + (v1 + v2)) + -10) + 78) - 1))
(((((((uint1)1 && ((v0 + v1) <= (v0 + v1))) && ((v0 + v1) >= (v0 + v1))) && ((0 + (((v2*4) + v3) + 1)) <= (((v2*4) + v3) + -2))) && ((3 + (((v2*4) + v3) + 1)) >= (((v2*4) + v3) + 4))) && (v4 <= v4)) && (v4 >= v4))
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && ((((v2*250) + v3) + v4) <= (((v2*250) + v3) + v4))) && ((((v2*250) + v3) + v4) >= (((v2*250) + v3) + v4))) && (0 <= 0)) && (0 >= 0))
(((((v0/4) + v1)*4) + -7) >= ((((((v0/4) + v1)*4) + -7) + ((0*4) + 4)) - 1))
(((((((uint1)1 && ((0 + ((v0*8) + v1)) <= (0 + ((v0*8) + v1)))) && ((3 + (((v0*8) + v1) + 4)) >= (((4 + 0) - 1) + (((v0*8) + v1) + 4)))) && (((v2*16) + v3) <= (((v2*16) + v3) + 0))) && ((((v2*16) + v3) + 15) >= (((v2*16) + v3) + ((16 + 0) - 1)))) && (v4 <= v4)) && (v4 >= v4))
"(((((((uint1)1 && ((0 + (min(v0*224, 444) + v1)) <= (min(v0*224, 444) + v1))) && ((3 + ((min(v0*224, 444) + v1) + 220)) >= ((min(v0*224, 444) + 223) + v1))) && (((min(v2*8, 117) + v3) + v4) <= ((min(v2*8, 117) + v3) + v4))) && (((min(v2*8, 117) + v3) + v4) >= ((min(v2*8, 117) + v3) + v4))) && (v5 <= v5)) && (v5 >= v5))"
((((v0 + v1)/8) + 1) < (((v0 + 1) + v1)/8))
"(((min(v0*2, 249) + v1) + v2) < ((min(v0*2, 249) + (v1 + 1)) + v2))"
"(((((((uint1)1 && ((((max(v0*4, -5) + v1) + 0) + -3) <= (((((v0*4) + v1) + 0) + -5) + -3))) && ((((max(v0*4, -5) + v1) + 3) + -3) >= (((((v0*4) + v1) + ((4 + 0) - 1)) + ((6 + -5) - 1)) + -3))) && ((v2 + -8) <= (-5 + (v2 + -3)))) && ((v2 + 131) >= (((6 + -5) - 1) + ((135 + (v2 + -3)) - 1)))) && (v3 <= v3)) && (v3 >= v3))"
"(max(min(1999, ((((v2*128) + v3) + -10) + (min(v1, 128) + 18)) - 1) + 1, min(max(0, ((v2*128) + v3) + -10), (min(v1, 128) + 18) + (((v2*128) + v3) + -10))) <= min(max(0, ((v2*128) + v3) + -10), (min(v1, 128) + 18) + (((v2*128) + v3) + -10)))"
(((v0 + v1) + -11) == ((((v0 + v1) + -11) + 146) - 1))
"(((min((v0*8) + (((v1/250)*8) + -5), (((v1 + 999)/250)*8) + -5)/8)*8) == min((v0*8) + (((v1/250)*8) + -5), (((v1 + 999)/250)*8) + -5))"
"(((((((uint1)1 && ((0 + ((v0*32) + v1)) <= ((v0*32) + v1))) && ((3 + (((v0*32) + v1) + 28)) >= (((v0*32) + 31) + v1))) && (((min(v2*223, 444) + 0) + v3) <= ((min(v2*223, 444) + 0) + v3))) && (((min(v2*223, 444) + ((223 + 0) - 1)) + v3) >= ((min(v2*223, 444) + ((223 + 0) - 1)) + v3))) && (v4 <= v4)) && (v4 >= v4))"
(((((((uint1)1 && ((v2 + -2) <= ((((0*3) + 0) + v2) + -2))) && ((v3 + 3) >= ((((1*3) + 2) + v3) + -2))) && (((((0*4) + 0) + (v1*8)) + -1) <= ((((((v1*2) + 0)*4) + -2) + 0) + 1))) && (((((4*4) + 3) + (((((((v0 - v1)/4)*32) + 36)/20)*20) + (v1*8))) + -1) >= ((((((v1*2) + ((((v0 - v1)/4)*8) + 7))*4) + 3) + 3) + 1))) && (v4 <= v4)) && (v4 >= v4))
((((v0*3) + v1) + v2) < (((v0*3) + (v1 + 1)) + v2))
(((v0 + v1) + -5) < (((v0 + 1) + v1) + -5))
"(((((((uint1)1 && ((((0*4) + 0) + ((min(max(v0*500, -5), (v0*500) + 436) + v1) + 3)) <= (((v0*500) + v1) + -2))) && ((((15*4) + 3) + (min((((min(v0*500, -5) + 504)/64)*64) + (max(v0*500, -5) + v1), ((v0*500) + v1) + 436) + 3)) >= (((v0*500) + v1) + 502))) && ((0 + (v2 + -2)) <= (((-5 + v2) + 0) + 3))) && ((64 + (v2 + 63)) >= (((124 + v2) + 3) + 3))) && (0 <= 0)) && (0 >= 0))"
(((((((uint1)1 && ((((((v0*32) + v1) + v2) + -10) + -15) <= (((((v0*32) + v1) + v2) + -10) + -15))) && ((((((v0*32) + v1) + v2) + ((13 + -10) - 1)) + -15) >= (((((v0*32) + v1) + v2) + ((13 + -10) - 1)) + -15))) && (((((v3 + 0)*4) + 0) + -7) <= ((v3*4) + -7))) && (((((v3 + 17)*4) + 3) + -7) >= (((v3*4) + 71) + -7))) && (v4 <= v4)) && (v4 >= v4))
"(max(min(min(min((v2 + -59)/64, (min(min(2060 - v1, v2), ((v3 + v4) - v1) + 60) + -59)/64), (1938 - v1)/64), (0 + ((v2 + 68)/64)) - 1) + 1, min(max(max(((max(v4, 0) - v1) + 65)/64, (65 - v1)/64), 0), ((v2 + 68)/64) + 0)) <= min(max(max(((max(v4, 0) - v1) + 65)/64, (65 - v1)/64), 0), ((v2 + 68)/64) + 0))"
"((min(v0*-4, 11) + -11) == 5)"
"((((max((v0*-2) + (((v1 + min(v2*16, v3 + -16))/4) + -2), ((v1 + min(v2*16, v3 + -16)) + 35)/4)*-4)/4)*4) == (max((v0*-2) + (((v1 + min(v2*16, v3 + -16))/4) + -2), ((v1 + min(v2*16, v3 + -16)) + 35)/4)*-4))"
"(max(min(124, ((v2 + 3) + (min(v1*4, -5) + 9)) - 1) + 1, min(max(0, v2 + 3), (min(v1*4, -5) + 9) + (v2 + 3))) <= min(max(0, v2 + 3), (min(v1*4, -5) + 9) + (v2 + 3)))"
(((v0 + v1) + -8) == ((((v0 + v1) + -8) + 134) - 1))
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((31*4) + v0) + 3) >= (((((32 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (v3 <= v3)) && (((v4 + v3) + -1) >= ((v4 + v3) - 1)))
"(0 == ((0 + (16 - (max(min(v0, 4), 3)*4))) - 1))"
((((((v0*2) + v1)*2) + v2) + -7) < (((((v0*2) + v1)*2) + (v2 + 1)) + -7))
"((min((v0 - v1)*256, 352) + -352) >= 2)"
((((v0*4) + 74)/63) != 0)
(((((((uint1)1 && (((((0*4) + ((v0*8) + ((v1*16) + v2)))*4) + 0) <= (((0 + ((v0*8) + ((v1*16) + v2)))*4) + 0))) && (((((1*4) + ((v0*8) + ((v1*16) + v2)))*4) + 15) >= (((7 + ((v0*8) + ((v1*16) + v2)))*4) + 3))) && (((v3*4) + 0) <= ((v3*4) + 0))) && (((v3*4) + ((4 + 0) - 1)) >= ((v3*4) + ((4 + 0) - 1)))) && (((0*4) + 0) <= 0)) && (((4*4) + 3) >= 19))
"(max(0, min(70 - ((v0 % 3)*24), (0 + 24) - 1) + 1) <= 0)"
"(max(0, min(min(((118 - (max(v0*12, -5) + (v2/16)))/4) + (v3*-16), (118 - (max(v0*12, -5) + v1))/4), (0 + ((min(v0*12, -5)/4) + 5)) - 1) + 1) <= 0)"
"(((((((uint1)1 && (0 <= 0)) && ((16 - 1) >= (16 - 1))) && (v0 <= v0)) && (v0 >= v0)) && (((v1*4) + 0) <= (v1*4))) && (((v1*4) + 3) >= ((min(v1, 11)*4) + 3)))"
(((v0*-16) + 62) > ((v0*-16) + 62))
"(max(min(min(min((181 - v1)/64, (185 - v1)/64), (189 - v1)/64), (0 + 2) - 1) + 1, min(max(max(max(0 - (v1/64), (55 - v1)/64), (59 - v1)/64), 0), 2 + 0)) <= min(max(max(max(0 - (v1/64), (55 - v1)/64), (59 - v1)/64), 0), 2 + 0))"
"(((((((uint1)1 && ((0 + ((v0*8) + v1)) <= ((v0*8) + v1))) && ((3 + (((v0*8) + v1) + 4)) >= (((v0*8) + 7) + v1))) && (((min(v2*42, 83) + ((v3*14) + v4)) + v5) <= ((min(v2*42, 83) + ((v3*14) + v4)) + v5))) && (((min(v2*42, 83) + ((v3*14) + v4)) + v5) >= ((min(v2*42, 83) + ((v3*14) + v4)) + v5))) && (v6 <= v6)) && (v6 >= v6))"
"(((min(v0*4, 121) + v1) + v2) < ((min(v0*4, 121) + (v1 + 1)) + v2))"
((v0 + -2) >= (((v0 - 1) + 8) + 1))
(((((v0*2) + v1)*8) + 7) < (((v0*2) + (v1 + 1))*8))
"(((((((uint1)1 && ((0 + ((v0*8) + v1)) <= ((v0*8) + v1))) && ((3 + (((v0*8) + v1) + 4)) >= (((v0*8) + v1) + 7))) && ((((min(v2, 1000) + v3)/8) + -125) <= (((min(v2, 1000) + v3)/8) + -125))) && ((((v2 + v3) + 7)/8) >= (((v2 + v3) + 7)/8))) && (v4 <= v4)) && (((v5 + v4) + -1) >= ((v5 + v4) - 1)))"
"(max(0, min(136 - ((v0 % 3)*46), (0 + 46) - 1) + 1) <= 0)"
(((((((uint1)1 && ((((((v0*8) + v1)*4) + v2) + 0) <= ((((v0*8) + v1)*4) + v2))) && ((((((v0*8) + v1)*4) + v2) + 3) >= (((((v0*8) + v1)*4) + 3) + v2))) && (0 <= 0)) && (0 >= 0)) && (((v3*2) + v4) <= ((v3*2) + v4))) && (((v3*2) + v4) >= ((v3*2) + v4)))
((((v0*-80)/4)*4) == (v0*-80))
"(((max(min((v1*-64) + (((v2/64)*-64) + v2), 64), 0)/4)*4) == max(min((v1*-64) + (((v2/64)*-64) + v2), 64), 0))"
(((v0 + 33)/16) != 0)
((0 - (v0*4)) > (1999 - (v0*4)))
(((v0*2) + 1) < ((v0 + 1)*2))
"(((((((uint1)1 && ((((v0 + v1)*2) + 0) <= (((v0 + v1)*2) + 0))) && ((((v0 + v1)*2) + ((3 + 0) - 1)) >= (((v0 + v1)*2) + ((3 + 0) - 1)))) && ((0 + (((v2*8) + v3)*2)) <= ((((v2*8) + v3)*2) + 0))) && ((3 + ((((v2*8) + v3)*2) + 13)) >= (((((v2*8) + v3) + 7)*2) + ((3 + 0) - 1)))) && ((min(v4*5, 13) + v5) <= (min(v4*5, 13) + v5))) && ((min(v4*5, 13) + v5) >= (min(v4*5, 13) + v5)))"
(((((v0/8)*-4)/2)*2) == ((v0/8)*-4))
(((((v0*126) + v1) + v2) + -3) < ((((v0*126) + v1) + (v2 + 1)) + -8))
"(max(0, min((29 - max(min(v0*8, 29), 25))/4, (0 + ((36 - max(min(v0*8, 29), 25))/4)) - 1) + 1) <= 0)"
(((v0 + -1) + 2) <= (v0 + -1))
"(((max(min((v0*-1000) + v1, 1000), -4)/4)*4) == max(min((v0*-1000) + v1, 1000), -4))"
((v0 + 4) <= ((v0 - 1) - 1))
"(((min(v0*63, 62) + (min(v1*4, 59) + v2)) + v3) < ((min(v0*63, 62) + (min(v1*4, 59) + (v2 + 1))) + v3))"
"(((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && (((((0*4) + (((min(v1, 1000) + v2)/125) + (v3*4))) + 0) + -8) <= ((0 + (((min(v1, 1000) + v2)/125) + (v3*4))) + -8))) && (((((0*4) + (((min(v1, 1000) + v2)/125) + (v3*4))) + 3) + -8) >= ((((4 + 0) - 1) + (((min(v1, 1000) + v2)/125) + (v3*4))) + -8))) && (v4 <= v4)) && (v4 >= v4))"
((((v0*0)/9)*9) == (v0*0))
(((((((uint1)1 && (((((v0*4) + v1) + 0) + -2) <= ((((v0*4) + v1) + 0) + -2))) && (((((v0*4) + v1) + 3) + -2) >= ((((v0*4) + v1) + ((4 + 0) - 1)) + -2))) && (v2 <= v2)) && (v2 >= v2)) && (v3 <= v3)) && (v3 >= v3))
"(max(min(248, (((((v1*2) + v2)*16) + v3) + 16) - 1) + 1, min(max(0, (((v1*2) + v2)*16) + v3), 16 + ((((v1*2) + v2)*16) + v3))) <= min(max(0, (((v1*2) + v2)*16) + v3), 16 + ((((v1*2) + v2)*16) + v3)))"
"(max(min(124 - v0, (0 + 34) - 1) + 1, min(max(0 - v0, 0), 34 + 0)) <= min(max(0 - v0, 0), 34 + 0))"
(((v0*4) + -4) >= ((((v0 - 1)*4) + 3) + 1))
"((((min((v0*32) + ((v1 + min(v2*500, v3 + -500))/4), ((v1 + min(v2*500, v3 + -500)) + 255)/4)*-4)/4)*4) == (min((v0*32) + ((v1 + min(v2*500, v3 + -500))/4), ((v1 + min(v2*500, v3 + -500)) + 255)/4)*-4))"
"(max(0, min(((v0 % 4) + 751)/256, (0 + 4) - 1) + 1) <= 0)"
(((((((uint1)1 && ((v0 + 0) <= (0 + v0))) && ((v0 + 3) >= (((4 + 0) - 1) + v0))) && ((0 + v1) <= (0 + v1))) && ((((125 + 0) - 1) + v1) >= (((125 + 0) - 1) + v1))) && (v2 <= v2)) && (v2 >= v2))
((((v0*-84)/12)*12) == (v0*-84))
"(((((((uint1)1 && ((0 + (((((v0*16) + v1)*4) + v2) + 3)) <= ((0 + ((((v0*16) + v1)*4) + v2)) + -2))) && ((3 + (min(((v1 - (max(v1*4, -5)/4))*4) + ((max(v1*4, -5) + (v0*64)) + v2), (((v0*16) + v1)*4) + v2) + 3)) >= ((3 + (((((v0*16) + v1)*4) + v2) + 8)) + -2))) && (((min(v3, 500) + v4) + -502) <= ((((0*63) + ((min(v3, 500) + v4) + -500)) + -5) + 3))) && (((v3 + v4) + 2) >= ((((7*63) + ((v3 + v4) + -500)) + 62) + 3))) && (0 <= 0)) && (0 >= 0))"
(((((((uint1)1 && (((((0*4) + v0) + 0) + -2) <= ((((0*4) + v0) + 0) + -2))) && (((((3*4) + v0) + 3) + -2) >= ((((3*4) + v0) + 3) + -2))) && ((((v1/125)*8) + -1) <= (-2 + (((v1/125)*8) + 1)))) && (((((v1/125) + v2)*8) + 11) >= (((6 + -2) - 1) + ((((v2*8) + 8) + (((v1/125)*8) + 1)) - 1)))) && ((v3*16) <= ((v3*16) + 0))) && (((v3*16) + 15) >= ((v3*16) + ((16 + 0) - 1))))
"(((((((uint1)1 && ((max(v0*4, -1) + v1) <= (((v0*4) + v1) + -1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + v1) + 3))) && ((0 + (v2 + -4)) <= ((0 + v2) + -1))) && ((3 + (v2 + 1000)) >= ((3 + (v2 + 1004)) + -1))) && (0 <= 0)) && (2 >= 2))"
"((min((v0 - v1)*256, 352) + -352) == 2)"
"((((max(min((min((v0*64) + (((v1*64) + (v2/8)) + -5), ((v3 + v2) + -497)/8)*2) + ((v4*32)*2), 499), 0)*4)/4)*4) == (max(min((min((v0*64) + (((v1*64) + (v2/8)) + -5), ((v3 + v2) + -497)/8)*2) + ((v4*32)*2), 499), 0)*4))"
(((((((uint1)1 && (((v0*4) + v1) <= ((v0*4) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + v1) + 3))) && ((0 + (v2/4)) <= (v2/4))) && ((3 + ((v2/4) + 32)) >= ((v2/4) + 32))) && (v3 <= v3)) && (((v4 + v3) + -1) >= ((v4 + v3) + -1)))
(((v0 + 254)/252) != 0)
"(((((((uint1)1 && (((0 + ((v0*64) + v1)) + -8) <= (((0 + ((v0*64) + v1)) + -5) + -3))) && (((3 + (((((v0*-16) + (((v2 + 13)/4) + (v0*16)))*4) + ((v0*64) + v1)) + 4)) + -8) >= (((((4 + 0) - 1) + ((((v2 + 9)/4)*4) + ((v0*64) + v1))) + ((6 + -5) - 1)) + -3))) && (max(((v3*16) + v4) + -8, v5) <= (-5 + v5))) && (v5 >= (((6 + -5) - 1) + v5))) && (v6 <= v6)) && (v6 >= v6))"
(((v0*8) + v1) < ((v0*8) + (v1 + 1)))
"(max(min(min(min(1999, 1999), min(v1 + v2, 2000) + -1), ((((v4*1008) + v5) + -10) + (min(v3, 998) + 18)) - 1) + 1, min(max(max(max(0, 0), max(v2, 0)), ((v4*1008) + v5) + -10), (min(v3, 998) + 18) + (((v4*1008) + v5) + -10))) <= min(max(max(max(0, 0), max(v2, 0)), ((v4*1008) + v5) + -10), (min(v3, 998) + 18) + (((v4*1008) + v5) + -10)))"
(((((v0*2) + v1)*4) + v2) < ((((v0*2) + v1)*4) + (v2 + 1)))
"(max(0, min(33 - ((v0 % 4)*9), (0 + 9) - 1) + 1) <= 0)"
(((((((uint1)1 && (((((0*4) + 0) + (v0/4)) + -2) <= ((v0/4) + -2))) && (((((7*4) + 3) + ((v0/4) + 256)) + -2) >= ((v0 + 1031)/4))) && ((v1/4) <= (((0*4) + (v1/4)) + 0))) && (((v1/4) + 71) >= (((2*4) + ((v1/4) + 60)) + 3))) && (((v2*2) + v3) <= ((v2*2) + v3))) && (((v2*2) + v3) >= ((v2*2) + v3)))
"((max((((max(v0*252, 748)/4)*-4) + ((v0*252) + v1)) - (min(v0*252, 748) + v1), -748) + 1000) <= 1024)"
((-2 - (((v0*2) + v1)*2)) > (497 - (((v0*2) + v1)*2)))
((10 - ((v0*253) + v1)) > (2009 - ((v0*253) + v1)))
(((((v0*4) + v1)*4) + 4) <= (((v0*4) + v1)*4))
"(((((((uint1)1 && ((0 + ((v0*8) + v1)) <= (((((v0*2) + 0)*4) + v1) + 0))) && ((3 + (((v0*8) + v1) + 4)) >= (((((v0*2) + 1)*4) + v1) + 3))) && ((((min(v2, 3) + v3) + -3)/4) <= ((0 + ((min(v2, 3) + v3) + -3))/4))) && ((((v2 + v3) + -1)/4) >= ((((3 + 0) - 1) + ((v2 + v3) + -3))/4))) && (v4 <= v4)) && (((v5 + v4) + -1) >= ((v5 + v4) - 1)))"
((((v0*240)/4)*4) == (v0*240))
"(((((((uint1)1 && ((0 + (min(v0*252, 248) + v1)) <= (min(v0*252, 248) + v1))) && ((3 + ((min(v0*252, 248) + v1) + 248)) >= ((min(v0*252, 248) + 251) + v1))) && ((0 + v2) <= (0 + v2))) && ((((125 + 0) - 1) + v2) >= (((125 + 0) - 1) + v2))) && (v3 <= v3)) && (v3 >= v3))"
(((v0*2) + v1) < ((v0*2) + (v1 + 1)))
"(0 == ((0 + (510 - max(min((v0*4) + v1, 255)*2, 507))) - 1))"
"(max(min(min((1996 - v3)/4, min((((v1 + v2) - v3) + -1)/4, 499 - (v3/4))), (0 + 16) - 1) + 1, min(max(max(0 - (v3/4), max(((v2 - v3) + 3)/4, 0 - (v3/4))), 0), 16 + 0)) <= min(max(max(0 - (v3/4), max(((v2 - v3) + 3)/4, 0 - (v3/4))), 0), 16 + 0))"
((((v0*16)/16)*16) == (v0*16))
(((((((uint1)1 && ((v0 + -1) <= ((((((v0*2) + 0)*4) + 0) + -5)/8))) && (v1 >= ((((((v0*2) + (((v1 - v0)*2) + 1))*4) + 3) + -5)/8))) && ((((((v2*2) + v3)*4) + v4) + -5) <= (((((v2*2) + v3)*4) + v4) + -5))) && ((((((v2*2) + v3)*4) + v4) + -5) >= (((((v2*2) + v3)*4) + v4) + -5))) && ((0 + (v5*69)) <= (v5*69))) && ((3 + ((v5*69) + 68)) >= ((v5*69) + 68)))
"(max(0, min(70 - ((v0 % 8)*9), (0 + 9) - 1) + 1) <= 0)"
"(0 == ((0 + (min(v0 - v1, 2)*2)) - 1))"
(((((((uint1)1 && ((v0 + v1) <= (v0 + v1))) && ((v0 + v1) >= (v0 + v1))) && ((v2 + 0) <= (0 + v2))) && ((v2 + 3) >= (((4 + 0) - 1) + v2))) && (((((v3*3) + 0)*8) + 0) <= (v3*24))) && (((((v3*3) + 2)*8) + 7) >= ((v3*24) + 23)))
"(max(min(min(v1 + v2, 2000) + -1, ((v3 + -2) + 130) - 1) + 1, min(max(max(0, max(v2, 0)), v3 + -2), 130 + (v3 + -2))) <= min(max(max(0, max(v2, 0)), v3 + -2), 130 + (v3 + -2)))"
"((((max(min(max(min(v1*8, 113), -11), (max(min(v1*8, 125), 1) + (((max(min(v1*8, 113), -11) - max(min(v1*8, 125), 1))/2)*2)) + 1)*2, -23) + (max(min(v1*8, 125), 1)*-2))/4)*4) == (max(min(max(min(v1*8, 113), -11), (max(min(v1*8, 125), 1) + (((max(min(v1*8, 113), -11) - max(min(v1*8, 125), 1))/2)*2)) + 1)*2, -23) + (max(min(v1*8, 125), 1)*-2)))"
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (v2 <= v2)) && (v2 >= v2)) && (((v3*32) + 0) <= ((v3*32) + 0))) && (((v3*32) + ((32 + 0) - 1)) >= ((v3*32) + ((32 + 0) - 1))))
"((((max(v0*12, 20)*-1)/4)*4) == (max(v0*12, 20)*-1))"
(((((((uint1)1 && (((((((v0*2) + v1) + v2)*2) + v3) + -4) <= ((((((v0*2) + v1) + v2)*2) + v3) + -4))) && (((((((v0*2) + v1) + v2)*2) + v3) + -4) >= ((((((v0*2) + v1) + v2)*2) + v3) + -4))) && ((((((v4*6) + v5)*2) + 0) + -2) <= ((((v4*6) + v5)*2) + -2))) && (((((((v4*6) + v5) + 4)*2) + 3) + -2) >= (((((v4*6) + v5)*2) + 11) + -2))) && (((v6*2) + v7) <= ((v6*2) + v7))) && (((v6*2) + v7) >= ((v6*2) + v7)))
"(((v0*4) + 8) == ((((v0*4) + 8) + ((min((max(min(min(((v1 + v2) + 7)/8, ((v2/8) + (v3*86)) + 80)*2, 497), -2) - max(min(min(((v1 + v2) + 7)/8, ((v2/8) + (v3*86)) + 52), 248)*2, -3)) - (v4*15), 15)*4) + 4)) - 1))"
"(max(0, min((((min(v0*252, v1 + -252) + v2) % 4) + 243)/16, (0 + (((v3 % 4) + 271)/16)) - 1) + 1) <= 0)"
((((v0*256) + 702)/280) != 0)
"(max(0, min(1, (0 + (((((v0*500) + v1) % 8) + 763)/256)) - 1) + 1) <= 0)"
"(max(min(17 - (v0*5), (0 + 5) - 1) + 1, min(max(0 - (v0*5), 0), 5 + 0)) <= min(max(0 - (v0*5), 0), 5 + 0))"
(((((((uint1)1 && ((0 + ((v0*8) + v1)) <= ((v0*8) + v1))) && ((3 + (((v0*8) + v1) + 4)) >= (((v0*8) + v1) + 7))) && ((v2/8) <= (v2/8))) && ((((v3 + v2) + 7)/8) >= (((v3 + v2) + 7)/8))) && (v4 <= v4)) && (((v5 + v4) + -1) >= ((v5 + v4) - 1)))
((((v0/4)*4) + -8) == (((((v0/4)*4) + -8) + ((v1*4) + 44)) - 1))
(v0 >= ((v0 + 68) - 1))
"(((min((v0*-64) + (0 - (v1*4)), -248)/4)*4) == min((v0*-64) + (0 - (v1*4)), -248))"
"(((min(v0*42, 83) + ((v1*21) + ((v2*3) + v3))) + v4) < ((min(v0*42, 83) + ((v1*21) + ((v2*3) + (v3 + 1)))) + v4))"
(((v0 + v1)*4) >= ((((v0 + v1)*4) + 4) - 1))
(((v0 + 36)/32) != 0)
"(((((((uint1)1 && ((((0*4) + v0) + 0) <= v0)) && ((((7*4) + v0) + 3) >= (v0 + 31))) && ((max(min(v1*4, 1999), v2 + 6) + -5) <= (v2 + -2))) && ((v2 + 1) >= (v2 + 1))) && (v3 <= v3)) && (v3 >= v3))"
"(((max(max(min(((v0*32) + v1)*2, 491), -8) - max(min(((v0*32) + v1)*2, 499), 0), max(min(((((v0*8) + v2)*4) + v1)*2, 491), -8) - max(min(((((v0*8) + v2)*4) + v1)*2, 499), 0))*4) + 43) <= 1024)"
(((v0 + 5)/4) != 0)
"(((max(min((v1*-500) + (max(v2*4, -3) - min((v3/4)*4, 1999)), 496), -8)/4)*4) == max(min((v1*-500) + (max(v2*4, -3) - min((v3/4)*4, 1999)), 496), -8))"
((10 - ((v0 + v1)*2)) == (509 - ((v0 + v1)*2)))
((4 - v0) > (253 - v0))
"(max(min(126 - v0, (0 + 65) - 1) + 1, min(max(2 - v0, 0), 65 + 0)) <= min(max(2 - v0, 0), 65 + 0))"
(((((v0 + v1) + v2) + v3)/8) <= ((((((v0 - 1) + v1) + v2) + v3)/8) - 1))
"(((max(v0, 165)*4) + -677) == ((((max(v0, 165)*4) + -677) + (679 - (max(v0, 165)*4))) - 1))"
"(max(0, min((((min(v0*128, v1 + -128) + v2) % 8) + 47)/32, (0 + 3) - 1) + 1) <= 0)"
((((v0*2) + v1) + 2) < ((((v0 + 1)*2) + v1) + -2))
((((v0*4) + v1) + 6) < ((((v0 + 1)*4) + v1) + -2))
"(max(min(min(min(min(min(min(min((v4 + 14)/4, (v4 + 14)/4), (v4 + 14)/4), (min((v2 + v3) - v1, min(1992 - v1, v4) + 8) + 6)/4), (min((v2 + v3) - v1, min(1995 - v1, v4) + 5) + 9)/4), (2006 - v1)/4), (2006 - v1)/4), (0 + ((v4 + 21)/4)) - 1) + 1, min(max(max(max(max(((max(v3, 0) - v1) + 13)/4, (10 - v1)/4), (13 - v1)/4), (13 - v1)/4), 0), ((v4 + 21)/4) + 0)) <= min(max(max(max(max(((max(v3, 0) - v1) + 13)/4, (10 - v1)/4), (13 - v1)/4), (13 - v1)/4), 0), ((v4 + 21)/4) + 0))"
"(((((((uint1)1 && (((((0*4) + ((v0*4) + (min(v1, 4) + v2))) + 0) + -4) <= ((0 + ((v0*4) + (min(v1, 4) + v2))) + -4))) && (((((0*4) + ((v0*4) + (min(v1, 4) + v2))) + 3) + -4) >= ((((4 + 0) - 1) + ((v0*4) + (min(v1, 4) + v2))) + -4))) && (0 <= 0)) && (0 >= 0)) && (v3 <= v3)) && (v3 >= v3))"
(((v0/2) + 7) != 0)
((((v0*8) + 44)/36) != 0)
"((min(v0*69, 68) + v1) < (min(v0*69, 68) + (v1 + 1)))"
(((v0 % 250) + 999) >= 0)
"((max(min(((v0*4) + v1) - max(v0*4, 61), v1) - (min(v0*4, 61) + v1), -61) + 77) <= 1024)"
"(((((((uint1)1 && (0 <= 0)) && ((16 - 1) >= (16 - 1))) && ((((((v0/4) + v1)*4) + 0) + -7) <= ((((v0/4) + v1)*4) + -7))) && ((((((v0/4) + v1)*4) + 3) + -7) >= ((min(v0/4, ((v0/4) + v1) - max(v1, 34))*4) + 132))) && (v2 <= v2)) && (v2 >= v2))"
"(max(min(min(1999, min(v1 + v2, 2000) + -1), ((((v3*68) + v4) + -10) + (143 - max(v3*68, 67))) - 1) + 1, min(max(max(0, max(v2, 0)), ((v3*68) + v4) + -10), (143 - max(v3*68, 67)) + (((v3*68) + v4) + -10))) <= min(max(max(0, max(v2, 0)), ((v3*68) + v4) + -10), (143 - max(v3*68, 67)) + (((v3*68) + v4) + -10)))"
"((((((max(min(max(min(max(min(((v1*-252) + (v2 + 9))/32, 7), (min((v1*-252) + v2, 242) + 9)/32), max(min((v1*-63) + ((v2 + 9)/4), 62), (min((v1*-252) + v2, 242) + 9)/4)/8), (min((v1*-252) + v2, 242) + 14)/32), 7), -1)*32) + (v1*252))*-1)/4)*4) == (((max(min(max(min(max(min(((v1*-252) + (v2 + 9))/32, 7), (min((v1*-252) + v2, 242) + 9)/32), max(min((v1*-63) + ((v2 + 9)/4), 62), (min((v1*-252) + v2, 242) + 9)/4)/8), (min((v1*-252) + v2, 242) + 14)/32), 7), -1)*32) + (v1*252))*-1))"
"(max(min(min(v1 + v2, 2000) + -1, ((((v3*65) + v4) + -10) + 78) - 1) + 1, min(max(max(0, max(v2, 0)), ((v3*65) + v4) + -10), 78 + (((v3*65) + v4) + -10))) <= min(max(max(0, max(v2, 0)), ((v3*65) + v4) + -10), 78 + (((v3*65) + v4) + -10)))"
((v0 + -3) == (((v0 + -3) + (-4 + 5)) - 1))
"(((max(min((v2*-32) + (max(min(min(v3*64, 188) + (min(v4*252, v5 + -252) + v6), 1936), -63) - max(min(min(v3*64, 188) + (min(v4*252, v5 + -252) + v6), 1999), 0)), -32), -64)/4)*4) == max(min((v2*-32) + (max(min(min(v3*64, 188) + (min(v4*252, v5 + -252) + v6), 1936), -63) - max(min(min(v3*64, 188) + (min(v4*252, v5 + -252) + v6), 1999), 0)), -32), -64))"
(v0 >= ((v0 + 16) - 1))
((((v0*12)/2)*2) == (v0*12))
"(max(min(min(v1 + v2, 3) + -1, (v4 + v3) - 1) + 1, min(max(max(max(max(0, 0), max(v2, 0)), max(v2, 0)), v4), v3 + v4)) <= min(max(max(max(max(0, 0), max(v2, 0)), max(v2, 0)), v4), v3 + v4))"
"(((((((uint1)1 && ((-2 + v2) <= (-2 + v2))) && ((((4 + -2) - 1) + v2) >= (((4 + -2) - 1) + v2))) && ((((((v0*4) + v1) + -5) + 0) + 3) <= (max(-5, -2) + ((v0*4) + v1)))) && ((((((v0*4) + v1) + 1) + 3) + 3) >= (1 + (min(((v0*4) + v1) - (max(v0, 8)*4), v1) + 35)))) && (v3 <= v3)) && (v3 >= v3))"
"(((min((v0*2) + v1, 249)*8) + -4) == ((((min((v0*2) + v1, 249)*8) + -4) + 8) - 1))"
"(((((((uint1)1 && ((((min(v0*252, 251) + ((v1*63) + v2)) + v3) + 5) <= (((min(v0*252, 251) + ((v1*63) + v2)) + v3) + -4))) && ((((min(v0*252, 251) + ((v1*63) + v2)) + v3) + 5) >= (((min(v0*252, 251) + ((v1*63) + v2)) + v3) + 5))) && (((0 + ((min(v4*64, 440) + v5) + -9)) + 5) <= ((min(v4*64, 440) + v5) + -4))) && (((3 + ((min(v4*64, 440) + v5) + 60)) + 5) >= ((min(v4*64, 440) + v5) + 68))) && (0 <= 0)) && (2 >= 2))"
"(max(min(min(1999, min(v1 + v2, 2000) + -1), ((v3 + -2) + 133) - 1) + 1, min(max(max(0, max(v2, 0)), v3 + -2), 133 + (v3 + -2))) <= min(max(max(0, max(v2, 0)), v3 + -2), 133 + (v3 + -2)))"
"(((v0*4) + -17) == ((((v0*4) + -17) + ((min(v1, 60)*4) + 24)) - 1))"
(((((((uint1)1 && (((v0 + 0) + -4) <= ((0 + v0) + -4))) && (((v0 + 3) + -4) >= ((((4 + 0) - 1) + v0) + -4))) && (v1 <= v1)) && (v1 >= v1)) && (((v2*16) + ((v3*2) + v4)) <= ((v2*16) + ((v3*2) + v4)))) && (((v2*16) + ((v3*2) + v4)) >= ((v2*16) + ((v3*2) + v4))))
"((((max(min(v0, 2), 1)*-16)/4)*4) == (max(min(v0, 2), 1)*-16))"
((((v0*0)/2)*2) == (v0*0))
"(((((((uint1)1 && ((((((v0/8)*2) + 0)*4) + 0) <= ((v0/8)*8))) && ((((((v0/8)*2) + ((((max(((v0/8)*8) + 1, v0) + 11)/4) - ((v0/8)*2)) + -1))*4) + 3) >= (max(((v0/8)*8) + 4, v0) + 7))) && (((v1*2) + v2) <= ((v1*2) + v2))) && ((((v1*2) + v2) + 6) >= (((v1*2) + v2) + 6))) && ((min(v3*69, 68) + v4) <= (min(v3*69, 68) + v4))) && ((min(v3*69, 68) + v4) >= (min(v3*69, 68) + v4)))"
((((v0*16)/2)*2) == (v0*16))
(((((v0*33) + v1) + v2) + 5) < ((((v0*33) + v1) + (v2 + 1)) + -4))
(((v0 + v1) + 1) < (((v0 + 1) + v1) + -3))
((((v0*8) + v1) + 8) < (((v0*8) + (v1 + 1)) + 1))
"(max(min(62 - (v0/2), (0 + 2) - 1) + 1, min(max(1 - (v0/2), 0), 2 + 0)) <= min(max(1 - (v0/2), 0), 2 + 0))"
"(v0 < min(max((min(v1*63, 62) + v2) + -8, v0 + 1), (v0 + 1) + -5))"
"((1 - max(v0, 1)) == 2)"
(((-165 - ((v0 + v1) % 8))/8) >= ((((-165 - ((v0 + v1) % 8))/8) + ((((v0 + v1) % 8) + 180)/8)) - 1))
(((v0 + 15)/1008) >= ((((v0 + 15)/1008) + ((((v0 + 15) % 1008) + 1007)/1008)) - 1))
"(((((((uint1)1 && ((((max(-1*4, -3) + v0) + 0) + 1) <= (-2 + v0))) && ((((max(1*4, -3) + v0) + 3) + 1) >= (1 + (v0 + 7)))) && (((max(v1*2, -3) + v2) + 1) <= (-2 + ((v1*2) + v2)))) && ((((v1*2) + v2) + 2) >= (1 + (((v1*2) + v2) + 1)))) && (0 <= 0)) && (1 >= 1))"
"(((1 - max(v0, 1)) + max(v0, 1)) <= (1 - max(v0, 1)))"
"(((min(v0*2, 255) + v1) + v2) < ((min(v0*2, 255) + (v1 + 1)) + v2))"
(((v0 + 667)/668) != 0)
"(max(min(min(min((((v3 + v4)/4) - (v5*4)) + 8, ((v2 - v5)*4) + 11), ((min((v2*16) + 9, v3 + v4) + 35)/4) - (v5*4)), (0 + ((min((max(min(((v6 + v7) + 47)/16, 124), 0) - (v8*8)) - max(min(v7/16, 126), 2), 5)*4) + 12)) - 1) + 1, min(max((((v4 + 35)/4) - (v5*4)) + 1, 0), ((min((max(min(((v6 + v7) + 47)/16, 124), 0) - (v8*8)) - max(min(v7/16, 126), 2), 5)*4) + 12) + 0)) <= min(max((((v4 + 35)/4) - (v5*4)) + 1, 0), ((min((max(min(((v6 + v7) + 47)/16, 124), 0) - (v8*8)) - max(min(v7/16, 126), 2), 5)*4) + 12) + 0))"
"((((min((v0*32) + ((((v1*500) + (v2 + v3))/8) + -5), (((v1*500) + (v2 + v3)) + 515)/8)*-8)/8)*8) == (min((v0*32) + ((((v1*500) + (v2 + v3))/8) + -5), (((v1*500) + (v2 + v3)) + 515)/8)*-8))"
"(((max(min((v0*-8) + v1, 8), -4)/4)*4) == max(min((v0*-8) + v1, 8), -4))"
(((((((uint1)1 && ((((v0*4) + v1) % 4) <= (((v0*4) + v1) % 4))) && ((((v0*4) + v1) % 4) >= (((v0*4) + v1) % 4))) && (((((v2*4) + v3)*4) + 0) <= (((((v2*4) + v3) + 0)*4) + 0))) && (((((v2*4) + v3)*4) + 15) >= (((((v2*4) + v3) + 3)*4) + 3))) && (0 <= 0)) && (19 >= 19))
"(((((((uint1)1 && (((v0 + v1) + -6) <= ((v0 + v1) + -6))) && (((v0 + v1) + -6) >= ((v0 + v1) + -6))) && (((((0*4) + (max(v2*8, -5) + v3)) + 0) + 3) <= ((0 + (max(v2*8, -5) + v3)) + 3))) && (((((0*4) + ((max(v2*8, -5) + v3) + 4)) + 3) + 3) >= ((((4 + 0) - 1) + ((max(v2*8, -5) + v3) + 4)) + 3))) && (0 <= 0)) && (0 >= 0))"
"(max(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min((v6/125) + -1, (v6/125) + -1), (min(min(2126 - v5, v6), ((v8 + v7) - v5) + 126)/125) + -1), (min(min(2126 - v5, v6), ((v8 + v7) - v5) + 126)/125) + -1), (min(min(2126 - v5, v6), ((v8 + v7) - v5) + 126)/125) + -1), (min((v8 + v7) - v5, min(1997 - v5, v6) + 3) + -128)/125), (min((v8 + v7) - v5, min(1997 - v5, v6) + 3) + -128)/125), (min((v8 + v7) - v5, min(1997 - v5, v6) + 3) + -128)/125), (min((v8 + v7) - v5, min(1998 - v5, v6) + 2) + -127)/125), (min((v8 + v7) - v5, min(1998 - v5, v6) + 2) + -127)/125), (min((v8 + v7) - v5, min(1998 - v5, v6) + 2) + -127)/125), (1872 - v5)/125), (1873 - v5)/125), min((v8 + v7) - v5, min(2125 - v5, v6) + -125)/125), min((v8 + v7) - v5, min(2125 - v5, v6) + -125)/125), min((v8 + v7) - v5, min(2125 - v5, v6) + -125)/125), (0 + ((v6 + 124)/125)) - 1) + 1, min(max(max(max(max(max(max(max(max(max(max(max(max(max(max(((0 - v5)/125) + 1, ((max(v7, 0) - v5)/125) + 1), ((max(v7, 0) - v5)/125) + 1), ((max(v7, 0) - v5)/125) + 1), ((max(v7, 0) - v5) + 126)/125), ((max(v7, 0) - v5) + 126)/125), ((max(v7, 0) - v5) + 126)/125), (-3 - v5)/125), (-3 - v5)/125), (-3 - v5)/125), (-2 - v5)/125), (-2 - v5)/125), (-2 - v5)/125), (126 - v5)/125), 0), ((v6 + 124)/125) + 0)) <= min(max(max(max(max(max(max(max(max(max(max(max(max(max(max(((0 - v5)/125) + 1, ((max(v7, 0) - v5)/125) + 1), ((max(v7, 0) - v5)/125) + 1), ((max(v7, 0) - v5)/125) + 1), ((max(v7, 0) - v5) + 126)/125), ((max(v7, 0) - v5) + 126)/125), ((max(v7, 0) - v5) + 126)/125), (-3 - v5)/125), (-3 - v5)/125), (-3 - v5)/125), (-2 - v5)/125), (-2 - v5)/125), (-2 - v5)/125), (126 - v5)/125), 0), ((v6 + 124)/125) + 0))"
"(((max(min((v0*-1000) + v1, 1000), 0)/4)*4) == max(min((v0*-1000) + v1, 1000), 0))"
"(max(min((1996 - v0)/4, (0 + 63) - 1) + 1, min(max(0 - (v0/4), 0), 63 + 0)) <= min(max(0 - (v0/4), 0), 63 + 0))"
(((((v0 % ((v1/64) + 1))*-64)/32)*32) == ((v0 % ((v1/64) + 1))*-64))
"(((min(v0*4, 246) + v1) + v2) < ((min(v0*4, 246) + (v1 + 1)) + v2))"
"(((max(min((v1*-224) + ((v2*-668) + v3), 224), 0)/4)*4) == max(min((v1*-224) + ((v2*-668) + v3), 224), 0))"
"(0 == ((0 + (32 - (max(min(v0, 2), 1)*16))) - 1))"
"(((min(v0*64, 936)/8)*8) == min(v0*64, 936))"
"(((((((uint1)1 && ((0 + (((min(v1, 4) + v2) + -36)/16)) <= (-2 + (((min(v1, 4) + v2) + -4)/16)))) && ((3 + ((((min(v1, 4) + v2) + -36)/16) + ((((((((min(v1, 4) + v2) + 44)/16) + ((v3/4)*4)) - (((min(v1, 4) + v2) + -36)/16)) + 3)/4)*4))) >= (3 + ((((min(v1, 4) + v2) + 44)/16) + ((v3/4)*4))))) && (((v4*8) + -1) <= ((((((v4*2) + 0)*4) + 0) + -2) + 1))) && (((v4*8) + 11) >= ((((((v4*2) + 1)*4) + 3) + 3) + 1))) && (((v5*2) + v6) <= ((v5*2) + v6))) && (((v5*2) + v6) >= ((v5*2) + v6)))"
(((((((uint1)1 && ((((v0*8) + ((v1*4) + v2)) + v3) <= (((v0*8) + ((v1*4) + v2)) + v3))) && ((((v0*8) + ((v1*4) + v2)) + v3) >= (((v0*8) + ((v1*4) + v2)) + v3))) && ((0 + v4) <= (0 + v4))) && ((3 + v4) >= (((4 + 0) - 1) + v4))) && (0 <= 0)) && (0 >= 0))
(((((((uint1)1 && ((v0 + -2) <= (v0 + -2))) && ((v0 + 130) >= ((133 + (v0 + -2)) - 1))) && ((((v1*4) + v2) + 0) <= (((v1*4) + 0) + v2))) && ((((v1*4) + v2) + 3) >= (((v1*4) + ((4 + 0) - 1)) + v2))) && (0 <= 0)) && (0 >= 0))
"(((max(min((v0*-500) + v1, 500), 0)/4)*4) == max(min((v0*-500) + v1, 500), 0))"
(((((((uint1)1 && (0 <= 0)) && (0 >= 0)) && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (0 <= 0)) && (((48 + 0) - 1) >= ((48 + 0) - 1)))
(((((((uint1)1 && (((v0 + v1) % 4) <= ((v0 + v1) % 4))) && (((v0 + v1) % 4) >= ((v0 + v1) % 4))) && (((((0*4) + v2) + 0) + -7) <= (-2 + (v2 + -5)))) && (((((252*4) + v2) + 3) + -7) >= (((4 + -2) - 1) + (v2 + 1000)))) && (v3 <= v3)) && (v3 >= v3))
"((max(((((min(v0, 4) + v1) + 92)/16) + (v2*4)) - min(max(((min(v0, 4) + v1) + -4)/16, (((min(v0, 4) + v1) + 76)/16) + (v2*4)) + -2, (((min(v0, 4) + v1) + -36)/16) + (v2*4)), 8) + 1) <= 1024)"
(((((((uint1)1 && ((((((v0*4) + 0)*4) + v1) + 0) <= ((v0*16) + v1))) && ((((((v0*4) + 3)*4) + v1) + 3) >= (((v0*16) + 15) + v1))) && ((((v2*4) + v3) + v4) <= (((v2*4) + v3) + v4))) && ((((v2*4) + v3) + v4) >= (((v2*4) + v3) + v4))) && (v5 <= v5)) && (v5 >= v5))
"(((((((uint1)1 && ((0 + ((v0*64) + v1)) <= ((v0*64) + v1))) && ((3 + (((v0*64) + v1) + 60)) >= (((v0*64) + 63) + v1))) && (((min(v2*63, 62) + v3) + v4) <= ((min(v2*63, 62) + v3) + v4))) && (((min(v2*63, 62) + v3) + v4) >= ((min(v2*63, 62) + v3) + v4))) && (0 <= 0)) && (0 >= 0))"
"(max(-508 - (v0*4), (v0*4) + 5) >= 0)"
"(max(min(248, (v1 + 2) - 1) + 1, min(max(0, v1), 2 + v1)) <= min(max(0, v1), 2 + v1))"
"((((((min((v0*1000) + v1, (v2 + v1) + -1000) - ((min((v0*1000) + v1, (v2 + v1) + -1000)/4)*4)) + ((((min((v0*1000) + v1, (v2 + v1) + -1000) % 4) + 999)/4)*4))/4)/4)*4) == (((min((v0*1000) + v1, (v2 + v1) + -1000) - ((min((v0*1000) + v1, (v2 + v1) + -1000)/4)*4)) + ((((min((v0*1000) + v1, (v2 + v1) + -1000) % 4) + 999)/4)*4))/4))"
"(((max(max(min(v0*2, 483), -16) - max(min(v0*2, 499), 0), max(min(((v1*8) + v0)*2, 483), -16) - max(min(((v1*8) + v0)*2, 499), 0))*4) + 72) <= 1024)"
"(((((((uint1)1 && ((((v0*151) + v1) + -10) <= (-2 + (((v0*151) + v1) + -8)))) && (((min(v0*151, 152) + v1) + 143) >= (((4 + -2) - 1) + (min(((v0*151) + v1) - max(v0*151, 152), v1) + 294)))) && ((0 + (v2 + -10)) <= (-2 + (v2 + -8)))) && ((3 + (v2 + 129)) >= (((4 + -2) - 1) + (v2 + 131)))) && (v3 <= v3)) && (v3 >= v3))"
(((((v0 + v1) + v2)/8) + 1) <= (((((v0 - 1) + v1) + v2)/8) - 1))
((((v0 + v1) + v2)/8) >= ((((((v0 - 1) + v1) + v2)/8) + 1) + 1))
(((((((uint1)1 && (((v0 + v1) + 5) <= ((v0 + v1) + -4))) && (((v0 + v1) + 5) >= ((v0 + v1) + 5))) && ((((0*4) + (v2 + -11)) + 0) <= (v2 + -11))) && ((((35*4) + (v2 + 130)) + 3) >= (v2 + 131))) && (0 <= 0)) && (2 >= 2))
"(((min(v0 - v1, 13)*32) + -416) > 2)"
(((((((uint1)1 && ((((((v0*2) + v1)*4) + v2) + 0) <= ((((v0*2) + v1)*4) + v2))) && ((((((v0*2) + v1)*4) + v2) + 3) >= (((((v0*2) + v1)*4) + 3) + v2))) && ((0 + v3) <= (0 + v3))) && ((((125 + 0) - 1) + v3) >= (((125 + 0) - 1) + v3))) && (v4 <= v4)) && (v4 >= v4))
(((v0 + v1) + v2) <= ((((((v0 - 1) + v1) + v2)/8)*8) - 1))
"((((min(v0*8, 118) + ((v1*2) + v2)) + v3) + 1) < (((min(v0*8, 118) + ((v1*2) + (v2 + 1))) + v3) + -2))"
"(((((((uint1)1 && (((((0*4) + ((min(v0, 500) + v1)/4)) + 0) + -125) <= ((0 + ((min(v0, 500) + v1)/4)) + -125))) && (((((0*4) + (((min(v0, 500) + v1)/4) + (((v2 + 125)/4)*4))) + 3) + -125) >= ((((4 + 0) - 1) + (((min(v0, 500) + v1)/4) + (((v2 + 125)/4)*4))) + -125))) && (v3 <= v3)) && (v3 >= v3)) && (((v4*2) + 0) <= ((v4*2) + 0))) && (((v4*2) + ((2 + 0) - 1)) >= ((v4*2) + ((2 + 0) - 1))))"
"(max(min(min((((v1 + v2) - max(min(v4, 2001), 2)) + -6)/8, ((min(max(min(v3 + v4, 1997), -2), (v1 + v2) + 4) - max(min(v4, 2001), 2)) + -3)/8), (0 + ((v5 + 12)/8)) - 1) + 1, min(max(((v2 - max(min(v4, 2001), 2)) + 9)/8, 0), ((v5 + 12)/8) + 0)) <= min(max(((v2 - max(min(v4, 2001), 2)) + 9)/8, 0), ((v5 + 12)/8) + 0))"
(((((((uint1)1 && ((0 + ((((v0*4) + v1)*8) + v2)) <= (((v0*32) + (v1*8)) + v2))) && ((3 + (((((v0*4) + v1)*8) + v2) + 4)) >= (((v0*32) + ((v1*8) + 7)) + v2))) && ((((v3*3) + v4) + v5) <= (((v3*3) + v4) + v5))) && ((((v3*3) + v4) + v5) >= (((v3*3) + v4) + v5))) && (v6 <= v6)) && (v6 >= v6))
"((((v0 + v1)*2) + -6) == (((((v0 + v1)*2) + -6) + ((min((v2 - max(min(((v3*8) + v4)*2, 499), 0))*2, 1)*2) + 2)) - 1))"
"(((((((uint1)1 && ((((((v0*8) + v1)*4) + v2) + 0) <= ((((v0*8) + v1)*4) + v2))) && ((((((v0*8) + v1)*4) + v2) + 3) >= (((((v0*8) + v1)*4) + 3) + v2))) && ((((v3*91) + (min(v4*46, 45) + (min(v5*16, 30) + v6))) + v7) <= (((v3*91) + (min(v4*46, 45) + (min(v5*16, 30) + v6))) + v7))) && ((((v3*91) + (min(v4*46, 45) + (min(v5*16, 30) + v6))) + v7) >= (((v3*91) + (min(v4*46, 45) + (min(v5*16, 30) + v6))) + v7))) && (v8 <= v8)) && (v8 >= v8))"
(((((((uint1)1 && ((((((v0*4) + v1) + v2) + 0) + 3) <= ((((v0*4) + v1) + 0) + v2))) && ((((((v0*4) + v1) + v2) + 3) + 3) >= ((((v0*4) + v1) + ((4 + 0) - 1)) + v2))) && ((((((((v3*2) + v4)*4) + v5) + v6) + 1) % 8) <= (((((((v3*2) + v4)*4) + v5) + v6) + 1) % 8))) && ((((((((v3*2) + v4)*4) + v5) + v6) + 1) % 8) >= (((((((v3*2) + v4)*4) + v5) + v6) + 1) % 8))) && (((v7*32) + v8) <= ((v7*32) + v8))) && (((v7*32) + v8) >= ((v7*32) + v8)))
((((v0*2) + 21)/9) != 0)
(((((((v0/250)*2) + v1)*4) + ((v2*2) + v3)) + -5) < ((((((v0/250)*2) + v1)*4) + ((v2*2) + (v3 + 1))) + -5))
(((((v0/4) + v1)*4) + -7) == ((((((v0/4) + v1)*4) + -7) + ((0*4) + 4)) - 1))
"(max(0, min(((v0 % 8) + 483)/32, (0 + (((v0 % 8) + 539)/32)) - 1) + 1) <= 0)"
"(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((124*4) + v0) + 3) >= (((124*4) + ((4 + 0) - 1)) + v0))) && (((min(v1*32, 93) + ((v2*8) + v3)) + v4) <= ((min(v1*32, 93) + ((v2*8) + v3)) + v4))) && (((min(v1*32, 93) + ((v2*8) + v3)) + v4) >= ((min(v1*32, 93) + ((v2*8) + v3)) + v4))) && (v5 <= v5)) && (((v6 + v5) + -1) >= ((v6 + v5) - 1)))"
(((((((uint1)1 && ((((((v0*4) + v1) + 0)*4) + 0) <= ((((v0*4) + v1)*4) + 0))) && ((((((v0*4) + v1) + 3)*4) + 3) >= ((((v0*4) + v1)*4) + ((16 + 0) - 1)))) && (((v2*4) + v3) <= ((v2*4) + v3))) && (((v2*4) + v3) >= ((v2*4) + v3))) && (((((v4*2) + 0)*2) + 0) <= ((v4*4) + 0))) && (((((v4*2) + 1)*2) + 1) >= ((v4*4) + ((4 + 0) - 1))))
"((((v0*4) + v1) + 3) < (min(max((v0 + 1)*4, -1), ((v0 + 1)*4) + -1) + v1))"
"(max(min(31 - (v0*16), (0 + 16) - 1) + 1, min(max(0 - (v0*16), 0), 16 + 0)) <= min(max(0 - (v0*16), 0), 16 + 0))"
(((v0*2) + 4) != 0)
(((v0 + 3)/2) != 0)
(((((((uint1)1 && ((((0*4) + ((v0/16) + (v1*4))) + 0) <= (0 + ((v0/16) + (v1*4))))) && ((((0*4) + ((v0/16) + (v1*4))) + 3) >= (((4 + 0) - 1) + ((v0/16) + (v1*4))))) && (v2 <= v2)) && (v2 >= v2)) && (((v3*2) + v4) <= ((v3*2) + v4))) && (((v3*2) + v4) >= ((v3*2) + v4)))
"(((max(min((v1*-224) + (v3 + (v2*-668)), 224), 0)/4)*4) == max(min((v1*-224) + (v3 + (v2*-668)), 224), 0))"
(((v0 + 257)/252) != 0)
"(((((((uint1)1 && ((-2 + (((min(v0, 4) + v1) + -4)/16)) <= (-2 + (((min(v0, 4) + v1) + -4)/16)))) && ((((6 + -2) - 1) + (((v2 + 1) + (((min(v0, 4) + v1) + -4)/16)) - 1)) >= (((6 + -2) - 1) + (((v2 + 1) + (((min(v0, 4) + v1) + -4)/16)) - 1)))) && (((((0*4) + (v3*8)) + 0) + -1) <= ((((((v3*2) + max(-2, 0))*4) + 0) + -2) + 1))) && (((((3*4) + ((v3*8) + 9)) + 3) + -1) >= ((((((v3*2) + 1)*4) + ((4 + 0) - 1)) + ((6 + -2) - 1)) + 1))) && (((((v4*2) + v5)*4) + v6) <= ((((v4*2) + v5)*4) + v6))) && (((((v4*2) + v5)*4) + v6) >= ((((v4*2) + v5)*4) + v6)))"
"(((((((uint1)1 && (((0 + (max(v0*12, -5) + v1)) + 1) <= (((0 + ((v0*12) + v1)) + -2) + -2))) && (((3 + ((((min(v0*12, -5)/4)*4) + (max(v0*12, -5) + v1)) + 16)) + 1) >= (((3 + (((v0*12) + v1) + 8)) + 3) + -2))) && (((v2*8) + -1) <= (-2 + ((v2*8) + 1)))) && (((v2*8) + 11) >= (3 + ((v2*8) + 8)))) && (v3 <= v3)) && (v3 >= v3))"
((((v0*8) + 17)/9) != 0)
(((v0 + v1)/4) == ((((v0 + v1)/4) + 33) - 1))
(((((((uint1)1 && (((((0*2) + v0)*2) + 0) <= (v0*2))) && (((((7*2) + v0)*2) + 3) >= ((v0*2) + 31))) && (((v1 + v2) + -2) <= ((v1 + v2) + -2))) && (((v1 + v2) + -2) >= ((v1 + v2) + -2))) && (v3 <= v3)) && (v3 >= v3))
"((max(min(((v0*8) + v1) - min(((v2 + v1) - (v3*126)) - (v4*32), v1 + 22), 14), 7) + -16) == (((max(min(((v0*8) + v1) - min(((v2 + v1) - (v3*126)) - (v4*32), v1 + 22), 14), 7) + -16) + (18 - max(min(((v0*8) + v1) - min(((v2 + v1) - (v3*126)) - (v4*32), v1 + 22), 14), 7))) - 1))"
"(((((((uint1)1 && ((v0 + -4) <= (v0 + -4))) && ((v0 + 20) >= (v0 + 20))) && (((((min(v1*34, 33) + v2) + v3) + 0) + 5) <= (((min(v1*34, 33) + v2) + v3) + -4))) && (((((min(v1*34, 33) + v2) + v3) + 3) + 5) >= (((min(v1*34, 33) + v2) + v3) + 5))) && (0 <= 0)) && (2 >= 2))"
"(((((((uint1)1 && ((v0 + v1) <= (v0 + v1))) && ((v0 + v1) >= (v0 + v1))) && (0 <= 0)) && (0 >= 0)) && ((min(v2*4, 133) + 0) <= (min(v2*4, 133) + 0))) && ((min(v2*4, 133) + 3) >= (min(v2*4, 133) + ((4 + 0) - 1))))"
"(max(min(min(min(min(((v1 + v2)/4) + 1, ((v1 + v2)/4) + 1), ((v1 + v2) + -2)/4), ((v1 + v2) + -2)/4), (((v3*8) + -3) + 105) - 1) + 1, min(max((v2/4) + 2, (v3*8) + -3), 105 + ((v3*8) + -3))) <= min(max((v2/4) + 2, (v3*8) + -3), 105 + ((v3*8) + -3)))"
"(max(min((v1 + v2) + -1, (((v4*16) + -36) + ((min(v3, -1)*16) + 48)) - 1) + 1, min(max(v2, (v4*16) + -36), ((min(v3, -1)*16) + 48) + ((v4*16) + -36))) <= min(max(v2, (v4*16) + -36), ((min(v3, -1)*16) + 48) + ((v4*16) + -36)))"
"(((((((uint1)1 && (((0 + (min(v0, 4) + v1)) + -4) <= (0 + ((min(v0, 4) + v1) + -4)))) && (((3 + ((((max(v0, 4) + -1)/4)*4) + (min(v0, 4) + v1))) + -4) >= (((4 + 0) - 1) + ((v0 + v1) + -4)))) && ((v2 + v3) <= (v2 + v3))) && ((v2 + v3) >= (v2 + v3))) && (v4 <= v4)) && (v4 >= v4))"
"(max(0, min(((max(min(v0*8, 113), -11) - max(min(v0*8, 125), 1)) + 11)/2, (0 + ((v1/2) + 7)) - 1) + 1) <= 0)"
((((v0*-8)/4)*4) == (v0*-8))
(((((v0*8) + v1)*4) + 1) <= (((((v0*8) + (v1 - 1))*4) + -5) - 1))
(((v0 + 686)/672) != 0)
(((((((uint1)1 && ((((((v0*8) + v1)*4) + v2) + 0) <= ((((v0*8) + v1)*4) + v2))) && ((((((v0*8) + v1)*4) + v2) + 3) >= (((((v0*8) + v1)*4) + v2) + 3))) && ((v3/8) <= (v3/8))) && (((v3 + 132)/8) >= ((v3 + 132)/8))) && (v4 <= v4)) && (v4 >= v4))
"(0 == ((0 + (253 - max(min(v0*32, 253), 221))) - 1))"
"(max(min(min(min(min(min(min(min(min(min((v5/125) + -1, (v5/125) + -1), (min(((((min(v3 + v4, 1997) + 6)/4)*4) - v2) + 124, v5)/125) + -1), (min((((min(v3 + v4, 1995)/4)*4) - v2) + 132, v5)/125) + -1), (1750 - v2)/125), (1750 - v2)/125), (1906 - v2)/125), min(min(15 - (v2/125), (v5/125) + -1), ((((((v3 + v4) + 5)/4)*4) - v2) + -1)/125)), min(min(15 - (v2/125), (v5/125) + -1), ((((((v3 + v4) + 7)/4)*4) - v2) + -1)/125)), (0 + ((v5 + 124)/125)) - 1) + 1, min(max(max(max(max(max(0 - (v2/125), ((((v4/4)*4) - v2) + 132)/125), (((((v4 + 5)/4)*4) - v2) + 124)/125), (((((v4 + 6)/4)*4) - v2) + 124)/125), (((((v4 + 7)/4)*4) - v2) + 124)/125), 0), ((v5 + 124)/125) + 0)) <= min(max(max(max(max(max(0 - (v2/125), ((((v4/4)*4) - v2) + 132)/125), (((((v4 + 5)/4)*4) - v2) + 124)/125), (((((v4 + 6)/4)*4) - v2) + 124)/125), (((((v4 + 7)/4)*4) - v2) + 124)/125), 0), ((v5 + 124)/125) + 0))"
(0 == ((0 + ((((((v0 + v1) % 250) + 124)/250)*16) + 27)) - 1))
((v0 + -10) == (((v0 + -10) + (-16 + 17)) - 1))
"(((min((v0*16) + (((((min(v1, 128) + v2) + -128)/250)*8) + -5), ((((v1 + v2) + -1)/250)*8) + -13)/8)*8) == min((v0*16) + (((((min(v1, 128) + v2) + -128)/250)*8) + -5), ((((v1 + v2) + -1)/250)*8) + -13))"
"((max(v0, 16) + 4) >= 0)"
((((v0*36)/4)*4) == (v0*36))
((((v0*-84)/4)*4) == (v0*-84))
"(max(((v0*4) + v1) + v4, max(((v0*4) + v1) + v4, v5)) >= (min((((v0 - 1)*4) + v1) + v2, min((((v0 - 1)*4) + v1) + v2, v3)) + 1))"
(((v0 + v1) + -2) < (((v0 + 1) + v1) + -7))
(((((((uint1)1 && ((((((v0*2) + v1)*4) + v2) + 0) <= ((((v0*2) + v1)*4) + v2))) && ((((((v0*2) + v1)*4) + v2) + 3) >= (((((v0*2) + v1)*4) + 3) + v2))) && ((((v3*8) + v4) + v5) <= (((v3*8) + v4) + v5))) && ((((v3*8) + v4) + v5) >= (((v3*8) + v4) + v5))) && (v6 <= v6)) && (v6 >= v6))
"(max(min(min(min(min(min((((v6 + v5) - max(min(v3, 2001), 2)) + -6)/8, (((v6 + v5) - max(min(v3, 2001), 2)) + -6)/8), (((v6 + v5) - max(min(v3, 2001), 2)) + 1)/8), (((v6 + v5) - max(min(v3, 2001), 2)) + 1)/8), ((max(min(v2 + v3, 1997), -2) - max(min(v3, 2001), 2)) + -3)/8), (0 + ((v4 + 12)/8)) - 1) + 1, min(max(((v5 - max(min(v3, 2001), 2)) + 9)/8, 0), ((v4 + 12)/8) + 0)) <= min(max(((v5 - max(min(v3, 2001), 2)) + 9)/8, 0), ((v4 + 12)/8) + 0))"
"(max(min(499, ((v1/4) + 32) - 1) + 1, min(max(0, v1/4), 32 + (v1/4))) <= min(max(0, v1/4), 32 + (v1/4)))"
"(((((((uint1)1 && ((((0*4) + 0) + ((min(max(v0*500, -6), (v0*500) + 244) + v1) + 1)) <= (-5 + ((v0*500) + v1)))) && ((((63*4) + 3) + (min((((min(v0*500, -6) + 505)/256)*256) + (max(v0*500, -6) + v1), ((v0*500) + v1) + 244) + 1)) >= (1 + (((v0*500) + v1) + 499)))) && ((0 + (v2 + -5)) <= (-5 + v2))) && ((32 + (v2 + 93)) >= (1 + (v2 + 124)))) && (0 <= 0)) && (1 >= 1))"
((v0 + -258) == (((v0 + -258) + 265) - 1))
"(max(min(min(1999, min(v2 + v3, 2000) + -1), ((v4 + -10) + (min(((v5 + v6) - (v7*65)) - ((v8*252) + v5), 50) + 18)) - 1) + 1, min(max(max(0, max(v3, 0)), v4 + -10), (min(((v5 + v6) - (v7*65)) - ((v8*252) + v5), 50) + 18) + (v4 + -10))) <= min(max(max(0, max(v3, 0)), v4 + -10), (min(((v5 + v6) - (v7*65)) - ((v8*252) + v5), 50) + 18) + (v4 + -10)))"
"(((v0*4) + -44) == ((((v0*4) + -44) + ((min((max(min((((v1 + v2) + 7)/8)*2, 497), -2) - (v3*32)) - max(min((v2/8)*2, 509), 10), 19)*4) + 56)) - 1))"
"(((((((uint1)1 && ((((max(-2*4, -5) + v0) + 0) + 3) <= (v0 + -2))) && ((((max(7*4, -5) + v0) + 3) + 3) >= (v0 + 34))) && (((((v1*250) + v2) + v3) + 3) <= ((((v1*250) + v2) + v3) + -2))) && (((((v1*250) + v2) + v3) + 3) >= ((((v1*250) + v2) + v3) + 3))) && (0 <= 0)) && (0 >= 0))"
"(max(((v0 - v1) + 1)/4, 0) >= ((max(((v0 - v1) + 1)/4, 0) + ((max((v0 - v1)/4, -1) - max(((v0 - v1) + 1)/4, 0)) + 1)) - 1))"
"(((((((uint1)1 && (((min(v0*2, 255) + v1) + v2) <= ((min(v0*2, 255) + v1) + v2))) && (((min(v0*2, 255) + v1) + v2) >= ((min(v0*2, 255) + v1) + v2))) && ((v3 + v4) <= (v3 + v4))) && ((v3 + v4) >= (v3 + v4))) && ((min(v5*4, 14) + 0) <= (min(v5*4, 14) + 0))) && ((min(v5*4, 14) + 3) >= (min(v5*4, 14) + ((4 + 0) - 1))))"
"(((((((uint1)1 && ((0 + ((min(v0*32, 220) + (v1*4)) + v2)) <= ((min(v0*32, 220) + (v1*4)) + v2))) && ((3 + ((min(v0*32, 220) + (v1*4)) + v2)) >= (((min(v0*32, 220) + (v1*4)) + v2) + 3))) && ((v3/4) <= (v3/4))) && (((v3/4) + 32) >= ((v3/4) + 32))) && (v4 <= v4)) && (((v5 + v4) + -1) >= ((v5 + v4) - 1)))"
"(((min((v0*22) + (((v1/250)*8) + -5), ((((v2 + v1) + -1)/250)*8) + -19)/8)*8) == min((v0*22) + (((v1/250)*8) + -5), ((((v2 + v1) + -1)/250)*8) + -19))"
"(max(min(min(v1 + v2, 2000) + -1, (v3 + 125) - 1) + 1, min(max(max(max(max(0, 0), max(v2, 0)), max(v2, 0)), v3), 125 + v3)) <= min(max(max(max(max(0, 0), max(v2, 0)), max(v2, 0)), v3), 125 + v3))"
"(max(min(2009 - ((v0*673) + v1), (0 + 673) - 1) + 1, min(max(10 - ((v0*673) + v1), 0), 673 + 0)) <= min(max(10 - ((v0*673) + v1), 0), 673 + 0))"
"((max(((((241 - max(v0*8, 242))/4)*4) + ((v0*8) + v1)) - (min(v0*8, 242) + v1), -2) + 18) <= 1024)"
"((v0 + -1) == (((v0 + -1) + (13 - max((v1 - v2)*8, 5))) - 1))"
(((((((uint1)1 && (((((0*4) + ((v1*16) + ((v2*32) + v3))) + 0) + -3) <= (((((v2*32) + v3) + (v1*16)) + -2) + -1))) && (((((5*4) + ((v1*16) + ((v2*32) + v3))) + 3) + -3) >= (((((v2*32) + v3) + ((v1*16) + 15)) + ((6 + -2) - 1)) + -1))) && ((-2 + v4) <= (-2 + v4))) && ((((6 + -2) - 1) + v4) >= (((6 + -2) - 1) + v4))) && (v5 <= v5)) && (v5 >= v5))
((((((v0*500) + v1) + v2)/8) + 1) < ((((v0*500) + (v1 + 1)) + v2)/8))
"(max(min(min((max(min(((v1 + v2) + 47)/16, 124), 0) - v0) + 2, 126 - v0), (0 + 4) - 1) + 1, min(max(2 - v0, 0), 4 + 0)) <= min(max(2 - v0, 0), 4 + 0))"
"(max(0, min(9 - ((v0 % 3)*4), (0 + 4) - 1) + 1) <= 0)"
"(max(0, min(3, (0 + (((v0 % 8) + 635)/128)) - 1) + 1) <= 0)"
(((((v0*2) + v1)*16) + 15) < (((v0*2) + (v1 + 1))*16))
(((((((uint1)1 && (((v0 + v1) % 8) <= ((v0 + v1) % 8))) && (((v0 + v1) % 8) >= ((v0 + v1) % 8))) && ((((((v2*2) + 0)*4) + 0) + -1) <= ((((((v2*2) + 0)*4) + 0) + -2) + 1))) && ((((((v2*2) + 3)*4) + 3) + -1) >= ((((((v2*2) + ((2 + 0) - 1))*4) + ((4 + 0) - 1)) + ((6 + -2) - 1)) + 1))) && (v3 <= v3)) && (v3 >= v3))
"(((v0*4) + -17) == ((((v0*4) + -17) + ((min(((((v1 + v2) + 3)/4) - (v3*251)) - (v2/4), 250)*4) + 24)) - 1))"
"(((((((uint1)1 && ((0 + ((min(v0*252, 248) + (v1*4)) + v2)) <= ((min(v0*252, 248) + (v1*4)) + v2))) && ((3 + ((min(v0*252, 248) + (v1*4)) + v2)) >= (((min(v0*252, 248) + (v1*4)) + v2) + 3))) && ((v3/8) <= (v3/8))) && (((v3 + 132)/8) >= ((v3 + 132)/8))) && (v4 <= v4)) && (((v5 + v4) + -1) >= ((v5 + v4) + -1)))"
((((v0*2) + 45)/33) != 0)
"(((((((uint1)1 && ((0 + ((min(v0, -126) + ((min(v1, 1000) + v2)/8)) + -4)) <= (max((min(v1, 1000) + v2)/8, (((min(v1, 1000) + v2)/8) + v0) - max(v0, -124)) + -130))) && ((3 + ((((min(v1, 1000) + v2)/8) + v0) + -4)) >= ((((min(v1, 1000) + v2)/8) + v0) + -1))) && ((v3 + -5) <= (((-20 + v3) + 0) + 15))) && ((v3 + 15) >= (((0 + v3) + 3) + 15))) && ((v4*9) <= (v4*9))) && (((v4*9) + 8) >= ((v4*9) + 8)))"
"((v0 + 1) < (min(max(min(v1*4, 1999), (v0 + 1) + 4), v0 + 1) + -3))"
"(((((((uint1)1 && (((((0*4) + ((v0*4) + (max(v1*8, -5) + v2))) + 0) + 3) <= ((0 + ((v0*4) + (max(v1*8, -5) + v2))) + 3))) && (((((0*4) + ((v0*4) + (max(v1*8, -5) + v2))) + 3) + 3) >= ((((4 + 0) - 1) + ((v0*4) + (max(v1*8, -5) + v2))) + 3))) && ((v3 + -65) <= ((0 + v3) + -65))) && ((v3 + -3) >= ((((63 + 0) - 1) + v3) + -65))) && (0 <= 0)) && (0 >= 0))"
"(max(0, min(min((((v0 + v1) - max(min(v2, 1999), 0))/4) + -1, ((max(min((v3*8) + v4, min(v5 + v4, 2000) + -8), -7) - max(min((v3*8) + v4, min(v5 + v4, 2007) + -8), 0))/4) + 1), (0 + ((v6 + 11)/4)) - 1) + 1) <= 0)"
(((((((uint1)1 && (((((0*4) + v0) + 0) + -4) <= ((((0*4) + 0) + v0) + -4))) && (((((124*4) + v0) + 3) + -4) >= ((((124*4) + ((4 + 0) - 1)) + v0) + -4))) && (v1 <= v1)) && (v1 >= v1)) && (0 <= 0)) && (((25 + 0) - 1) >= ((25 + 0) - 1)))
(((v0*4) + 1) < (((v0 + 1)*4) + -5))
"(((((((uint1)1 && (v3 <= v3)) && (v3 >= v3)) && ((((0*4) + v2) + 0) <= v2)) && ((((((32 - max(v1*8, 25))/4)*4) + v2) + 3) >= (min(v0/4, (((max(v1*2, 7)*-4) - max(v1*8, 29)) + v2) + 32) + 32))) && (0 <= 0)) && (47 >= ((48 + 0) - 1)))"
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && ((0 + v2) <= (0 + v2))) && ((1 + (v2 + 123)) >= (((125 + 0) - 1) + v2))) && (v3 <= v3)) && (((v4 + v3) + -1) >= ((v4 + v3) - 1)))
((((v0 + v1) + v2) + 5) <= ((((v0 - 1) + v1) + v2) - 1))
"((((min(min((v2*16) + (((v1/250)*4)*16), ((((v3 + v1) + -1)/250)*64) + 105)*4, (v2*64) + ((((v1/250)*4)*64) + 3))*-1)/4)*4) == (min(min((v2*16) + (((v1/250)*4)*16), ((((v3 + v1) + -1)/250)*64) + 105)*4, (v2*64) + ((((v1/250)*4)*64) + 3))*-1))"
((v0 + -3) >= (((v0 + -3) + 2) - 1))
"((((max(min(min((v4*4) + ((v3/8) + -5), ((v2 + v3) + -17)/8)*2, 491), -8) + (max(min(min((v4*4) + ((v3/8) + -5), ((v2 + v3) + -17)/8)*2, 499), 0)*-1))/4)*4) == (max(min(min((v4*4) + ((v3/8) + -5), ((v2 + v3) + -17)/8)*2, 491), -8) + (max(min(min((v4*4) + ((v3/8) + -5), ((v2 + v3) + -17)/8)*2, 499), 0)*-1)))"
(((((v0 % ((v1 + 136)/130))*130)/2)*2) == ((v0 % ((v1 + 136)/130))*130))
"((1 - max(v0, 1)) >= 2)"
((v0 + 2) < ((v0 + 1) + -10))
((((v0*256) + 494)/72) != 0)
(((v0/85) + 1) != 0)
(((v0*4) + -177) == ((((v0*4) + -177) + 63) - 1))
(((v0/3) + 1) != 0)
(((((((uint1)1 && (((0 + (v0/16)) + -2) <= (0 + ((v0/16) + -2)))) && (((3 + ((v0/16) + ((((v0 % 16) + 627)/64)*4))) + -2) >= (3 + (((v0/16) + ((((v0 % 16) + 499)/64)*4)) + 3)))) && ((((v1/125)*8) + -1) <= (-2 + (((v1/125)*8) + 1)))) && (((((((v1 % 125) + 124)/125) + (v1/125))*8) + 11) >= (((6 + -2) - 1) + (((((((v1 % 125) + 124)/125)*8) + 8) + (((v1/125)*8) + 1)) - 1)))) && (v2 <= v2)) && (v2 >= v2))
(((v0/64) + 1) != 0)
"(((((((uint1)1 && (((((0*4) + ((v0*16) + v1)) + 0) + -7) <= (((v0*16) + v1) + -7))) && (((((0*4) + (((v0*16) + v1) + 12)) + 3) + -7) >= (((v0*16) + v1) + 8))) && ((max(min(v2*4, 1999), v3 + 6) + -5) <= (v3 + -2))) && ((v3 + 1) >= (v3 + 1))) && (v4 <= v4)) && (v4 >= v4))"
"(((((((max(v0*16, 9) + (v0*-16)) + ((min(v1*32, 93) + (v2 + min(v3*125, v4 + -125))) + -25))/4)*-4)/4)*4) == ((((max(v0*16, 9) + (v0*-16)) + ((min(v1*32, 93) + (v2 + min(v3*125, v4 + -125))) + -25))/4)*-4))"
"(((((((uint1)1 && ((((max(-1, 0)*16) + max(-5, 0)) + ((v0*64) + v1)) <= (((((v0*16) + 0)*4) + v1) + 0))) && ((((1*16) + 15) + (((v0*64) + v1) + 32)) >= (((((v0*16) + ((16 + 0) - 1))*4) + v1) + 3))) && (max((min(v2, 4) + v3) + -9, (min(v2, 4) + v3) + -4) <= ((min(v2, 4) + v3) + -4))) && (((v2 + v3) + -1) >= ((v2 + v3) + -1))) && ((min(0*4, 21) + 0) <= 0)) && ((min(6*4, 21) + 3) >= 24))"
((-14 - (v0*2)) > (499 - (v0*2)))
"(0 == ((0 + (44 - (max(min(v0, 11), 10)*4))) - 1))"
((((v0*-280)/4)*4) == (v0*-280))
"(max(min(min(min(min(((v2 - ((v3*64) + v4)) + -11)/12, ((min(((v5 + v6) + -1)/4, ((v7*252) + (min(v3*64, 188) + (v6/4))) + 63) - ((v3*64) + ((v6/4) + (v7*252)))) + -11)/12), (488 - ((v3*64) + ((v6/4) + (v7*252))))/12), (1952 - (((v3*64) + v4)*4))/48), (0 + ((v8/12) + 1)) - 1) + 1, min(max(max(0 - ((((v6/4) + (v3*64))/12) + (v7*21)), 0 - (((v3*64) + v4)/12)), 0), ((v8/12) + 1) + 0)) <= min(max(max(0 - ((((v6/4) + (v3*64))/12) + (v7*21)), 0 - (((v3*64) + v4)/12)), 0), ((v8/12) + 1) + 0))"
(((((v0*3) + v1) + v2) + -3) < ((((v0*3) + (v1 + 1)) + v2) + -3))
"((min((v0 - v1)*256, 352) + -352) > 2)"
"(max(min(min(min((((((v2 + v3) + -1)/250)*64) - v4) + 88, (((v0 + v1)/4) - v4) + 68), (((v0 + v1) + 266)/4) - v4), (0 + 179) - 1) + 1, min(max(((v1/4) - v4) + 69, 0), 179 + 0)) <= min(max(((v1/4) - v4) + 69, 0), 179 + 0))"
(((v0 + 132)/127) != 0)
"(((((((uint1)1 && ((0 + (min(v0*16, 984) + v1)) <= (min(v0*16, 984) + v1))) && ((3 + ((min(v0*16, 984) + v1) + 12)) >= ((min(v0*16, 984) + v1) + 15))) && ((v2/8) <= (v2/8))) && (((v2 + 132)/8) >= ((v2 + 132)/8))) && (v3 <= v3)) && (v3 >= v3))"
"(max(min(min(1999, min(v1 + v2, 2000) + -1), ((v3 + -2) + 130) - 1) + 1, min(max(max(0, max(v2, 0)), v3 + -2), 130 + (v3 + -2))) <= min(max(max(0, max(v2, 0)), v3 + -2), 130 + (v3 + -2)))"
"(((min(v0, 494) + v1) + -505) >= ((((min(v0, 494) + v1) + -505) + (max(v0, 494) + 18)) - 1))"
(((((((uint1)1 && ((((((0*4) + v0) + 0)*4) + 0) <= (v0*4))) && ((((((62*4) + v0) + 3)*4) + 3) >= ((v0*4) + 1007))) && (v1 <= v1)) && (v1 >= v1)) && (0 <= 0)) && (19 >= ((20 + 0) - 1)))
"(max((min(v0, min(v0, v1)) + (v2*8)) + -7, max(v3, max(v3, v4)) + (v5*8)) >= ((min(v0, min(v0, v1)) + ((v2 - 1)*8)) + 1))"
(((v0 + 506)/502) != 0)
(((v0*2) + v1) >= ((((v0 - 1)*2) + v1) + 1))
"(((((((uint1)1 && ((0 + (min(v0*32, 968) + v1)) <= (min(v0*32, 968) + v1))) && ((3 + ((min(v0*32, 968) + v1) + 28)) >= ((min(v0*32, 968) + 31) + v1))) && ((0 + v2) <= (0 + v2))) && ((((125 + 0) - 1) + v2) >= (((125 + 0) - 1) + v2))) && (v3 <= v3)) && (v3 >= v3))"
(((((((uint1)1 && ((0 + ((v0*8) + v1)) <= ((v0*8) + v1))) && ((3 + (((v0*8) + v1) + 4)) >= (((v0*8) + 7) + v1))) && ((((v2*8) + 0) + v3) <= (((v2*8) + 0) + v3))) && ((((v2*8) + ((8 + 0) - 1)) + v3) >= (((v2*8) + ((8 + 0) - 1)) + v3))) && (v4 <= v4)) && (v4 >= v4))
(((((((uint1)1 && (((((v0*4) + v1) + -2) + 0) <= ((((v0*4) + 0) + v1) + -2))) && (((((v0*4) + v1) + ((11 + -2) - 1)) + 3) >= ((((v0*4) + ((4 + 0) - 1)) + v1) + ((11 + -2) - 1)))) && (0 <= 0)) && (0 >= 0)) && ((v2*8) <= (v2*8))) && (((v2*8) + 7) >= ((8 + (v2*8)) - 1)))
"(((((((uint1)1 && ((((v0 + -5) + 0) + 3) <= ((v0 + 0) + max(-5, -2)))) && ((((v0 + 3) + 3) + 3) >= ((v0 + ((4 + 0) - 1)) + 3))) && ((((v1*8) + v2) + 64) <= (v2 + ((v1*8) + 1)))) && ((((v1*8) + v2) + 64) >= (v2 + ((64 + ((v1*8) + 1)) - 1)))) && ((v3*32) <= ((v3*32) + 0))) && (((v3*32) + 31) >= ((v3*32) + ((32 + 0) - 1))))"
"(max(min(min(((v1 + v2)/4) + 1, ((v1 + v2) + -2)/4), ((((v3/8)*64) + -3) + 89) - 1) + 1, min(max((v2/4) + 2, ((v3/8)*64) + -3), 89 + (((v3/8)*64) + -3))) <= min(max((v2/4) + 2, ((v3/8)*64) + -3), 89 + (((v3/8)*64) + -3)))"
(((((v0*2) + v1)*8) + -4) >= ((((((v0*2) + v1)*8) + -4) + 8) - 1))
(((((((uint1)1 && (((((0*4) + ((v0*4) + ((v1*68) + v2))) + 0) + 7) <= (((v0*4) + ((v1*68) + v2)) + 7))) && (((((0*4) + ((v0*4) + ((v1*68) + v2))) + 3) + 7) >= ((((v0*4) + ((v1*68) + v2)) + 3) + 7))) && (v3 <= v3)) && (v3 >= v3)) && (((v4*16) + v5) <= ((v4*16) + v5))) && (((v4*16) + v5) >= ((v4*16) + v5)))
"(max(0, min(min((((v2 + v3) - max(min((v0*4) + v1, 1999), 0))/4) + -1, (max(min((v0*4) + v1, 1996), -3) - max(min((v0*4) + v1, 1999), 0))/4), (0 + ((v4 + 7)/4)) - 1) + 1) <= 0)"
"(((((((uint1)1 && ((((max(v0*4, -5) + v1) + 0) + 3) <= (-2 + ((v0*4) + v1)))) && ((((max(v0*4, -5) + v1) + 3) + 3) >= (3 + (((v0*4) + v1) + 3)))) && (((v2*8) + -1) <= ((((((v2*2) + 0)*4) + 0) + -2) + 1))) && (((v2*8) + 11) >= ((((((v2*2) + 1)*4) + 3) + 3) + 1))) && (0 <= 0)) && (((64 + 0) - 1) >= ((64 + 0) - 1)))"
"(((((min(v0*63, 62) + v1) + v2)/8) + 1) < (((min(v0*63, 62) + (v1 + 1)) + v2)/8))"
"(max(min(min(1999, min(v1 + v2, 2000) + -1), (v3 + 64) - 1) + 1, min(max(max(max(max(max(max(0, 0), 0), max(v2, 0)), max(v2, 0)), max(v2, 0)), v3), 64 + v3)) <= min(max(max(max(max(max(max(0, 0), 0), max(v2, 0)), max(v2, 0)), max(v2, 0)), v3), 64 + v3))"
((((v0 + v1)/4) + 1) <= ((((v0 - 1) + v1)/4) - 1))
((0 - v0) > (1999 - v0))
"(((min(v0, 249)*8) + -4) >= ((((min(v0, 249)*8) + -4) + 8) - 1))"
"(((((((uint1)1 && ((0 + ((v0*64) + v1)) <= ((v0*64) + v1))) && ((3 + (((v0*64) + v1) + 60)) >= (((v0*64) + 63) + v1))) && (((min(v2*63, 62) + 0) + v3) <= ((min(v2*63, 62) + 0) + v3))) && (((min(v2*63, 62) + ((63 + 0) - 1)) + v3) >= ((min(v2*63, 62) + ((63 + 0) - 1)) + v3))) && (v4 <= v4)) && (v4 >= v4))"
(((((((uint1)1 && ((-10 + v0) <= (-10 + v0))) && ((((13 + -10) - 1) + v0) >= (((13 + -10) - 1) + v0))) && ((((0*4) + ((v1*64) + v2)) + 0) <= ((v1*64) + v2))) && ((((0*4) + (((v1*64) + v2) + 60)) + 3) >= (((v1*64) + v2) + 63))) && (v3 <= v3)) && (v3 >= v3))
(((((((uint1)1 && ((v0 + -75) <= (v0 + -75))) && ((v0 + -3) >= (v0 + -3))) && ((((((v1*67) + v2) + v3) + 0) + -2) <= ((((v1*67) + v2) + v3) + -11))) && ((((((v1*67) + v2) + v3) + 3) + -2) >= ((((v1*67) + v2) + v3) + -2))) && (0 <= 0)) && (2 >= 2))
"(max(min((((((v0 + v1)*4) + v2) + (v3 + v4)) + v5) + -5, v6) + v7, ((((v1*4) + v2) + v4) + v5) + v8) >= ((min((((((v0 + v1)*4) + v2) + (v3 + v4)) + v5) + -5, v6) + (v7 - 1)) + 1))"
"(0 == ((0 + (35 - (max(min(v0, 5), 4)*7))) - 1))"
"((max(min(v0, -443), -506) + 441) >= (((max(min(v0, -443), -506) + 441) + (-439 - max(min(v0, -443), -506))) - 1))"
"(((((((uint1)1 && ((((((v0*4) + v1) + -5) + 0) + 3) <= ((((v0*4) + v1) + 0) + max(-5, -2)))) && ((((((v0*4) + v1) + 3) + 3) + 3) >= ((((v0*4) + v1) + ((4 + 0) - 1)) + 3))) && ((((((((v2*2) + v3)*4) + v4) + v5) + 1) % 8) <= (((((((v2*2) + v3)*4) + v4) + v5) + 1) % 8))) && ((((((((v2*2) + v3)*4) + v4) + v5) + 1) % 8) >= (((((((v2*2) + v3)*4) + v4) + v5) + 1) % 8))) && (((v6*32) + v7) <= ((v6*32) + v7))) && (((v6*32) + v7) >= ((v6*32) + v7)))"
((-14 - (v0*2)) == (499 - (v0*2)))
"(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (((min(v2*2, 249) + v3) + v4) <= ((min(v2*2, 249) + v3) + v4))) && (((min(v2*2, 249) + v3) + v4) >= ((min(v2*2, 249) + v3) + v4))) && (v5 <= v5)) && (v5 >= v5))"
((((v0*4) + 118)/63) != 0)
"(((((((uint1)1 && (((-33 + v0) + 31) <= ((0 + v0) + max(-33, -2)))) && (((3 + v0) + 31) >= ((((32 + 0) - 1) + v0) + 3))) && (((((((v1*2) + v2)*4) + -2) + 0) + 1) <= ((((((v1*2) + v2)*4) + 0) + -2) + 1))) && (((((((v1*2) + v2)*4) + ((6 + -2) - 1)) + 3) + 1) >= ((((((v1*2) + v2)*4) + ((4 + 0) - 1)) + ((6 + -2) - 1)) + 1))) && ((((v3*2) + v4)*16) <= (((v3*2) + v4)*16))) && (((((v3*2) + v4)*16) + 15) >= ((((v3*2) + v4)*16) + 15)))"
((((v0 + v1) + v2) + -133) >= (((((v0 + v1) + v2) + -133) + 10) - 1))
"(((max(min(v0*2, 569), 70)*4) + -284) == ((((max(min(v0*2, 569), 70)*4) + -284) + ((v1*4) + 296)) - 1))"
"(max(min(min(min(min(min(min(min(((2006 - v6)/4) + (v8*-126), ((2006 - v6)/4) + (v8*-126)), ((v7 + 14)/4) - (v8*126)), ((v7 + 14)/4) - (v8*126)), ((v7 + 14)/4) - (v8*126)), ((min(v4 + v5, min(v6 + v7, 1992) + 8) - ((v8*504) + v6)) + 6)/4), ((min(v4 + v5, min(v6 + v7, 1995) + 5) - ((v8*504) + v6)) + 9)/4), (0 + ((min(v9, 494) + 21)/4)) - 1) + 1, min(max(max(max(max((((6 - v6)/4) + (v8*-126)) + 1, (((9 - v6)/4) + (v8*-126)) + 1), (((9 - v6)/4) + (v8*-126)) + 1), max(((v5 - ((v8*504) + v6)) + 13)/4, (((9 - v6)/4) + (v8*-126)) + 1)), 0), ((min(v9, 494) + 21)/4) + 0)) <= min(max(max(max(max((((6 - v6)/4) + (v8*-126)) + 1, (((9 - v6)/4) + (v8*-126)) + 1), (((9 - v6)/4) + (v8*-126)) + 1), max(((v5 - ((v8*504) + v6)) + 13)/4, (((9 - v6)/4) + (v8*-126)) + 1)), 0), ((min(v9, 494) + 21)/4) + 0))"
"((((min((v0*4) + ((v1*2)*4), ((((v2 + v3) + -1)/250)*64) + 101)*4)/4)*4) == (min((v0*4) + ((v1*2)*4), ((((v2 + v3) + -1)/250)*64) + 101)*4))"
"((-6 - max(v0, 0)) >= (((-6 - max(v0, 0)) + (max(v0, 0) + 8)) - 1))"
((((v0*-4)/4)*4) == (v0*-4))
(((v0*4) + 3) <= ((((v0 - 1)*4) + -7) - 1))
"((max(max(min(v0*4, 61) + v1, min(((v0*4) + v1) - max(v0*4, 61), v1) + 61) - ((v0*4) + v1), 0) + 16) <= 1024)"
((v0*3) >= (((v0*3) + 3) - 1))
"(((((((uint1)1 && ((-5 + v0) <= (-5 + v0))) && ((((6 + -5) - 1) + v0) >= (((6 + -5) - 1) + v0))) && ((-5 + v1) <= (-5 + v1))) && ((((6 + -5) - 1) + v1) >= (((6 + -5) - 1) + v1))) && (((v2*4) + 0) <= (v2*4))) && (((v2*4) + 3) >= (min(v2*4, 5) + 3)))"
"(((((((uint1)1 && (v1 <= v1)) && (v1 >= v1)) && (((((0*4) + 0) + ((min(v2, 1000) + v3)/4)) + -250) <= ((0 + ((min(v2, 1000) + v3)/4)) + -250))) && (((((7*4) + 3) + (((min(v2, 1000) + v3)/4) + (((v0 + 250)/32)*32))) + -250) >= ((((4 + 0) - 1) + (((min(v2, 1000) + v3)/4) + (((v0 + 250)/4)*4))) + -250))) && ((v4*16) <= ((v4*16) + 0))) && (((v4*16) + 15) >= ((v4*16) + ((16 + 0) - 1))))"
(((((((uint1)1 && (((v0 + v1) + 0) <= ((v0 + v1) + -9))) && (((v0 + v1) + 3) >= (v0 + v1))) && ((((v2*128) + v3) + -6) <= (((v2*128) + v3) + -6))) && ((((v2*128) + v3) + 130) >= (((v2*128) + v3) + 130))) && (0 <= 0)) && (2 >= 2))
"(((((((uint1)1 && (((-64 + v0) + 62) <= ((0 + v0) + max(-64, -2)))) && (((3 + v0) + 62) >= ((((63 + 0) - 1) + v0) + 3))) && ((((((((v1/125)*2) + v2)*4) + -2) + 0) + 1) <= (((((((v1/125)*2) + v2)*4) + 0) + -2) + 1))) && ((((((((v1/125)*2) + v2)*4) + ((6 + -2) - 1)) + 3) + 1) >= (((((((v1/125)*2) + v2)*4) + ((4 + 0) - 1)) + ((6 + -2) - 1)) + 1))) && (v3 <= v3)) && (v3 >= v3))"
(((((((uint1)1 && (((((0*4) + v0) + 0) + -2) <= ((((0*4) + 0) + v0) + -2))) && (((((3*4) + v0) + 3) + -2) >= ((((((2 + 0) - 1)*4) + ((4 + 0) - 1)) + v0) + ((6 + -2) - 1)))) && ((-2 + (((v1/125)*8) + 1)) <= (-2 + (((v1/125)*8) + 1)))) && ((((6 + -2) - 1) + ((((v2*8) + 8) + (((v1/125)*8) + 1)) - 1)) >= (((6 + -2) - 1) + ((((v2*8) + 8) + (((v1/125)*8) + 1)) - 1)))) && (((v3*16) + v4) <= ((v3*16) + v4))) && (((v3*16) + v4) >= ((v3*16) + v4)))
(((((v0*500) + v1) + v2) + 4) < (((v0*500) + v1) + (v2 + 1)))
"(max(-1531 - (v0*256), (v0*256) + 422) >= 0)"
((v0/4) >= ((((v0 - 1)/4) + 1) + 1))
"(0 == ((0 + ((max(min((((v0 + v1) + 31)/4) - v2, 29), -3)*4) + 12)) - 1))"
(((((((uint1)1 && ((0 + ((((v1*8) + ((v2*2) + v3))*4) + v4)) <= (((v1*32) + (((v2*2) + v3)*4)) + v4))) && ((3 + ((((v1*8) + ((v2*2) + v3))*4) + v4)) >= (((v1*32) + ((((v2*2) + v3)*4) + 3)) + v4))) && (0 <= 0)) && (0 >= 0)) && (v5 <= v5)) && (v5 >= v5))
"(((((((uint1)1 && ((0 + (((min(v0, 8) + v1) + -40)/16)) <= ((0 + (((min(v0, 8) + v1) + -8)/16)) + -2))) && ((3 + ((((min(v0, 8) + v1) + 40)/16) + ((v2/4)*4))) >= ((((4 + 0) - 1) + ((((min(v0, 8) + v1) + -8)/16) + ((v2/4)*4))) + ((6 + -2) - 1)))) && ((-2 + v3) <= (-2 + v3))) && ((((6 + -2) - 1) + v3) >= (((6 + -2) - 1) + v3))) && (((v4*32) + v5) <= ((v4*32) + v5))) && (((v4*32) + v5) >= ((v4*32) + v5)))"
(((((((uint1)1 && ((0 + (v0/4)) <= (0 + (v0/4)))) && ((3 + ((v0/4) + 248)) >= (((4 + 0) - 1) + ((v0/4) + 248)))) && (0 <= 0)) && (0 >= 0)) && (((v1*16) + v2) <= ((v1*16) + v2))) && (((v1*16) + v2) >= ((v1*16) + v2)))
"((0 - max(v0, 0)) >= (((0 - max(v0, 0)) + (max(v0, 0) + 3)) - 1))"
(0 == ((0 + ((((v0 + v1) % 8) + 539)/32)) - 1))
(((((((uint1)1 && (((((0*4) + v0) + -2) + 0) <= (-2 + v0))) && (((((((64 + 0) - 1)*4) + v0) + ((4 + -2) - 1)) + 3) >= (((4 + -2) - 1) + (v0 + 255)))) && ((-2 + v1) <= (-2 + v1))) && ((((4 + -2) - 1) + v1) >= (((4 + -2) - 1) + v1))) && (v2 <= v2)) && (v2 >= v2))
"(((((min(min((v2*64) + ((v1/8)*64), (v3*8) + 193)*4, (v2*256) + (((v1/8)*256) + 3)) + -20)*-1)/4)*4) == ((min(min((v2*64) + ((v1/8)*64), (v3*8) + 193)*4, (v2*256) + (((v1/8)*256) + 3)) + -20)*-1))"
(((((v0*2) + v1) + v2)*4) >= ((((((v0*2) + v1) + v2)*4) + 4) - 1))
"(0 == ((0 + ((min((max(min(((v0 + v1) + 47)/16, 124), 0) - (v2*2)) - max(min(v1/16, 126), 2), -1)*4) + 12)) - 1))"
((-6 - (v0*2)) >= (499 - (v0*2)))
(0 == ((0 + ((v0*2) + 8)) - 1))
(((v0 + 6)/5) != 0)
"(((((((uint1)1 && ((v0 + 0) <= (0 + v0))) && ((v0 + 3) >= (((4 + 0) - 1) + v0))) && (((min(v1*4, 121) + v2) + v3) <= ((min(v1*4, 121) + v2) + v3))) && (((min(v1*4, 121) + v2) + v3) >= ((min(v1*4, 121) + v2) + v3))) && (v4 <= v4)) && (v4 >= v4))"
((((v0 + v1)*4) + -5) < ((((v0 + 1) + v1)*4) + -8))
"(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((15*4) + v0) + 3) >= (((15*4) + ((4 + 0) - 1)) + v0))) && (((min(v1*8, 117) + v2) + v3) <= ((min(v1*8, 117) + v2) + v3))) && (((min(v1*8, 117) + v2) + v3) >= ((min(v1*8, 117) + v2) + v3))) && (v4 <= v4)) && (v4 >= v4))"
"(((((((uint1)1 && ((0 + ((min(max(v0*32, -9), (v0*32) + 28) + v1) + 5)) <= ((0 + (((v0*32) + v1) + -9)) + 5))) && ((3 + (min((((min(v0*32, -9)/4)*4) + (max(v0*32, -9) + v1)) + 12, (v0*32) + v1) + 33)) >= ((3 + (((v0*32) + v1) + 68)) + 5))) && ((v2 + -4) <= ((-9 + v2) + 5))) && ((v2 + 12) >= ((7 + v2) + 5))) && (0 <= 0)) && (2 >= 2))"
(((((((uint1)1 && (((0 + (v0 + -5)) + 3) <= (v0 + -2))) && (((3 + (v0 + 996)) + 3) >= (v0 + 1002))) && (((v1 + v2) + 3) <= ((v1 + v2) + -2))) && (((v1 + v2) + 3) >= ((v1 + v2) + 3))) && (0 <= 0)) && (0 >= 0))
(((((((uint1)1 && (((((0*4) + ((v0*8) + ((v1*16) + v2)))*4) + 0) <= (((0 + ((v0*8) + ((v1*16) + v2)))*4) + 0))) && (((((1*4) + ((v0*8) + ((v1*16) + v2)))*4) + 15) >= (((7 + ((v0*8) + ((v1*16) + v2)))*4) + 3))) && (((v3*4) + v4) <= ((v3*4) + v4))) && (((v3*4) + v4) >= ((v3*4) + v4))) && (((0*4) + 0) <= 0)) && (((4*4) + 3) >= 19))
"((((v0*3) + (((v1 + v2)/4)*4)) + 83) == (((((v0*3) + (((v1 + v2)/4)*4)) + 83) + (50 - max(v0*3, 47))) - 1))"
((((v0/250) + -1) + (((v0 % 250) + 624)/250)) <= ((v0/250) + -1))
"(((v0*16) + -36) == ((((v0*16) + -36) + ((min((max(min(((v1 + v2) + 47)/16, 124), 0) - (v3*4)) - max(min(v2/16, 126), 2), 1)*16) + 48)) - 1))"
"(((min(v0*63, 62) + (v1 + v2)) + -10) == ((((min(v0*63, 62) + (v1 + v2)) + -10) + 81) - 1))"
"(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (v2 <= v2)) && (v2 >= v2)) && (max(min(v3, 2), 0) <= max(min(v3, 2), 0))) && (max(min(v3, 2), 0) >= max(min(v3, 2), 0)))"
(((v0 + 6)/4) != 0)
(((((v0 % ((v1 + 136)/130))*-130)/2)*2) == ((v0 % ((v1 + 136)/130))*-130))
(((((((uint1)1 && ((((((v0*4) + v1) + 0)*4) + 0) <= (((v0*4) + v1)*4))) && ((((((v0*4) + v1) + 3)*4) + 3) >= ((((v0*4) + v1)*4) + 15))) && (0 <= 0)) && (0 >= 0)) && (0 <= 0)) && (19 >= ((20 + 0) - 1)))
"(0 == ((0 + (9 - max(min(v0*5, 9), 4))) - 1))"
(((((((uint1)1 && (((((0*4) + v0) + 0) + -2) <= ((((0*4) + 0) + v0) + -2))) && (((((3*4) + v0) + 3) + -2) >= ((((((2 + 0) - 1)*4) + ((4 + 0) - 1)) + v0) + ((6 + -2) - 1)))) && ((-2 + v1) <= (-2 + v1))) && ((((6 + -2) - 1) + v1) >= (((6 + -2) - 1) + v1))) && (0 <= 0)) && (0 >= 0))
"(((((((uint1)1 && (((min(v0, 4) + v1) + -4) <= (0 + ((min(v0, 4) + v1) + -4)))) && (((v0 + v1) + -1) >= (((4 + 0) - 1) + ((v0 + v1) + -4)))) && ((0 + ((min(v2*32, 93) + (v3*8)) + v4)) <= ((min(v2*32, 93) + (v3*8)) + v4))) && ((3 + (((min(v2*32, 93) + (v3*8)) + v4) + 4)) >= (((min(v2*32, 93) + (v3*8)) + 7) + v4))) && (v5 <= v5)) && (((v6 + v5) + -1) >= ((v6 + v5) - 1)))"
((((v0*64) + 176)/72) != 0)
(((((((uint1)1 && (((v0 + v1) % 16) <= ((v0 + v1) % 16))) && (((v0 + v1) % 16) >= ((v0 + v1) % 16))) && ((((0*4) + ((v2*4) + ((v3*64) + v4))) + 0) <= ((v2*4) + ((v3*64) + v4)))) && ((((0*4) + ((v2*4) + ((v3*64) + v4))) + 3) >= (((v2*4) + ((v3*64) + v4)) + 3))) && (v5 <= v5)) && (v5 >= v5))
"(max(0, min(1, (0 + (((v0 % 8) + 763)/256)) - 1) + 1) <= 0)"
"(((max(max(min(((v0*8) + v1)*2, 491), -8) - max(min(((v0*8) + v1)*2, 499), 0), max(min(((v0*8) + v1)*2, 483), -16) - max(min(((v0*8) + v1)*2, 491), -8))*4) + 40) <= 1024)"
"(((((((uint1)1 && ((0 + ((v0*8) + v1)) <= ((v0*8) + v1))) && ((3 + (((v0*8) + v1) + 4)) >= (((v0*8) + v1) + 7))) && (min(v2 + -15, v3) <= min(v2 + -15, v3))) && (min(((((v2 - v3)/16)*16) + v3) + 15, v2) >= min(((((v2 - v3)/16)*16) + v3) + 15, v2))) && (0 <= 0)) && (2 >= 2))"
"(max(0, min(min((((v0 + v1) - max(min(v2, 1999), 0))/4) + -1, ((max(min((v3*500) + v4, min(v5 + v4, 2000) + -500), -499) - max(min((v3*500) + v4, min(v5 + v4, 2499) + -500), 0))/4) + 124), (0 + ((v6 + 503)/4)) - 1) + 1) <= 0)"
((v0 + 1) < ((v0 + 1) + -5))
((((v0*256) + 1530)/1108) != 0)
((((v0 + v1) + v2) + -2) >= (((((v0 - 1) + v1) + v2) + 3) + 1))
"(((min((min((((((min(v0*1000, v1 + -1000) + v2)/8)*-8) + min(v0*1000, v1 + -1000)) + ((v2 + 500) + 507))/8, 95)/4)*4, 61)/20)*20) == min((min((((((min(v0*1000, v1 + -1000) + v2)/8)*-8) + min(v0*1000, v1 + -1000)) + ((v2 + 500) + 507))/8, 95)/4)*4, 61))"
(((v0 + 10)/504) >= ((((v0 + 10)/504) + ((((v0 + 10) % 504) + 503)/504)) - 1))
((((v0*4) + v1) + 4) < ((v0*4) + (v1 + 1)))
(((((((uint1)1 && ((-2 + v0) <= (-2 + v0))) && ((((4 + -2) - 1) + v0) >= (((4 + -2) - 1) + v0))) && ((((((0*4) + v1) + -2) + 0) + -5) <= (-2 + (v1 + -5)))) && ((((((((33 + 0) - 1)*4) + v1) + ((4 + -2) - 1)) + 3) + -5) >= (((4 + -2) - 1) + (v1 + 125)))) && (v2 <= v2)) && (v2 >= v2))
(((((((uint1)1 && ((((0*500) + v0) + 0) <= (0 + v0))) && ((((1*500) + v0) + 499) >= (3 + (v0 + 996)))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (((0*4) + 0) <= 0)) && (((6*4) + 3) >= 24))
"(((((((uint1)1 && ((((min(v0*8, 55) + v1) + v2) + 5) <= (((min(v0*8, 55) + v1) + v2) + -4))) && ((((min(v0*8, 55) + v1) + v2) + 5) >= (((min(v0*8, 55) + v1) + v2) + 5))) && ((((max(-3*4, -9) + v3) + 0) + 5) <= (v3 + -4))) && ((((max(125*4, -9) + v3) + 3) + 5) >= (v3 + 508))) && (0 <= 0)) && (2 >= 2))"
(((((v0*125) + v1) + ((v2*63) + v3)) + 3) < ((((v2*63) + (v3 + 1)) + ((v0*125) + v1)) + -2))
"(max(((v0*8) + v1) + v4, max(((v0*8) + v1) + v4, v5)) >= (min((((v0 - 1)*8) + v1) + v2, min((((v0 - 1)*8) + v1) + v2, v3)) + 1))"
((v0/4) <= (((v0 - 1)/4) - 1))
"(max(min(499, (((v2*2) + -10) + ((min(v1, 15)*2) + 13)) - 1) + 1, min(max(0, (v2*2) + -10), ((min(v1, 15)*2) + 13) + ((v2*2) + -10))) <= min(max(0, (v2*2) + -10), ((min(v1, 15)*2) + 13) + ((v2*2) + -10)))"
"(max(min(min((((v1 + v2) - max(min(v3, 2001), 2)) + -31)/33, ((min(max(min(v3, 1872), -127) + 96, v1 + v2) - max(min(v3, 2001), 2)) + 1)/33), (0 + ((v4 + 162)/33)) - 1) + 1, min(max(((v2 - max(min(v3, 2001), 2)) + 34)/33, 0), ((v4 + 162)/33) + 0)) <= min(max(((v2 - max(min(v3, 2001), 2)) + 34)/33, 0), ((v4 + 162)/33) + 0))"
(((((((uint1)1 && ((0 + (v0 + -2)) <= (v0 + -2))) && ((3 + (v0 + 999)) >= (v0 + 1002))) && (((v1 + v2) + 3) <= ((v1 + v2) + -2))) && (((v1 + v2) + 3) >= ((v1 + v2) + 3))) && (0 <= 0)) && (0 >= 0))
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((62*4) + v0) + 3) >= (((62*4) + ((4 + 0) - 1)) + v0))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (v3 <= v3)) && (v3 >= v3))
((((v0*-8)/2)*2) == (v0*-8))
((((v0*8) + v1) + v2) < (((v0*8) + v1) + (v2 + 1)))
"(max(min(min(min(min((((v7 + v4) - max(min(v5, 2001), 2)) + -123)/125, (((v7 + v4) - max(min(v5, 2001), 2)) + -123)/125), ((min(max(min(v6 + v5, 1997), -2), (v7 + v4) + 121) - max(min(v5, 2001), 2)) + -120)/125), ((min(max(min(v6 + v5, 1997), -2), (v7 + v4) + 121) - max(min(v5, 2001), 2)) + -120)/125), (0 + ((v3 + 129)/125)) - 1) + 1, min(max(((v4 - max(min(v5, 2001), 2)) + 126)/125, 0), ((v3 + 129)/125) + 0)) <= min(max(((v4 - max(min(v5, 2001), 2)) + 126)/125, 0), ((v3 + 129)/125) + 0))"
(((v0 + 24)/18) != 0)
"(max(min(min(1, (((v1 + v2) + 272)/128) - (v3*2)), (0 + 3) - 1) + 1, min(max((((v2 + 272)/128) - (v3*2)) + 1, 0), 3 + 0)) <= min(max((((v2 + 272)/128) - (v3*2)) + 1, 0), 3 + 0))"
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (0 <= 0)) && (0 >= 0)) && (0 <= 0)) && (0 >= 0))
(((((((v0/4)*2) + v1)*2) + v2) + -7) < ((((((v0/4)*2) + v1)*2) + (v2 + 1)) + -7))
(((((v0*2) + v1)*8) + -4) == ((((((v0*2) + v1)*8) + -4) + 8) - 1))
"(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && ((min(v2*8, 55) + v3) <= ((min(v2*8, 55) + 0) + v3))) && (((min(v2*8, 55) + v3) + 7) >= ((min(v2*8, 55) + ((8 + 0) - 1)) + v3))) && (v4 <= v4)) && (v4 >= v4))"
"(max(min(((v1 + v2) + -1)/8, ((((v3*16) + v4) + -1) + 17) - 1) + 1, min(max((v2 + 7)/8, ((v3*16) + v4) + -1), 17 + (((v3*16) + v4) + -1))) <= min(max((v2 + 7)/8, ((v3*16) + v4) + -1), 17 + (((v3*16) + v4) + -1)))"
(((((((uint1)1 && ((v0 + 0) <= (0 + v0))) && ((v0 + 3) >= (((4 + 0) - 1) + v0))) && (v1 <= v1)) && (v1 >= v1)) && (v2 <= v2)) && (v2 >= v2))
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (v2 <= (0 + v2))) && ((v2 + 7) >= (((8 + 0) - 1) + v2))) && (0 <= 0)) && (0 >= 0))
"(((((((uint1)1 && ((0 + v3) <= (0 + v3))) && ((((16 + 0) - 1) + v3) >= (((16 + 0) - 1) + v3))) && ((((v4*8) + v5) + v6) <= (((v4*8) + v5) + v6))) && ((((v4*8) + v5) + v6) >= (((v4*8) + v5) + v6))) && ((((0*4) + (min(v1*24, 113) + (v2*8))) + 0) <= (min(v1*24, 113) + (v2*8)))) && ((((1*4) + (min(v1*24, 113) + (v2*8))) + 3) >= (min(v1*24, 113) + ((v2*8) + 7))))"
((((v0*2) + v1)*4) == (((((v0*2) + v1)*4) + 8) - 1))
((((v0*3) + v1) + 5) < ((((v0 + 1)*3) + v1) + -10))
(((((((uint1)1 && ((0 + ((((v1*16) + ((v2*2) + v3))*4) + v4)) <= (((v1*64) + (((v2*2) + v3)*4)) + v4))) && ((3 + ((((v1*16) + ((v2*2) + v3))*4) + v4)) >= (((v1*64) + ((((v2*2) + v3)*4) + 3)) + v4))) && ((((0*500) + v5) + 0) <= (0 + v5))) && ((((1*500) + v5) + 499) >= (((1000 + 0) - 1) + v5))) && (0 <= 0)) && (0 >= 0))
(((((((uint1)1 && ((0 + v0) <= (0 + v0))) && ((((257 + 0) - 1) + v0) >= (((257 + 0) - 1) + v0))) && (v1 <= v1)) && (v1 >= v1)) && (((v2*4) + 0) <= ((v2*4) + 0))) && (((v2*4) + 3) >= ((v2*4) + ((4 + 0) - 1))))
(((v0 + v1) + -3) >= ((((v0 - 1) + v1) + 1) + 1))
"((max((((v0 + 39)/4) + (((-40 - (v0 % 4))/8)*2)) - min(max(((v0 + 35)/4) + (((-40 - (v0 % 4))/8)*2), (v0/4) + -2), ((v0/4) + (((-40 - (v0 % 4))/8)*2)) + -2), (((v0 + 39)/4) + (v1*2)) - min(max(((v0 + 35)/4) + (v1*2), (v0/4) + -2), ((v0/4) + (v1*2)) + -2)) + 1) <= 1024)"
((v0 + 7) != 0)
"(((v0*4) + -273) == ((((v0*4) + -273) + ((min(((v1*64) - (v2*141)) - (v3*64), 52)*4) + 359)) - 1))"
"(max(min((v1 + v2) + -1, ((((v3*63) + v4) + -11) + (143 - max(v3*63, 62))) - 1) + 1, min(max(v2, ((v3*63) + v4) + -11), (143 - max(v3*63, 62)) + (((v3*63) + v4) + -11))) <= min(max(v2, ((v3*63) + v4) + -11), (143 - max(v3*63, 62)) + (((v3*63) + v4) + -11)))"
"(0 == ((0 + (16 - (max(min((v0*4) + v1, 8), 7)*2))) - 1))"
"((min(v0*4, 1999) + -6) == (((min(v0*4, 1999) + -6) + (max(v1, 0) + 11)) - 1))"
"(((((((uint1)1 && ((max(v0 + 20, min(v1, 4) + v2) + -15) <= (v0 + -4))) && ((v0 + 5) >= (v0 + 5))) && ((((max(-3*4, -9) + v3) + 0) + 5) <= (v3 + -4))) && ((((max(16*4, -9) + v3) + 3) + 5) >= (v3 + 72))) && (0 <= 0)) && (2 >= 2))"
(((((v0*252) + v1) + v2) + -3) < ((((v0*252) + v1) + (v2 + 1)) + -8))
(0 == ((0 + (((494 - (v0*256)) + 21)/4)) - 1))
((-6 - (v0*2)) > (499 - (v0*2)))
"(max(min(min(min(min(min(min(min(min((((v7 + v4) - max(min(v5, 2001), 2)) + -30)/32, (((v7 + v4) - max(min(v5, 2001), 2)) + -30)/32), (((v7 + v4) - max(min(v5, 2001), 2)) + -30)/32), (((v7 + v4) - max(min(v5, 2001), 2)) + -30)/32), ((min(max(min(v6 + v5, 1997), -2), (v7 + v4) + 28) - max(min(v5, 2001), 2)) + -27)/32), ((min(max(min(v6 + v5, 1997), -2), (v7 + v4) + 28) - max(min(v5, 2001), 2)) + -27)/32), ((min(max(min(v6 + v5, 1997), -2), (v7 + v4) + 28) - max(min(v5, 2001), 2)) + -27)/32), ((min(max(min(v6 + v5, 1997), -2), (v7 + v4) + 28) - max(min(v5, 2001), 2)) + -27)/32), (0 + ((v3 + 36)/32)) - 1) + 1, min(max(((v4 - max(min(v5, 2001), 2)) + 33)/32, 0), ((v3 + 36)/32) + 0)) <= min(max(((v4 - max(min(v5, 2001), 2)) + 33)/32, 0), ((v3 + 36)/32) + 0))"
"(((((((uint1)1 && ((-5 + v0) <= (-5 + v0))) && ((((6 + -5) - 1) + v0) >= (((6 + -5) - 1) + v0))) && (((v1 + v2) % 8) <= ((v1 + v2) % 8))) && (((v1 + v2) % 8) >= ((v1 + v2) % 8))) && (((v3*4) + 0) <= (v3*4))) && (((v3*4) + 3) >= (min(v3*4, 5) + 3)))"
"(((max(v0, -5)*-8) + -44) == ((((max(v0, -5)*-8) + -44) + ((max(v0, -5)*8) + 48)) - 1))"
"(((max(min((v1*-32) + ((max(max(-127 - (((v3 + v4)/4)*4), (((v3 + v4)/4)*4) + -1999), 0) + (v5*-64)) + (v2*-64)), -32), -68)/4)*4) == max(min((v1*-32) + ((max(max(-127 - (((v3 + v4)/4)*4), (((v3 + v4)/4)*4) + -1999), 0) + (v5*-64)) + (v2*-64)), -32), -68))"
"((max(v0, 4) + -1) >= 0)"
"((max((((max(v0*16, 984)/4)*-4) + ((v0*16) + v1)) - (min(v0*16, 984) + v1), -984) + 1000) <= 1024)"
(((v0 + v1) + 1) <= ((((v0 - 1) + v1) + -3) - 1))
(((((v0*8) + v1) + v2) + -4) < ((((v0*8) + v1) + (v2 + 1)) + -7))
"(((v0*16) + -36) == ((((v0*16) + -36) + ((min(v1, 5)*16) + 48)) - 1))"
"(((((((uint1)1 && ((v0 + 0) <= (0 + v0))) && ((v0 + 3) >= (((4 + 0) - 1) + v0))) && ((min(v1*4, 1999) + -5) <= (min(v1*4, 1999) + -5))) && ((((v2 + 71) + (min(v1*4, 1999) + -5)) - 1) >= (((v2 + 71) + (min(v1*4, 1999) + -5)) - 1))) && (v3 <= v3)) && (v3 >= v3))"
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + v0) + 0))) && ((((124*4) + v0) + 3) >= (((124*4) + v0) + ((4 + 0) - 1)))) && ((((v1*63) + v2) + v3) <= (((v1*63) + v2) + v3))) && ((((v1*63) + v2) + v3) >= (((v1*63) + v2) + v3))) && (0 <= 0)) && (((19 + 0) - 1) >= ((19 + 0) - 1)))
((((v0*4) + 256)/251) != 0)
((((v0*-64)/8)*8) == (v0*-64))
((((v0*4)/4)*4) == (v0*4))
"(max(min(1999, ((v2*4) + ((min(v1, 31)*4) + 4)) - 1) + 1, min(max(0, v2*4), ((min(v1, 31)*4) + 4) + (v2*4))) <= min(max(0, v2*4), ((min(v1, 31)*4) + 4) + (v2*4)))"
"(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((62*4) + v0) + 3) >= (((62*4) + ((4 + 0) - 1)) + v0))) && (((min(v1*16, 109) + v2) + v3) <= ((min(v1*16, 109) + v2) + v3))) && (((min(v1*16, 109) + v2) + v3) >= ((min(v1*16, 109) + v2) + v3))) && (v4 <= v4)) && (v4 >= v4))"
((v0 + v1) >= ((v0 + v1) + 1))
(((v0 + v1) + -2) < (((v0 + 1) + v1) + -2))
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((249*4) + v0) + 3) >= (((249*4) + ((4 + 0) - 1)) + v0))) && ((v1/250) <= ((0 + v1)/250))) && (((v1 + 124)/250) >= ((((125 + 0) - 1) + v1)/250))) && (v2 <= v2)) && (v2 >= v2))
(((v0 + v1) + 112) == ((((v0 + v1) + 112) + 20) - 1))
"(max(min(1999, ((((v2*125) + v3) + -10) + (min(v1, 125) + 18)) - 1) + 1, min(max(0, ((v2*125) + v3) + -10), (min(v1, 125) + 18) + (((v2*125) + v3) + -10))) <= min(max(0, ((v2*125) + v3) + -10), (min(v1, 125) + 18) + (((v2*125) + v3) + -10)))"
(((v0/4)*4) == ((((v0/4)*4) + ((v1*4) + 4)) - 1))
"(((((min(v0*8, 117) + v1) + v2)/4) + 1) < (((min(v0*8, 117) + (v1 + 1)) + v2)/4))"
"(max(min(min(1999, min(v1 + v2, 2000) + -1), (((min(v3*32, 31) + v4) + -2) + 37) - 1) + 1, min(max(max(0, max(v2, 0)), (min(v3*32, 31) + v4) + -2), 37 + ((min(v3*32, 31) + v4) + -2))) <= min(max(max(0, max(v2, 0)), (min(v3*32, 31) + v4) + -2), 37 + ((min(v3*32, 31) + v4) + -2)))"
(((((v0*63) + v1) + v2) + 8) < ((((v0*63) + v1) + (v2 + 1)) + -2))
(((((((uint1)1 && ((v0*8) <= (v0*8))) && ((v0*8) >= (v0*8))) && (v1 <= v1)) && (v1 >= v1)) && (((((v2*7) + 0)*4) + 0) <= (v2*28))) && (((((v2*7) + 6)*4) + 3) >= ((v2*28) + 27)))
"(max(min(min(min(min(min(min(min(min(min(((v4 - v5) + 7)/4, ((((v2 + v3)/4) - v5) + -2)/4), (((((v2 + v3) + -17)/4) - v5) + 2)/4), (((((v2 + v3) + -15)/4) - v5) + 2)/4), (((((v2 + v3) + -14)/4) - v5) + 2)/4), ((min((v2 + v3)/4, v4 + 6) - v5) + 1)/4), ((min(((v2 + v3) + -5)/4, v4 + 5) - v5) + 2)/4), ((min(((v2 + v3) + -3)/4, v4 + 5) - v5) + 2)/4), ((min(((v2 + v3) + -2)/4, v4 + 5) - v5) + 2)/4), (0 + ((min(((((v6 + v7) + -1)/4) - (v8*32)) - (v7/4), 31) + 14)/4)) - 1) + 1, min(max(max(max(max((((v3/4) - v5) + 5)/4, ((((v3 + -1)/4) - v5) + 5)/4), ((((v3 + 1)/4) - v5) + 5)/4), ((((v3 + 2)/4) - v5) + 5)/4), 0), ((min(((((v6 + v7) + -1)/4) - (v8*32)) - (v7/4), 31) + 14)/4) + 0)) <= min(max(max(max(max((((v3/4) - v5) + 5)/4, ((((v3 + -1)/4) - v5) + 5)/4), ((((v3 + 1)/4) - v5) + 5)/4), ((((v3 + 2)/4) - v5) + 5)/4), 0), ((min(((((v6 + v7) + -1)/4) - (v8*32)) - (v7/4), 31) + 14)/4) + 0))"
"(-127 == ((-127 + (134 - max(min(v0*4, 134), 3))) - 1))"
(0 == ((0 + (v0*2)) - 1))
(v0 >= (v0 + 1))
(((((v0*2) + v1)*16) + 16) <= (((v0*2) + v1)*16))
(((((((uint1)1 && (((v0*2) + v1) <= ((v0*2) + v1))) && ((((v0*2) + v1) + 1) >= (((v0*2) + v1) + 1))) && (v2 <= v2)) && (v2 >= v2)) && ((((0*4) + 0) + 0) <= 0)) && ((((3*4) + 14) + 3) >= 13))
"(((((((uint1)1 && ((max((min(v0, 4) + v1)/4, v2 + 11) + -3) <= (v2 + -2))) && ((v2 + 8) >= (v2 + 8))) && ((0 + (v3/4)) <= (0 + (v3/4)))) && ((3 + ((v3/4) + 32)) >= (3 + ((v3/4) + 32)))) && (0 <= 0)) && (47 >= 47))"
"(max(min(min(min(min(min(min(min(((2006 - v6)/4) + (v8*-63), ((2006 - v6)/4) + (v8*-63)), ((v7 + 14)/4) - (v8*63)), ((v7 + 14)/4) - (v8*63)), ((v7 + 14)/4) - (v8*63)), ((min(v4 + v5, min(v6 + v7, 1992) + 8) - ((v8*252) + v6)) + 6)/4), ((min(v4 + v5, min(v6 + v7, 1995) + 5) - ((v8*252) + v6)) + 9)/4), (0 + v9) - 1) + 1, min(max(max(max(max((((6 - v6)/4) + (v8*-63)) + 1, (((9 - v6)/4) + (v8*-63)) + 1), (((9 - v6)/4) + (v8*-63)) + 1), max(((v5 - ((v8*252) + v6)) + 13)/4, (((9 - v6)/4) + (v8*-63)) + 1)), 0), v9 + 0)) <= min(max(max(max(max((((6 - v6)/4) + (v8*-63)) + 1, (((9 - v6)/4) + (v8*-63)) + 1), (((9 - v6)/4) + (v8*-63)) + 1), max(((v5 - ((v8*252) + v6)) + 13)/4, (((9 - v6)/4) + (v8*-63)) + 1)), 0), v9 + 0))"
(((v0/4) + 1) <= (((v0 - 1)/4) - 1))
(((v0 + 10)/4) >= ((((v0 + 10)/4) + ((((v0 + 2) % 4) + 3)/4)) - 1))
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((249*4) + v0) + 3) >= (((249*4) + ((4 + 0) - 1)) + v0))) && ((((v1*2) + v2) + v3) <= (((v1*2) + v2) + v3))) && ((((v1*2) + v2) + v3) >= (((v1*2) + v2) + v3))) && (v4 <= v4)) && (v4 >= v4))
"(((((min((min(((v0 % ((v1/2) + 1))*16) + (((v2/250)*8) + -5), ((((v3 + v2) + -1)/250)*8) + -13)/8)*256, (min((min(((v0 % ((v1/2) + 1))*16) + (((v2/250)*8) + -5), ((((v3 + v2) + -1)/250)*8) + -13)/8)*64, (max(((min(((v0 % ((v1/2) + 1))*16) + (((v2/250)*8) + -5), ((((v3 + v2) + -1)/250)*8) + -13)/8)*8) + 1, min(((v0 % ((v1/2) + 1))*16) + (((v2/250)*8) + -5), ((((v3 + v2) + -1)/250)*8) + -13))*8) + 129)*4) + 3) + -17)*-1)/4)*4) == ((min((min(((v0 % ((v1/2) + 1))*16) + (((v2/250)*8) + -5), ((((v3 + v2) + -1)/250)*8) + -13)/8)*256, (min((min(((v0 % ((v1/2) + 1))*16) + (((v2/250)*8) + -5), ((((v3 + v2) + -1)/250)*8) + -13)/8)*64, (max(((min(((v0 % ((v1/2) + 1))*16) + (((v2/250)*8) + -5), ((((v3 + v2) + -1)/250)*8) + -13)/8)*8) + 1, min(((v0 % ((v1/2) + 1))*16) + (((v2/250)*8) + -5), ((((v3 + v2) + -1)/250)*8) + -13))*8) + 129)*4) + 3) + -17)*-1))"
"(((((((uint1)1 && ((0 + ((min(v0*128, 872) + (v1*4)) + v2)) <= ((min(v0*128, 872) + (v1*4)) + v2))) && ((3 + ((min(v0*128, 872) + (v1*4)) + v2)) >= (((min(v0*128, 872) + (v1*4)) + 3) + v2))) && (((min(v3*63, 187) + v4) + v5) <= ((min(v3*63, 187) + v4) + v5))) && (((min(v3*63, 187) + v4) + v5) >= ((min(v3*63, 187) + v4) + v5))) && (v6 <= v6)) && (v6 >= v6))"
"(max(min((v1 + v2) + -1, ((((v3*63) + v4) + -11) + (1018 - max(v3*63, 943))) - 1) + 1, min(max(v2, ((v3*63) + v4) + -11), (1018 - max(v3*63, 943)) + (((v3*63) + v4) + -11))) <= min(max(v2, ((v3*63) + v4) + -11), (1018 - max(v3*63, 943)) + (((v3*63) + v4) + -11)))"
"(max(min(min(min((((v1 + v2) - max(min(v3, 1999), 0))/4) + -1, ((max(min(v3, 1936), -63) - max(min(v3, 1999), 0))/4) + 15), ((min(max(min(v3, 1936), -63) + 61, v1 + v2) - max(min(v3, 1999), 0)) + -1)/4), (0 + ((v4 + 67)/4)) - 1) + 1, min(max(((v2 - max(min(v3, 1999), 0)) + 3)/4, 0), ((v4 + 67)/4) + 0)) <= min(max(((v2 - max(min(v3, 1999), 0)) + 3)/4, 0), ((v4 + 67)/4) + 0))"
"(max(min(min(1999, min(v1 + v2, 2000) + -1), ((((v4*126) + v5) + -10) + (min(v3, 116) + 18)) - 1) + 1, min(max(max(0, max(v2, 0)), ((v4*126) + v5) + -10), (min(v3, 116) + 18) + (((v4*126) + v5) + -10))) <= min(max(max(0, max(v2, 0)), ((v4*126) + v5) + -10), (min(v3, 116) + 18) + (((v4*126) + v5) + -10)))"
"(((((((uint1)1 && ((min(v0*4, 2003) + -4) <= (min(v0*4, 2003) + -4))) && ((max((((min(v1, 4) + v2)/4) + ((((min((v3*-64) + ((((v1 + v2) + -1)/4) - ((min(v1, 4) + v2)/4)), 62) + 9)/8) + (v3*8))*8))*4, 5) + -5) >= (max((((min(v1, 4) + v2)/4) + ((((min((v3*-64) + ((((v1 + v2) + -1)/4) - ((min(v1, 4) + v2)/4)), 62) + 9)/8) + (v3*8))*8))*4, 5) + -5))) && (max(min(v4*4, 1999), max((v4*4) + v5, -3) + 4) <= max(min(v4*4, 1999), max((v4*4) + v5, -3) + 4))) && ((max((v4*4) + v5, -4) + 4) >= (max((v4*4) + v5, -4) + 4))) && (((0*4) + 0) <= 0)) && (((3*4) + 3) >= 13))"
((((v0*-128)/4)*4) == (v0*-128))
"(max(min(124, (((v1*8) + -1) + 37) - 1) + 1, min(max(0, (v1*8) + -1), 37 + ((v1*8) + -1))) <= min(max(0, (v1*8) + -1), 37 + ((v1*8) + -1)))"
((((v0*-64)/4)*4) == (v0*-64))
"(((((((uint1)1 && (max((((v0*4) + v1)/8)*8, ((v0*4) - (((v0*4) + v1) % 8)) + v1) <= ((((v0*4) + v1)/8)*8))) && ((((v0*4) + v1) + 3) >= (((v0*4) + v1) + 3))) && (((((v2*4) + v3) + v4) + 5) <= (((v2*4) + v3) + v4))) && (((((v2*4) + v3) + v4) + 5) >= ((((v2*4) + v3) + v4) + 5))) && ((min(v5*4, 133) + 0) <= min(v5*4, 133))) && ((min(v5*4, 133) + 3) >= (min(v5*4, 133) + 3)))"
(((v0 + 135)/126) != 0)
"(((max(min((v1*-668) + (v2 - (v3*224)), 224), 0)/4)*4) == max(min((v1*-668) + (v2 - (v3*224)), 224), 0))"
"(((((((uint1)1 && ((((v0*4) + v1) + 0) <= ((v0*4) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + v1) + 3))) && (((min(v2*63, 62) + v3)/8) <= ((min(v2*63, 62) + v3)/8))) && ((((min(v2*63, 62) + v3) + 70)/8) >= (((min(v2*63, 62) + v3) + 70)/8))) && (v4 <= v4)) && (v4 >= v4))"
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + v1) + 0))) && ((((v0*4) + v1) + 3) >= (((v0*4) + v1) + ((4 + 0) - 1)))) && ((((v2*63) + v3) + v4) <= (((v2*63) + v3) + v4))) && ((((v2*63) + v3) + v4) >= (((v2*63) + v3) + v4))) && (0 <= 0)) && (((25 + 0) - 1) >= ((25 + 0) - 1)))
(0 == ((0 + ((v0*2) + 4)) - 1))
((((v0*64) + 156)/68) != 0)
(((((((uint1)1 && (((((v0*4) + v1) + 0) + -4) <= (((v0*4) + v1) + -4))) && (((((v0*4) + v1) + 3) + -4) >= (((v0*4) + v1) + -1))) && ((v2/4) <= (v2/4))) && (((v2 + 11)/4) >= ((v2 + 11)/4))) && (v3 <= v3)) && (v3 >= v3))
"(((((((uint1)1 && ((0 + (min(v0*128, 124) + v1)) <= (min(v0*128, 124) + v1))) && ((3 + ((min(v0*128, 124) + v1) + 124)) >= ((min(v0*128, 124) + 127) + v1))) && (((min(v2*4, 121) + v3) + v4) <= ((min(v2*4, 121) + v3) + v4))) && (((min(v2*4, 121) + v3) + v4) >= ((min(v2*4, 121) + v3) + v4))) && (v5 <= v5)) && (v5 >= v5))"
"((((max(v0, 7)*-4)/4)*4) == (max(v0, 7)*-4))"
((((v0*4) + (v1 + v2)) + 246) == (((((v0*4) + (v1 + v2)) + 246) + 9) - 1))
"(((((((uint1)1 && ((0 + ((v0*8) + v1)) <= (0 + ((v0*8) + v1)))) && ((3 + (((v0*8) + v1) + 4)) >= (3 + (((v0*8) + v1) + 4)))) && (((min(v2, 1000) + v3) + -1000) <= ((min(v2, 1000) + v3) + -1000))) && (((v2 + v3) + -1) >= ((v2 + v3) + -1))) && (0 <= 0)) && (3 >= 3))"
"(max(0, min(((v0 % 4) + 129)/128, (0 + (((v0 % 4) + 381)/128)) - 1) + 1) <= 0)"
"(((((((uint1)1 && ((0 + (min(v0*32, 220) + v1)) <= (min(v0*32, 220) + v1))) && ((3 + ((min(v0*32, 220) + v1) + 28)) >= ((min(v0*32, 220) + 31) + v1))) && (((min(v2*63, 62) + v3) + v4) <= ((min(v2*63, 62) + v3) + v4))) && (((min(v2*63, 62) + v3) + v4) >= ((min(v2*63, 62) + v3) + v4))) && (v5 <= v5)) && (((v6 + v5) + -1) >= ((v6 + v5) - 1)))"
(0 >= ((0 + ((((((v0 + v1) % 250) + 124)/250)*16) + 27)) - 1))
"(((min(v0*2, 253)*8) + -36) == ((((min(v0*2, 253)*8) + -36) + ((v1*8) + 48)) - 1))"
"(((((((uint1)1 && ((((0*4) + 0) + ((min(max(v0*16, -5), (v0*16) + 8) + v1) + 3)) <= (((((v0*16) + -5) + v1) + 0) + 3))) && ((((1*4) + 3) + (min((((min(v0*16, -5) + 20)/8)*8) + (max(v0*16, -5) + v1), ((v0*16) + v1) + 8) + 3)) >= (((((v0*16) + 15) + v1) + 3) + 3))) && ((((0*3) + 0) + ((min(v2, 4) + v3) + -6)) <= ((min(v2, 4) + v3) + -6))) && ((((1*3) + 2) + ((max(v2, 4) + (min(v2, 4) + v3)) + -7)) >= ((v2 + v3) + 2))) && (0 <= 0)) && (0 >= 0))"
"((max(max(min(v0*33, 98) + v1, min(((v0*33) + v1) - max(v0*33, 98), v1) + 98) - ((v0*33) + v1), 0) + 45) <= 1024)"
"(((max(max(max(min(((((v0*4) + v1)*8) + v2)*2, 483), -16) - max(min(((((v0*4) + v1)*8) + v2)*2, 499), 0), max(min(((v0*32) + v2)*2, 483), -16) - max(min(((v0*32) + v2)*2, 499), 0)), -17)*4) + 72) <= 1024)"
(((((v0*8) + v1)*4) + -5) >= (((((v0*8) + (v1 - 1))*4) + 1) + 1))
"(((v0*4) + -529) == ((((v0*4) + -529) + ((max(v1*31, 162)*-4) + 775)) - 1))"
"(max(min(min(min(min(min((((v6 + v5) - max(min(v3, 2001), 2)) + -2)/4, (((v6 + v5) - max(min(v3, 2001), 2)) + -2)/4), (((v6 + v5) - max(min(v3, 2001), 2)) + 1)/4), (((v6 + v5) - max(min(v3, 2001), 2)) + 1)/4), ((max(min(v2 + v3, 1997), -2) - max(min(v3, 2001), 2)) + 1)/4), (0 + ((v4/4) + 2)) - 1) + 1, min(max(((v5 - max(min(v3, 2001), 2)) + 5)/4, 0), ((v4/4) + 2) + 0)) <= min(max(((v5 - max(min(v3, 2001), 2)) + 5)/4, 0), ((v4/4) + 2) + 0))"
(((((((uint1)1 && (((((0*4) + v0) + -2) + 0) <= ((((0*4) + 0) + v0) + -2))) && (((((2*4) + v0) + ((6 + -2) - 1)) + 3) >= ((((2*4) + ((4 + 0) - 1)) + v0) + ((6 + -2) - 1)))) && ((-2 + v1) <= (-2 + v1))) && ((((6 + -2) - 1) + v1) >= (((6 + -2) - 1) + v1))) && (v2 <= v2)) && (v2 >= v2))
"(max(0, min((max(min((min((((v0 + v1) + 3)/4) - (v2*126), (v1/4) + 125) - ((v1/4) + (v3*32)))*4, 122), -7)/4) + 2, (0 + ((max(min((min((((v0 + v1) + 3)/4) - (v2*126), (v1/4) + 125) - ((v1/4) + (v3*32)))*4, 122), -7) + 15)/4)) - 1) + 1) <= 0)"
"(((((((uint1)1 && ((-5 + (v0 + -3)) <= (-5 + (v0 + -3)))) && ((((6 + -5) - 1) + ((26 + (v0 + -3)) - 1)) >= (((6 + -5) - 1) + ((26 + (v0 + -3)) - 1)))) && ((-5 + v1) <= (-5 + v1))) && ((((6 + -5) - 1) + v1) >= (((6 + -5) - 1) + v1))) && (((v2*4) + 0) <= (v2*4))) && (((v2*4) + 3) >= (min(v2*4, 5) + 3)))"
(((v0*8) + -1) >= ((((v0 - 1)*8) + 11) + 1))
((v0 + -4) == (((v0 + -4) + 6) - 1))
(((v0 + 252)/251) != 0)
"(max(min(min(((max(min(((v1 + v2) + 47)/16, 124), 0)*2) - v0) + 5, 253 - v0), (0 + 63) - 1) + 1, min(max(4 - v0, 0), 63 + 0)) <= min(max(4 - v0, 0), 63 + 0))"
(((((((uint1)1 && ((((v0/8)*256) + -17) <= (((((v0/8)*64) + -3)*4) + -5))) && ((((((v0/8)*8) + v1)*32) + 501) >= ((((((v1*8) + 129) + (((v0/8)*64) + -3)) - 1)*4) + ((7 + -5) - 1)))) && ((0 + ((v2*32) + -17)) <= (((0*4) + ((v2*32) + -20)) + 0))) && ((3 + ((v2*32) + 658)) >= (((168*4) + ((v2*32) + 661)) + 3))) && (v3 <= v3)) && (v3 >= v3))
"((((v0*16) + (v1 + v2)) + -10) == (((((v0*16) + (v1 + v2)) + -10) + (82 - max(v0*16, 58))) - 1))"
((((v0 + v1)*2) + -4) >= (((((v0 + v1)*2) + -4) + 2) - 1))
"((((v0*16) + v1)*4) == (((((v0*16) + v1)*4) + ((min(v2, 15)*4) + 4)) - 1))"
(((((((uint1)1 && ((0 + v0) <= (((0*4) + 0) + v0))) && ((3 + (v0 + 28)) >= (((((8 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && ((v1*4) <= (v1*4))) && ((v1*4) >= (v1*4))) && (v2 <= v2)) && (v2 >= v2))
"((max(v0, 64) + 8) >= 0)"
"(((min((v0*-4) + 0, -28)/4)*4) == min((v0*-4) + 0, -28))"
(((((((uint1)1 && ((((((v0*2) + v1)*4) + 0) + -5) <= (((((v0*2) + v1)*4) + 0) + -5))) && ((((((v0*2) + v1)*4) + 3) + -5) >= (((((v0*2) + v1)*4) + ((4 + 0) - 1)) + -5))) && (((v2 + v3) + -5) <= ((v2 + v3) + -5))) && (((v2 + v3) + -5) >= ((v2 + v3) + -5))) && (v4 <= v4)) && (v4 >= v4))
(((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && ((((((v1*2) + v2)*4) + 0) + -1) <= (((((v1*2) + v2)*4) + 0) + -1))) && ((((((v1*2) + v2)*4) + 3) + -1) >= (((((v1*2) + v2)*4) + ((4 + 0) - 1)) + -1))) && (v3 <= v3)) && (v3 >= v3))
"(max(min(min(min(((v4 - v5)/4) + 5, ((min(v4 + 4, v2 + v3) - v5)/4) + 4), (((v2 + v3) - v5) + 13)/4), (0 + ((min((((((v6 + v7) + 3)/4)*4) - (v8*126)) - ((v7/4)*4), 114) + 27)/4)) - 1) + 1, min(max(((v3 - v5)/4) + 5, 0), ((min((((((v6 + v7) + 3)/4)*4) - (v8*126)) - ((v7/4)*4), 114) + 27)/4) + 0)) <= min(max(((v3 - v5)/4) + 5, 0), ((min((((((v6 + v7) + 3)/4)*4) - (v8*126)) - ((v7/4)*4), 114) + 27)/4) + 0))"
"(max(min(min(min(min(min((((v0 + v1)/4) - v4) + 1, (((v0 + v1)/4) - v4) + 1), ((((v2 + v3) + 31)/4) - v4) + 2), (((v0 + v1) + 7)/4) - v4), (((v0 + v1) + 7)/4) - v4), (0 + 32) - 1) + 1, min(max((((v1 + 7)/4) - v4) + 1, 0), 32 + 0)) <= min(max((((v1 + 7)/4) - v4) + 1, 0), 32 + 0))"
"(((((((uint1)1 && (((v0/16) + -2) <= (-2 + max((v0/16) + -5, v0/16)))) && ((v1 + 3) >= (((6 + -2) - 1) + v1))) && ((((max(-2*4, -5) + v2) + 0) + -60) <= (((((max(-2, 0)*4) + 0) + v2) + -2) + -63))) && ((((max(2*4, -5) + v2) + 3) + -60) >= (((((2*4) + ((4 + 0) - 1)) + v2) + ((6 + -2) - 1)) + -63))) && (v3 <= v3)) && (v3 >= v3))"
"(((((((uint1)1 && (((0 + (min(v0, 4) + v1)) + -4) <= (0 + ((min(v0, 4) + v1) + -4)))) && (((3 + ((((max(v0, 4) + -1)/4)*4) + (min(v0, 4) + v1))) + -4) >= (((4 + 0) - 1) + ((v0 + v1) + -4)))) && ((v2/250) <= (((min(0*32, 93) + 0) + v2)/250))) && (((v2 + 124)/250) >= (((min(((4 + 0) - 1)*32, 93) + ((32 + 0) - 1)) + v2)/250))) && (v3 <= v3)) && (v3 >= v3))"
"(max(min(124, (((((v1*500) + v2)/16) + -2) + (((((v1*500) + v2) % 16) + 595)/16)) - 1) + 1, min(max(0, (((v1*500) + v2)/16) + -2), (((((v1*500) + v2) % 16) + 595)/16) + ((((v1*500) + v2)/16) + -2))) <= min(max(0, (((v1*500) + v2)/16) + -2), (((((v1*500) + v2) % 16) + 595)/16) + ((((v1*500) + v2)/16) + -2)))"
"(max(min(min(min(((v4 - ((v7*256) + ((v8*500) + v6))) + 14)/4, (((v2 + v3) - ((v7*256) + ((v8*500) + v6))) + 7)/4), ((min(v4 + 4, v2 + v3) - ((v7*256) + ((v8*500) + v6))) + 10)/4), (0 + (((v5 - v6) + 21)/4)) - 1) + 1, min(max(((v3 - ((v7*256) + ((v8*500) + v6))) + 14)/4, 0), (((v5 - v6) + 21)/4) + 0)) <= min(max(((v3 - ((v7*256) + ((v8*500) + v6))) + 14)/4, 0), (((v5 - v6) + 21)/4) + 0))"
"(((((((uint1)1 && (((((0*4) + v0) + 0) + 8) <= ((((0*4) + v0) + 0) + 8))) && (((((((min(v1*16, -10) + 25)/4)*4) + v0) + 3) + 8) >= (((((((((min(v1*16, -10) + 10) + 19)/4) + 0) - 1)*4) + v0) + ((4 + 0) - 1)) + 8))) && ((v2 + v3) <= (v2 + v3))) && ((v2 + v3) >= (v2 + v3))) && (((v4*16) + v5) <= ((v4*16) + v5))) && (((v4*16) + v5) >= ((v4*16) + v5)))"
"(((((((uint1)1 && ((0 + ((((min(v1, 8) + v2) + -40)/16) + (v3*4))) <= ((0 + ((((min(v1, 8) + v2) + -8)/16) + (v3*4))) + -2))) && ((3 + ((((min(v1, 8) + v2) + 40)/16) + (v3*4))) >= ((((4 + 0) - 1) + ((((min(v1, 8) + v2) + -8)/16) + (v3*4))) + ((6 + -2) - 1)))) && (0 <= 0)) && ((8 - 1) >= (8 - 1))) && (((v4*32) + v5) <= ((v4*32) + v5))) && (((v4*32) + v5) >= ((v4*32) + v5)))"
"(max(min(124, ((v2 + 3) + (min(v1*32, -5) + 37)) - 1) + 1, min(max(0, v2 + 3), (min(v1*32, -5) + 37) + (v2 + 3))) <= min(max(0, v2 + 3), (min(v1*32, -5) + 37) + (v2 + 3)))"
"(((max(min(v0, 126), 2)*2) + -4) == ((((max(min(v0, 126), 2)*2) + -4) + ((v1*2) + 12)) - 1))"
"((((max(min((min((v0*128) + ((v1*128) + 123), v2)*2) + (((v3/8) + (v4*8))*2), 755), 256)*4)/4)*4) == (max(min((min((v0*128) + ((v1*128) + 123), v2)*2) + (((v3/8) + (v4*8))*2), 755), 256)*4))"
"(((((((uint1)1 && ((0 + ((min(v0*32, 468) + (v1*4)) + v2)) <= ((min(v0*32, 468) + (v1*4)) + v2))) && ((3 + ((min(v0*32, 468) + (v1*4)) + v2)) >= (((min(v0*32, 468) + (v1*4)) + 3) + v2))) && ((v3 + v4) <= (v3 + v4))) && ((v3 + v4) >= (v3 + v4))) && (v5 <= v5)) && (v5 >= v5))"
"(((((((uint1)1 && ((((min(v2, 4) + v3)/4) + -3) <= (-2 + max(((min(v2, 4) + v3)/4) + -11, ((min(v2, 4) + v3)/4) + -1)))) && (((v4 + 27)/4) >= (((11 + -2) - 1) + ((v4 + -5)/4)))) && ((((v0*4) + v1) + 0) <= ((v0*4) + v1))) && ((((v0*4) + v1) + 3) >= (min(((v0*4) + v1) - (max(v0, 1)*4), v1) + 7))) && (v5 <= v5)) && (v5 >= v5))"
((0 - v0) > (248 - v0))
"(((((((uint1)1 && ((((min(v0, 4) + v1)/4) + -3) <= (-2 + (((min(v0, 4) + v1)/4) + -1)))) && (((((min(v0, 4) + v1)/4) + v2) + 7) >= (8 + ((((min(v0, 4) + v1)/4) + v2) + -1)))) && ((((0*4) + ((v3/4) + (v4*12))) + 0) <= (((0*4) + ((v3/4) + (v4*12))) + 0))) && ((((2*4) + ((v3/4) + (v4*12))) + 3) >= (((2*4) + ((v3/4) + (v4*12))) + 3))) && ((v5*16) <= (v5*16))) && (((v5*16) + 15) >= ((v5*16) + 15)))"
(((v0 + v1) + -1) < (((v0 + 1) + v1) + -1))
"(((((((uint1)1 && ((((0*4) + ((((min(v0, 8) + v1) + -40)/16) + (v2*4))) + 0) <= (0 + ((((min(v0, 8) + v1) + -40)/16) + (v2*4))))) && ((((0*4) + ((((min(v0, 8) + v1) + -40)/16) + (v2*4))) + 3) >= (((4 + 0) - 1) + ((((min(v0, 8) + v1) + -40)/16) + (v2*4))))) && (v3 <= v3)) && (v3 >= v3)) && ((((v4*16) + v5)*2) <= ((((v4*16) + v5)*2) + 0))) && (((((v4*16) + v5)*2) + 1) >= ((((v4*16) + v5)*2) + ((2 + 0) - 1))))"
((((((v0/2)*251) + v1) + v2) + -4) < (((((v0/2)*251) + v1) + (v2 + 1)) + -7))
"(max(min(17, ((((v1*3) + v2)*3) + 3) - 1) + 1, min(max(0, ((v1*3) + v2)*3), 3 + (((v1*3) + v2)*3))) <= min(max(0, ((v1*3) + v2)*3), 3 + (((v1*3) + v2)*3)))"
"(max(min(min((((v1 + v2) - (max(min((v4/125)*8, 125), 1)*16)) + -108)/128, ((min((max(min((((v3 + v4) + -1)/125)*8, 113), -11)*16) + 61, v1 + v2) - (max(min((v4/125)*8, 125), 1)*16)) + 19)/128), (0 + ((v5 + 20)/8)) - 1) + 1, min(max(((v2 - (max(min((v4/125)*8, 125), 1)*16)) + 147)/128, 0), ((v5 + 20)/8) + 0)) <= min(max(((v2 - (max(min((v4/125)*8, 125), 1)*16)) + 147)/128, 0), ((v5 + 20)/8) + 0))"
"((v0 + -20) == (((v0 + -20) + (24 - (max((max(min((v1/125)*8, 125), 1)*2) - v2, 2)*8))) - 1))"
"(((((((uint1)1 && (((0 + ((min(v0, 500) + v1) + v2)) + -503) <= (((0 + (min(v0, 500) + v1)) + v2) + -503))) && (((3 + (((((max(v0, 500) + 9)/4)*4) + (min(v0, 500) + v1)) + v2)) + -503) >= (((((4 + 0) - 1) + ((((max(v0, 500) + 9)/4)*4) + (min(v0, 500) + v1))) + v2) + -503))) && ((-5 + v3) <= (-5 + v3))) && ((((6 + -5) - 1) + v3) >= (((6 + -5) - 1) + v3))) && (0 <= 0)) && (0 >= 0))"
"(0 == ((0 + (10 - (max(min(v0, 5), 4)*2))) - 1))"
(((((((uint1)1 && (0 <= 0)) && (0 >= 0)) && ((((((v0/4) + (v1*4)) + 0)*4) + 0) <= ((((v0/4) + (v1*4))*4) + 0))) && ((((((v0/4) + (v1*4)) + 3)*4) + 3) >= ((((v0/4) + (v1*4))*4) + ((16 + 0) - 1)))) && ((v2*2) <= ((v2*2) + 0))) && (((v2*2) + 1) >= ((v2*2) + ((2 + 0) - 1))))
(((v0*5) + v1) < ((v0*5) + (v1 + 1)))
((0 - (v0/4)) > (499 - (v0/4)))
((v0 + v1) >= (((v0 - 1) + v1) + 1))
(((v0 % 1008) + 1007) >= 0)
"(max(min(min(min(((v6 - v5)*2) + 7, ((v3 + v4)/4) - (v5*2)), ((min((v6*8) + 25, v3 + v4) + 3)/4) - (v5*2)), (0 + ((min(((min(max(min(v7, 124), 0) + (v9*32), max(min(v7, 60), -64) + 33)*2) - min((max(min(v7, 124), 0) + (v9*32))*2, 249)) - (v8*4), -60)*2) + 128)) - 1) + 1, min(max((((v4 + 3)/4) - (v5*2)) + 1, 0), ((min(((min(max(min(v7, 124), 0) + (v9*32), max(min(v7, 60), -64) + 33)*2) - min((max(min(v7, 124), 0) + (v9*32))*2, 249)) - (v8*4), -60)*2) + 128) + 0)) <= min(max((((v4 + 3)/4) - (v5*2)) + 1, 0), ((min(((min(max(min(v7, 124), 0) + (v9*32), max(min(v7, 60), -64) + 33)*2) - min((max(min(v7, 124), 0) + (v9*32))*2, 249)) - (v8*4), -60)*2) + 128) + 0))"
(((v0/4) + 1) != 0)
(((v0*8) + 11) <= ((((v0 - 1)*8) + -1) - 1))
(((((((uint1)1 && ((v0 + -2) <= (v0 + -2))) && ((v1 + 39) >= (((((v1 - v0) + 39) + v0) - 1) + 1))) && ((0 + (((v2*4) + v3) + 1)) <= (-2 + ((v2*4) + v3)))) && ((3 + (((v2*4) + v3) + 1)) >= (1 + (((v2*4) + v3) + 3)))) && (0 <= 0)) && (2 >= 2))
(((((((uint1)1 && (((v0 + v1) + -2) <= ((v0 + v1) + -2))) && (((v0 + v1) + -2) >= ((v0 + v1) + -2))) && ((((v2*4) + v3) + 0) <= (((v2*4) + 0) + v3))) && ((((v2*4) + v3) + 3) >= (((v2*4) + ((4 + 0) - 1)) + v3))) && (((v4*3) + v5) <= ((v4*3) + v5))) && (((v4*3) + v5) >= ((v4*3) + v5)))
(((v0 + 511)/504) != 0)
"(((((((uint1)1 && ((((max(-2*4, -5) + v0) + 0) + 3) <= (v0 + -2))) && ((((max(249*4, -5) + v0) + 3) + 3) >= (v0 + 1002))) && (((v1 + v2) + 3) <= ((v1 + v2) + -2))) && (((v1 + v2) + 3) >= ((v1 + v2) + 3))) && (0 <= 0)) && (0 >= 0))"
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && ((v2*4) <= ((0 + v2)*4))) && (((v2*4) + 4) >= ((((2 + 0) - 1) + v2)*4))) && (0 <= 0)) && (2 >= ((3 + 0) - 1)))
"(((max(min(v0, 12), -3)*4) + -52) >= ((((max(min(v0, 12), -3)*4) + -52) + ((max(min(v0, 12), -3)*-4) + 56)) - 1))"
"(max(min(min(min(min(min(min(min(min(min(min(6, 6), 6), 6), (1872 - v4)/128), (1872 - v4)/128), (1999 - v4)/128), min(((min(v2 + v3, 2000) - v4) + -1)/128, 6)), min(((min(v2 + v3, 2000) - v4) + -1)/128, 6)), min((1999 - v4)/128, 6)), (0 + 8) - 1) + 1, min(max(max(max(max(0 - (v4/128), 0 - (v4/128)), max(((v3 - v4) + 127)/128, 0 - (v4/128))), max(((v3 - v4) + 127)/128, 0 - (v4/128))), 0), 8 + 0)) <= min(max(max(max(max(0 - (v4/128), 0 - (v4/128)), max(((v3 - v4) + 127)/128, 0 - (v4/128))), max(((v3 - v4) + 127)/128, 0 - (v4/128))), 0), 8 + 0))"
"(max(v0/251, 0) >= ((max(v0/251, 0) + (min(v0/251, 0) + 1)) - 1))"
"(max(min((v1 + v2) + -1, ((((v4*128) + v5) + -11) + (min(v3, 122) + 18)) - 1) + 1, min(max(v2, ((v4*128) + v5) + -11), (min(v3, 122) + 18) + (((v4*128) + v5) + -11))) <= min(max(v2, ((v4*128) + v5) + -11), (min(v3, 122) + 18) + (((v4*128) + v5) + -11)))"
((((v0*8) + 25)/17) != 0)
"(max(0, min(1, (0 + (((v0 % 8) + 1511)/504)) - 1) + 1) <= 0)"
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && ((v2 + v3) <= (v2 + v3))) && ((v2 + v3) >= (v2 + v3))) && ((v4*9) <= ((v4*9) + 0))) && (((v4*9) + 8) >= ((v4*9) + ((9 + 0) - 1))))
"(max(0, min(min((((v0 + v1) - max(min(v2, 1999), 0))/4) + -1, ((max(min((v3*32) + v4, min(v4, 997) + 973), -29) - max(min((v3*32) + v4, min(v4, 1028) + 973), 2))/4) + 7), (0 + ((v5 + 35)/4)) - 1) + 1) <= 0)"
"(0 == ((0 + (128 - (max(v0, 1)*64))) - 1))"
(((((v0*33) + v1) + v2) + -4) < ((((v0*33) + v1) + (v2 + 1)) + -7))
(0 == ((0 + (63 - (v0*4))) - 1))
"(((((((uint1)1 && ((0 + (min(v0*252, 248) + v1)) <= (min(v0*252, 248) + v1))) && ((3 + ((min(v0*252, 248) + v1) + 248)) >= ((min(v0*252, 248) + 251) + v1))) && (((min(v2*32, 93) + (v3*8)) + v4) <= ((min(v2*32, 93) + (v3*8)) + v4))) && ((((min(v2*32, 93) + (v3*8)) + v4) + 7) >= (((min(v2*32, 93) + (v3*8)) + 7) + v4))) && (v5 <= v5)) && (v5 >= v5))"
"(((((((uint1)1 && (((min(v0*3, 5) + v1) + v2) <= ((min(v0*3, 5) + v1) + v2))) && (((min(v0*3, 5) + v1) + v2) >= ((min(v0*3, 5) + v1) + v2))) && ((((((v3*4) + v4)*4) + v5) + 0) <= ((((v3*4) + v4)*4) + v5))) && ((((((v3*4) + v4)*4) + v5) + 3) >= (((((v3*4) + v4)*4) + 3) + v5))) && ((min(v6*69, 68) + ((v7*23) + (min(v8*6, 17) + (v9*2)))) <= (min(v6*69, 68) + ((v7*23) + (min(v8*6, 17) + (v9*2)))))) && (((min(v6*69, 68) + ((v7*23) + (min(v8*6, 17) + (v9*2)))) + 1) >= ((min(v6*69, 68) + ((v7*23) + (min(v8*6, 17) + (v9*2)))) + 1)))"
"(max(min(min(min((v4 - v5) + 2, (((v2 + v3) + 3)/4) - v5), ((min((v4*4) + 2, v2 + v3) + 6)/4) - v5), (0 + (min(v6 - (v7*4), 1) + 3)) - 1) + 1, min(max((((v3 + 6)/4) - v5) + 1, 0), (min(v6 - (v7*4), 1) + 3) + 0)) <= min(max((((v3 + 6)/4) - v5) + 1, 0), (min(v6 - (v7*4), 1) + 3) + 0))"
((((v0*68) + v1) + v2) < (((v0*68) + v1) + (v2 + 1)))
(v0 < (v0 + 1))
"(((((((uint1)1 && ((((v0 + v1)*2) + 0) <= (((v0 + v1)*2) + 0))) && ((((v0 + v1)*2) + ((3 + 0) - 1)) >= (((v0 + v1)*2) + ((3 + 0) - 1)))) && (0 <= 0)) && ((4 - 1) >= (4 - 1))) && ((min(v2*4, 14) + 0) <= (min(v2*4, 14) + 0))) && ((min(v2*4, 14) + 3) >= (min(v2*4, 14) + ((4 + 0) - 1))))"
"(((max(min((v1*-252) + (max(min(v2 + v3, 2000), 1) - max(min(v3, 1999), 0)), 252), 0)/4)*4) == max(min((v1*-252) + (max(min(v2 + v3, 2000), 1) - max(min(v3, 1999), 0)), 252), 0))"
"(max(min(124, (((v1/16) + -2) + (((v1 % 16) + 223)/16)) - 1) + 1, min(max(0, (v1/16) + -2), (((v1 % 16) + 223)/16) + ((v1/16) + -2))) <= min(max(0, (v1/16) + -2), (((v1 % 16) + 223)/16) + ((v1/16) + -2)))"
(((((((uint1)1 && (((((v0*2) + v1)*2) + 0) <= (((v0*2) + v1)*2))) && (((((v0*2) + v1)*2) + 3) >= ((((v0*2) + v1)*2) + 3))) && (0 <= 0)) && (0 >= 0)) && (v2 <= v2)) && (v2 >= v2))
((((v0*64) + 224)/136) != 0)
"(max(min(min(min(min(min((((v2 + v3)/4) - v4) + -1, (((v2 + v3)/4) - v4) + -1), (((v0 + v1) + 3)/4) - v4), (((v2 + v3) + -1)/4) - v4), (((v2 + v3) + -1)/4) - v4), (0 + 126) - 1) + 1, min(max((((v3 + -1)/4) - v4) + 1, 0), 126 + 0)) <= min(max((((v3 + -1)/4) - v4) + 1, 0), 126 + 0))"
"(max(min(min(min((v2/125) + -1, (min(min(2124 - v1, v2), ((v3 + v4) - v1) + 124)/125) + -1), (1875 - v1)/125), (0 + ((v2 + 124)/125)) - 1) + 1, min(max(max(0 - (v1/125), max(((v4 - v1) + 124)/125, 0 - (v1/125))), 0), ((v2 + 124)/125) + 0)) <= min(max(max(0 - (v1/125), max(((v4 - v1) + 124)/125, 0 - (v1/125))), 0), ((v2 + 124)/125) + 0))"
"((v0 + 1) < (min(max(min(v1, 1999), (v0 + 1) + 4), v0 + 1) + -3))"
((v0 + 1) < ((v0 + 1) + -3))
((((v0 + v1) + v2) + -5) >= (((((v0 - 1) + v1) + v2) + 1) + 1))
(((v0 + 249)/250) != 0)
"(((((((uint1)1 && ((v0 + 0) <= (0 + v0))) && ((v0 + 3) >= (((4 + 0) - 1) + v0))) && (((min(v1*63, 62) + (min(v2*2, 61) + v3)) + v4) <= ((min(v1*63, 62) + (min(v2*2, 61) + v3)) + v4))) && (((min(v1*63, 62) + (min(v2*2, 61) + v3)) + v4) >= ((min(v1*63, 62) + (min(v2*2, 61) + v3)) + v4))) && (v5 <= v5)) && (v5 >= v5))"
((((v0/4)*4) + -8) == (((((v0/4)*4) + -8) + ((v1*4) + 12)) - 1))
((v0 + v1) < (v0 + (v1 + 1)))
(((v0 + v1) + v2) <= (((((v0 - 1) + v1) + v2) + -1) - 1))
"(max(0, min(((v0 % 4) + 527)/16, (0 + 34) - 1) + 1) <= 0)"
((((((v0*2) + v1)*4) + v2) + 4) < (((((v0*2) + v1)*4) + (v2 + 1)) + -1))
((((v0*32)/8)*8) == (v0*32))
((((v0 + v1)*4) + -171) < ((((v0 + 1) + v1)*4) + -177))
(((v0 + 62)/63) != 0)
(((v0 + 20)/16) != 0)
(((((((uint1)1 && ((v0*8) <= (v0*8))) && ((v0*8) >= (v0*8))) && (((((((v1/250)*2) + v2)*4) + ((v3*2) + v4)) + -5) <= ((((((v1/250)*2) + v2)*4) + ((v3*2) + v4)) + -5))) && (((((((v1/250)*2) + v2)*4) + ((v3*2) + v4)) + -5) >= ((((((v1/250)*2) + v2)*4) + ((v3*2) + v4)) + -5))) && (((v5*4) + 0) <= ((v5*4) + 0))) && (((v5*4) + 3) >= ((v5*4) + ((4 + 0) - 1))))
"(v0 < min(max(((v1*16) + v2) + -8, v0 + 1), (v0 + 1) + -5))"
"(max(min(min(min((v2/1000) + -1, (-621 - v1)/1000), (-621 - v1)/1000), (0 + ((v2 + 999)/1000)) - 1) + 1, min(max((1031 - v1)/1000, 0), ((v2 + 999)/1000) + 0)) <= min(max((1031 - v1)/1000, 0), ((v2 + 999)/1000) + 0))"
"((-6 - max(v0, -3)) >= (((-6 - max(v0, -3)) + (max(v0, -3) + 8)) - 1))"
"(max(min(v0, 0), -62) >= ((max(min(v0, 0), -62) + (5 - max(min(v0, 0), -62))) - 1))"
((v0 + -7) >= (((v0 + -7) + 4) - 1))
"(max(min((216 - v0)/32, (0 + 4) - 1) + 1, min(max(0 - (v0/32), 0), 4 + 0)) <= min(max(0 - (v0/32), 0), 4 + 0))"
"(max(min(min(1999, min(v1 + v2, 2000) + -1), (v3 + 8) - 1) + 1, min(max(max(0, max(v2, 0)), v3), 8 + v3)) <= min(max(max(0, max(v2, 0)), v3), 8 + v3))"
((((v0*4) + 513)/503) != 0)
"((max(v0, 64) + 5) >= 0)"
"(v0 < min(max(((min(v1, 4) + v2) + -44)/8, v0 + 1), (v0 + 1) + -5))"
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + v1) + 0))) && ((((v0*4) + v1) + 3) >= (((v0*4) + v1) + 3))) && (0 <= 0)) && (0 >= 0)) && (0 <= 0)) && (24 >= 24))
((((v0 + v1)*8) + -67) == (((((v0 + v1)*8) + -67) + 9) - 1))
"(((min(v0, 12)*4) + -52) == ((((min(v0, 12)*4) + -52) + ((min(v0, 12)*-4) + 56)) - 1))"
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (v2 <= v2)) && (v2 >= v2)) && (((v3*32) + v4) <= ((v3*32) + v4))) && (((v3*32) + v4) >= ((v3*32) + v4)))
"(((((min(min((v1*76) + ((v2*2)*4), (v2*8) + 161)*4, (v1*304) + (((v2*2)*16) + 3)) + -20)*-1)/4)*4) == ((min(min((v1*76) + ((v2*2)*4), (v2*8) + 161)*4, (v1*304) + (((v2*2)*16) + 3)) + -20)*-1))"
(((v0 + 140)/126) != 0)
(((((((uint1)1 && ((-2 + v0) <= (-2 + v0))) && ((((6 + -2) - 1) + v0) >= (((6 + -2) - 1) + v0))) && (((((((v1*2) + 0)*4) + -2) + 0) + 1) <= ((((((v1*2) + 0)*4) + 0) + -2) + 1))) && (((((((v1*2) + 1)*4) + ((6 + -2) - 1)) + 3) + 1) >= ((((((v1*2) + 1)*4) + ((4 + 0) - 1)) + ((6 + -2) - 1)) + 1))) && (v2 <= v2)) && (v2 >= v2))
(((v0 + 256)/252) != 0)
(0 == ((0 + (((v0 - v1)*2) + 2)) - 1))
(v0 == ((v0 + 68) - 1))
"((v0 + -17) >= (((v0 + -17) + (min((((v1/4) + v2)*4) + (v3 - ((v1/4)*4)), -21) + 22)) - 1))"
((((v0*8) + v1) + -5) < (((v0*8) + (v1 + 1)) + -5))
(((v0 + 65)/64) != 0)
(((((((uint1)1 && (((((v0*3) + v1) + v2) + -3) <= ((((v0*3) + v1) + v2) + -3))) && (((((v0*3) + v1) + v2) + -3) >= ((((v0*3) + v1) + v2) + -3))) && (((((0*4) + v3) + 0) + -5) <= (v3 + -5))) && (((((126*4) + v3) + 3) + -5) >= (v3 + 501))) && (0 <= 0)) && (0 >= 0))
((-6 - (v0*2)) == (499 - (v0*2)))
"(((((((uint1)1 && ((max(v0*2, -1) + v1) <= (((v0*2) + v1) + -1))) && ((((v0*2) + v1) + 1) >= (((v0*2) + v1) + 1))) && (((0 + (min(v2, 0) + v3)) + -1) <= ((min(v2, 0) + v3) + -1))) && (((3 + ((((max(v2, 0)/4)*4) + (min(v2, 0) + v3)) + 4)) + -1) >= ((v2 + v3) + 3))) && (0 <= 0)) && (2 >= 2))"
(((((((uint1)1 && ((0 + (((v0*4) + v1) + 3)) <= ((0 + ((v0*4) + v1)) + -2))) && ((3 + (((v0*4) + v1) + 3)) >= ((3 + (((v0*4) + v1) + 8)) + -2))) && ((v2 + -2) <= ((-5 + v2) + 3))) && ((v2 + 127) >= ((124 + v2) + 3))) && (0 <= 0)) && (0 >= 0))
"((((v0*12) + (v1 + v2)) + -8) == (((((v0*12) + (v1 + v2)) + -8) + (140 - max(v0*12, 118))) - 1))"
(((v0 + 137)/125) != 0)
"(0 == ((0 + (57 - max(v0*29, 28))) - 1))"
"(max(min(1999, ((((v1/4) + v2)*4) + (((((v1 % 4) + 3)/4)*4) + 4)) - 1) + 1, min(max(0, ((v1/4) + v2)*4), (((((v1 % 4) + 3)/4)*4) + 4) + (((v1/4) + v2)*4))) <= min(max(0, ((v1/4) + v2)*4), (((((v1 % 4) + 3)/4)*4) + 4) + (((v1/4) + v2)*4)))"
"(max(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(62 - (v3/4), 62 - (v3/4)), 62 - (v3/4)), 62 - (v3/4)), 62 - (v3/4)), 62 - (v3/4)), ((v2 - v3) + 2)/4), ((v2 - v3) + 2)/4), ((v2 - v3) + 2)/4), ((v2 - v3) + 2)/4), ((v2 - v3) + 2)/4), ((v2 - v3) + 2)/4), ((v2 - v3) + 2)/4), ((v2 - v3) + 2)/4), ((v2 - v3) + 2)/4), ((v2 - v3) + 2)/4), ((v2 - v3) + 2)/4), ((v2 - v3) + 2)/4), ((v2 - v3) + 2)/4), ((v2 - v3) + 2)/4), ((v2 - v3) + 2)/4), ((v2 - v3) + 2)/4), ((v2 - v3) + 2)/4), ((v2 - v3) + 2)/4), ((v2 - v3) + 2)/4), ((v2 - v3) + 2)/4), ((v2 - v3) + 2)/4), ((v2 - v3) + 2)/4), ((v2 - v3) + 2)/4), ((v2 - v3) + 2)/4), (250 - v3)/4), (250 - v3)/4), (250 - v3)/4), (250 - v3)/4), (250 - v3)/4), (250 - v3)/4), (252 - v3)/4), (252 - v3)/4), (252 - v3)/4), (252 - v3)/4), (252 - v3)/4), (252 - v3)/4), (253 - v3)/4), (253 - v3)/4), (253 - v3)/4), (253 - v3)/4), (253 - v3)/4), (253 - v3)/4), (0 + ((min(((((v4 + v5) + 7)/8) - (v6*4)) - (v5/8), 3) + 9)/4)) - 1) + 1, min(max(max(max(max(max(max(max(max(max(max(max(max(((0 - v3)/4) + 2, ((0 - v3)/4) + 2), ((0 - v3)/4) + 2), 1 - (v3/4)), 1 - (v3/4)), 1 - (v3/4)), (5 - v3)/4), (5 - v3)/4), (5 - v3)/4), (6 - v3)/4), (6 - v3)/4), (6 - v3)/4), 0), ((min(((((v4 + v5) + 7)/8) - (v6*4)) - (v5/8), 3) + 9)/4) + 0)) <= min(max(max(max(max(max(max(max(max(max(max(max(max(((0 - v3)/4) + 2, ((0 - v3)/4) + 2), ((0 - v3)/4) + 2), 1 - (v3/4)), 1 - (v3/4)), 1 - (v3/4)), (5 - v3)/4), (5 - v3)/4), (5 - v3)/4), (6 - v3)/4), (6 - v3)/4), (6 - v3)/4), 0), ((min(((((v4 + v5) + 7)/8) - (v6*4)) - (v5/8), 3) + 9)/4) + 0))"
((((v0 + v1)*4) + -267) < ((((v0 + 1) + v1)*4) + -273))
"(max(min((v1 + v2) + -1, ((((v4*128) + v5) + -1) + (min(v3, 128) + 5)) - 1) + 1, min(max(v2, ((v4*128) + v5) + -1), (min(v3, 128) + 5) + (((v4*128) + v5) + -1))) <= min(max(v2, ((v4*128) + v5) + -1), (min(v3, 128) + 5) + (((v4*128) + v5) + -1)))"
(((((((uint1)1 && (((v0*4) + -5) <= ((v0*4) + -5))) && (((v0*4) + ((7 + -5) - 1)) >= ((v0*4) + ((7 + -5) - 1)))) && ((((0*4) + ((v1*32) + -20)) + 0) <= ((((v1*8) + -3)*4) + -5))) && ((((168*4) + ((v1*32) + 661)) + 3) >= ((((v1*8) + 165)*4) + ((7 + -5) - 1)))) && (v2 <= v2)) && (v2 >= v2))
(((((((uint1)1 && ((((v0 + v1) + v2) % 16) <= (((v0 + v1) + v2) % 16))) && ((((v0 + v1) + v2) % 16) >= (((v0 + v1) + v2) % 16))) && (v3 <= v3)) && (v3 >= v3)) && ((((((v4 % 4)*3) + v5)*4) + 0) <= ((((v4 % 4)*3) + v5)*4))) && ((((((v4 % 4)*3) + v5)*4) + 3) >= (((((v4 % 4)*3) + v5)*4) + 3)))
"(max(0, min(min(((((v0 + v1) - v2)/4) + (v3*-32)) + -1, ((max(min(min(v3*128, 872) + v2, 1872), -127) - max(min(min(v3*128, 872) + v2, 1999), 0))/4) + 31), (0 + ((v4 + 131)/4)) - 1) + 1) <= 0)"
((4 - (((v0*4) + v1)*2)) == (509 - (((v0*4) + v1)*2)))
"(max(min(min(min(((v3 - (v1*252)) + -50)/68, (1942 - ((v1*252) + v2))/68), (1942 - ((v1*252) + v2))/68), (0 + ((v4 + 85)/68)) - 1) + 1, min(max((77 - ((v1*252) + v2))/68, 0), ((v4 + 85)/68) + 0)) <= min(max((77 - ((v1*252) + v2))/68, 0), ((v4 + 85)/68) + 0))"
(((v0*4) + v1) >= (((v0*4) + (v1 - 1)) + 1))
"(((((((uint1)1 && (((((0*4) + v1) + 0) + -3) <= (-3 + v1))) && ((((((((max(v0*4, -3) - v1) + 7)/4)*4) + v1) + 3) + -3) >= (((5 + -3) - 1) + (min(max(v0*4, -3), min(max(v0*4, -3) - v1, 0) + (((((max(v0*4, -3) - v1) + 3)/4)*4) + v1)) + 3)))) && ((-3 + v2) <= (-3 + v2))) && ((((5 + -3) - 1) + v2) >= (((5 + -3) - 1) + v2))) && (v3 <= v3)) && (v3 >= v3))"
"(0 >= ((0 + ((((0 - max((max(min(v0*2, 509), 10)*4) - v1, (v2*4) + 52))/4) + v2) + 14)) - 1))"
"(((((((uint1)1 && (((((((min(v0*8, (v1*8) + 4) + -5)/8)*2) + 0)*4) + 0) <= (((min(v0*8, (v1*8) + 4) + -5)/8)*8))) && (((((((min(v0*8, (v1*8) + 4) + -5)/8)*2) + ((v1 - ((min(v0*8, (v1*8) + 4) + -5)/8))*2))*4) + 3) >= ((v1*8) + 3))) && (((v2*8) + -5) <= ((v2*8) + -5))) && (((v2*8) + 7) >= ((v2*8) + 7))) && ((min(v3*69, 68) + v4) <= (min(v3*69, 68) + v4))) && ((min(v3*69, 68) + v4) >= (min(v3*69, 68) + v4)))"
"((((min((v0*4) + (((v1/250)*16)*4), (((v1 + 999)/250)*64) + 85)*4)/4)*4) == (min((v0*4) + (((v1/250)*16)*4), (((v1 + 999)/250)*64) + 85)*4))"
"((-6 - max(v0, -3)) == (((-6 - max(v0, -3)) + (max(v0, -3) + 8)) - 1))"
(((((((uint1)1 && ((-10 + v0) <= (-10 + v0))) && ((((13 + -10) - 1) + v0) >= (((13 + -10) - 1) + v0))) && ((((((v1/4) + 0)*4) + 0) + -7) <= (((v1/4)*4) + -7))) && ((((((v1/4) + ((35 + 0) - 1))*4) + 3) + -7) >= (((v1/4)*4) + 132))) && (v2 <= v2)) && (v2 >= v2))
(v0 == ((v0 + 3) - 1))
((((v0 + v1) + v2) + 1) <= (((((v0 - 1) + v1) + v2) + -5) - 1))
"((((max(min(((min(v3*125, v4 + -125) + (v2 + 124))/125)*8, 113), -11) + (max(min(((min(v3*125, v4 + -125) + v2)/125)*8, 125), 1)*-1))/4)*4) == (max(min(((min(v3*125, v4 + -125) + (v2 + 124))/125)*8, 113), -11) + (max(min(((min(v3*125, v4 + -125) + v2)/125)*8, 125), 1)*-1)))"
(((v0 % 672) + 671) >= 0)
((((v0*-68)/4)*4) == (v0*-68))
"(((((((uint1)1 && (max((max(v0*4, -9) + v1) + -7, (max(v0*4, -9) + v1) + 2) <= ((0 + (((v0*4) + v1) + -2)) + -5))) && ((((v0*4) + v1) + 5) >= ((3 + (((v0*4) + v1) + 9)) + -5))) && ((((max(-3, 0)*4) + 0) + (v2 + -7)) <= (-2 + (v2 + -5)))) && ((((16*4) + 3) + (v2 + 59)) >= (1 + (v2 + 125)))) && (0 <= 0)) && (1 >= 1))"
"(v0 < min(max(((v1/4)*4) + -7, v0 + 1), (v0 + 1) + -5))"
"(((((v0/4)*4) + (min(v1, 1)*70)) + 62) < ((((v1 + 1)*70) + ((v0/4)*4)) + -7))"
"((max(max(((min(v0*63, 187) + v1) + 67)/4, ((((v0*63) + v1) + 19)/4) + ((((((min(v0*63, 187) + v1) + 66)/4) - ((((v0*63) + v1) + 7)/4))/4)*4)) - ((min(v0*63, 187) + v1)/4), 19) + 1) <= 1024)"
((1 - (v0*2)) > (125 - (v0*2)))
(((v0 + v1) + 110) >= ((((v0 + v1) + 110) + 23) - 1))
"(((((((uint1)1 && ((0 + (v3 + -10)) <= (-10 + v3))) && ((3 + (v3 + 63)) >= (((13 + -10) - 1) + (v3 + 64)))) && (((v1*4) + -7) <= ((v1*4) + -7))) && (((min((v0/4) + 28, v1)*4) + 20) >= ((min(v0/4, v1 - (max(v2, 4)*7))*4) + 132))) && (v4 <= v4)) && (v4 >= v4))"
((((v0*504)/4)*4) == (v0*504))
(((((((uint1)1 && (((((0*4) + ((v0/4) + (v1*128)))*4) + 0) <= (((0 + ((v0/4) + (v1*128)))*4) + 0))) && (((((31*4) + ((v0/4) + (v1*128)))*4) + 15) >= (((127 + ((v0/4) + (v1*128)))*4) + 3))) && (((v2 + v3)*4) <= ((v2 + v3)*4))) && ((((v2 + v3)*4) + 3) >= (((v2 + v3)*4) + 3))) && (0 <= 0)) && (19 >= 19))
"((min(v0, 5) + -10) == (((min(v0, 5) + -10) + (11 - min(v0, 5))) - 1))"
(((((((uint1)1 && (((v0 + v1) + -2) <= ((v0 + v1) + -2))) && (((v0 + v1) + ((6 + -2) - 1)) >= ((v0 + v1) + ((6 + -2) - 1)))) && (0 <= 0)) && ((8 - 1) >= (8 - 1))) && ((((v2 % 16)*4) + 0) <= (((v2 % 16)*4) + 0))) && ((((v2 % 16)*4) + 3) >= (((v2 % 16)*4) + ((4 + 0) - 1))))
"(((((((uint1)1 && (((v0 + v1) % 16) <= ((v0 + v1) % 16))) && (((v0 + v1) % 16) >= ((v0 + v1) % 16))) && (v2 <= v2)) && (v2 >= v2)) && (((v3*4) + 0) <= (v3*4))) && (((v3*4) + 3) >= ((min(v3, 11)*4) + 3)))"
"(((((((uint1)1 && ((0 + (min(v0*32, 220) + v1)) <= (min(v0*32, 220) + v1))) && ((3 + ((min(v0*32, 220) + v1) + 28)) >= ((min(v0*32, 220) + 31) + v1))) && ((v2 + v3) <= (v2 + v3))) && ((v2 + v3) >= (v2 + v3))) && (v4 <= v4)) && (v4 >= v4))"
(((v0 + 257)/255) != 0)
((v0 + 5) <= ((v0 - 1) - 1))
"(v0 == ((v0 + (33 - max(v1*12, 21))) - 1))"
"(((max(max(min(((v0*32) + v1)*2, 483), -16) - max(min(((v0*32) + v1)*2, 499), 0), max(min(((((v0*4) + v2)*8) + v1)*2, 483), -16) - max(min(((((v0*4) + v2)*8) + v1)*2, 499), 0))*4) + 72) <= 1024)"
((10 - ((v0*16) + v1)) > (2009 - ((v0*16) + v1)))
"(((((((uint1)1 && ((0 + ((min(v0*252, 248) + (v1*4)) + v2)) <= ((min(v0*252, 248) + (v1*4)) + v2))) && ((3 + ((min(v0*252, 248) + (v1*4)) + v2)) >= (((min(v0*252, 248) + (v1*4)) + 3) + v2))) && ((v3 + v4) <= (v3 + v4))) && ((v3 + v4) >= (v3 + v4))) && (v5 <= v5)) && (((v6 + v5) + -1) >= ((v6 + v5) - 1)))"
"(max(min(126 - (v0/2), (0 + 9) - 1) + 1, min(max((6 - v0)/2, 0), 9 + 0)) <= min(max((6 - v0)/2, 0), 9 + 0))"
(((v0 + v1) + -10) >= ((((v0 + v1) + -10) + 143) - 1))
((((v0*112)/4)*4) == (v0*112))
((((v0*64) + 124)/36) != 0)
((((v0*4) + v1) + -5) < (((v0*4) + (v1 + 1)) + -17))
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((1*4) + v0) + 3) >= (((1*4) + ((4 + 0) - 1)) + v0))) && (v1 <= v1)) && (v1 >= v1)) && (0 <= 0)) && (0 >= 0))
(((v0/126) + 1) != 0)
((((v0*-32)/2)*2) == (v0*-32))
"(((((((uint1)1 && (((0 + (min(v0, 4) + v1)) + -4) <= ((0 + (min(v0, 4) + v1)) + -4))) && (((3 + ((((max(v0, 4) + -1)/4)*4) + (min(v0, 4) + v1))) + -4) >= ((3 + ((((max(v0, 4) + -1)/4)*4) + (min(v0, 4) + v1))) + -4))) && ((((v2*4) + v3) + v4) <= (((v2*4) + v3) + v4))) && ((((v2*4) + v3) + v4) >= (((v2*4) + v3) + v4))) && (0 <= 0)) && (3 >= 3))"
(((v0*8) + 3) < (((v0 + 1)*8) + -4))
(((((((uint1)1 && (((v0/16) + -2) <= ((0 + (v0/16)) + -2))) && (((v0/16) + 66) >= ((3 + ((v0/16) + 60)) + 3))) && ((((((v1*2) + 0)*4) + 0) + -1) <= (-2 + ((v1*8) + 1)))) && ((((((v1*2) + 3)*4) + 3) + -1) >= (3 + ((v1*8) + 8)))) && (((v2*2) + v3) <= ((v2*2) + v3))) && (((v2*2) + v3) >= ((v2*2) + v3)))
"(0 == ((0 + ((min(((min(max(min((v0/125)*8, 125), 1) + (v1*6), max(min((((v2 + v0) + -1)/125)*8, 113), -11) + 7)*2) - min((max(min((v0/125)*8, 125), 1) + (v1*6))*2, 251)) - (v3*4), -8)*2) + 24)) - 1))"
((v0 + v1) < ((v0 + 1) + v1))
"((((v0 + v1)*8) + 11) < (min(max(v1*8, (((v0 + 1) + v1)*8) + 5), ((v0 + 1) + v1)*8) + -1))"
(((v0*16) + ((v1*2) + v2)) < ((v0*16) + ((v1*2) + (v2 + 1))))
"(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + v0) + 0))) && ((((124*4) + v0) + 3) >= (((124*4) + v0) + 3))) && (((min(v1*63, 62) + v2) + v3) <= ((min(v1*63, 62) + v2) + v3))) && (((min(v1*63, 62) + v2) + v3) >= ((min(v1*63, 62) + v2) + v3))) && (v4 <= v4)) && (v4 >= v4))"
(((((v0 + v1) + v2) + v3) + -4) >= ((((((v0 - 1) + v1) + v2) + v3) + 5) + 1))
"(max(min(((v1 + v2) + -1)/4, (v4 + (min(v3, 1) + 1)) - 1) + 1, min(max((v2 + 3)/4, v4), (min(v3, 1) + 1) + v4)) <= min(max((v2 + 3)/4, v4), (min(v3, 1) + 1) + v4))"
"((((v0*4) + v1)*4) == (((((v0*4) + v1)*4) + (((min(v2, 3)/4)*16) + 16)) - 1))"
"((((min(min(v1*252, ((max(v1*-252, -248)/4)*-4) + 3), 248) - (v1*252))/4)*4) == (min(min(v1*252, ((max(v1*-252, -248)/4)*-4) + 3), 248) - (v1*252)))"
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((124*4) + v0) + 3) >= (((124*4) + ((4 + 0) - 1)) + v0))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (v3 <= v3)) && (v3 >= v3))
(((((((uint1)1 && ((0 + v0) <= (0 + v0))) && ((((125 + 0) - 1) + v0) >= (((125 + 0) - 1) + v0))) && ((v1 + 0) <= (0 + v1))) && ((v1 + 3) >= (((4 + 0) - 1) + v1))) && (v2 <= v2)) && (v2 >= v2))
(((v0*4) + -7) >= ((((v0 - 1)*4) + 3) + 1))
((((v0*63) + v1) + v2) < (((v0*63) + v1) + (v2 + 1)))
((v0/8) >= ((((v0 - 1)/8) + 1) + 1))
"(((((((uint1)1 && ((((((v0*2) + v1)*4) + v2) + 0) <= ((((v0*2) + v1)*4) + v2))) && ((((((v0*2) + v1)*4) + v2) + 3) >= (((((v0*2) + v1)*4) + 3) + v2))) && (((min(v3*32, 93) + ((v4*4) + v5)) + v6) <= ((min(v3*32, 93) + ((v4*4) + v5)) + v6))) && (((min(v3*32, 93) + ((v4*4) + v5)) + v6) >= ((min(v3*32, 93) + ((v4*4) + v5)) + v6))) && (v7 <= v7)) && (v7 >= v7))"
"(max(-514 - (v0*4), (v0*4) + 10) >= 0)"
(0 >= ((0 + ((((((v0 + v1) % 250) + 124)/250)*16) + 23)) - 1))
"(max(min(1999, ((((v1*125) + v2) + -2) + 130) - 1) + 1, min(max(0, ((v1*125) + v2) + -2), 130 + (((v1*125) + v2) + -2))) <= min(max(0, ((v1*125) + v2) + -2), 130 + (((v1*125) + v2) + -2)))"
"(((((((uint1)1 && ((0 + (((v0*4) + (min(v1*64, 440) + v2)) + -10)) <= ((0 + ((v0*4) + (min(v1*64, 440) + v2))) + -10))) && ((3 + (((v0*4) + (min(v1*64, 440) + v2)) + 2)) >= ((((4 + 0) - 1) + ((v0*4) + (min(v1*64, 440) + v2))) + ((13 + -10) - 1)))) && (0 <= 0)) && (0 >= 0)) && (v3 <= v3)) && (v3 >= v3))"
"(((min(max(v0, 1)*16, 40) + -44) + (48 - min(max(v0, 1)*16, 40))) <= (min(max(v0, 1)*16, 40) + -44))"
"(max(min(v0, 0), -127) == ((max(min(v0, 0), -127) + (5 - max(min(v0, 0), -127))) - 1))"
(((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && ((0 + (v1/4)) <= (v1/4))) && ((3 + ((v1 + 54)/4)) >= ((v1 + 66)/4))) && (0 <= 0)) && (2 >= 2))
(((v0 + v1) + -8) >= ((((v0 + v1) + -8) + 140) - 1))
(((v0 + v1)/125) <= ((((v0 - 1) + v1)/125) - 1))
"((max(min(((v0*4) + v1) - max(v0*4, 1002), v1) - ((v0*4) + v1), -1002) + 1009) <= 1024)"
"(max(0, min(min((((v0 + v1) - max(min((v2*8) + v3, 1999), 0))/4) + -1, ((max(min((v2*8) + v3, 1992), -7) - max(min((v2*8) + v3, 1999), 0))/4) + 1), (0 + ((v4 + 11)/4)) - 1) + 1) <= 0)"
"(max(0, min((((min(v0*500, v1 + -500) + v2) % 4) + 503)/4, (0 + (((v3 % 4) + 511)/4)) - 1) + 1) <= 0)"
(((v0*104) + v1) < ((v0*104) + (v1 + 1)))
"(((((min(min((v3*32) + (((v2/250)*2)*32), (min((v3*4) + (((v2/250)*2)*4), ((((v4 + v2) + -1)/250)*8) + 9)*8) + 33)*4, (v3*128) + ((((v2/250)*2)*128) + 3))*-1) + (min((v3*4) + (((v2/250)*2)*4), ((((v4 + v2) + -1)/250)*8) + 9)*32))/4)*4) == ((min(min((v3*32) + (((v2/250)*2)*32), (min((v3*4) + (((v2/250)*2)*4), ((((v4 + v2) + -1)/250)*8) + 9)*8) + 33)*4, (v3*128) + ((((v2/250)*2)*128) + 3))*-1) + (min((v3*4) + (((v2/250)*2)*4), ((((v4 + v2) + -1)/250)*8) + 9)*32)))"
(((((((uint1)1 && (((((v0*4) + v1) + -2) + 0) <= ((((v0*4) + 0) + v1) + -2))) && (((((v0*4) + v1) + ((6 + -2) - 1)) + 3) >= ((((v0*4) + ((4 + 0) - 1)) + v1) + ((6 + -2) - 1)))) && (0 <= 0)) && ((8 - 1) >= (8 - 1))) && (v2 <= v2)) && (v2 >= v2))
(((((((uint1)1 && (((((((v0/250)*2) + 0)*4) + 0) + -5) <= ((((((v0/250)*2) + 0)*4) + 0) + -5))) && (((((((v0/250)*2) + ((v1*2) + 1))*4) + 3) + -5) >= ((((((v0/250)*2) + ((v1*2) + 1))*4) + ((4 + 0) - 1)) + -5))) && (((v2 + v3) + -5) <= ((v2 + v3) + -5))) && (((v2 + v3) + -5) >= ((v2 + v3) + -5))) && (((v4*2) + v5) <= ((v4*2) + v5))) && (((v4*2) + v5) >= ((v4*2) + v5)))
((((v0*2) + v1) + 1) < (((v0 + 1)*2) + v1))
"(((max(min((v1*-64) + (((v3 + 1)*-64) + max(max(-3 - (v2*4), (v2*4) + -2123), 0)), -64), -132)/4)*4) == max(min((v1*-64) + (((v3 + 1)*-64) + max(max(-3 - (v2*4), (v2*4) + -2123), 0)), -64), -132))"
(((v0 + v1) + -23) < (((v0 + 1) + v1) + -26))
"(((((((uint1)1 && ((max(v1/16, (((-80 - (v1 % 16))/16) + ((((v1 % 16) + 79)/16) + (v1/16))) + 1) + -2) <= (max((-80 - (v1 % 16))/16, -2) + (v1/16)))) && (((v1/16) + (((v1 % 16) + 111)/16)) >= (3 + (((((v1 % 16) + 79)/16) + (v1/16)) - 1)))) && ((-2 + v2) <= (-2 + v2))) && ((((6 + -2) - 1) + v2) >= (((6 + -2) - 1) + v2))) && (((((v3*8) + 0)*4) + 0) <= (v3*32))) && (((((v3*8) + 7)*4) + 3) >= ((v3*32) + 31)))"
"(max(min(499, ((v1 + -10) + 15) - 1) + 1, min(max(0, v1 + -10), 15 + (v1 + -10))) <= min(max(0, v1 + -10), 15 + (v1 + -10)))"
(((((((uint1)1 && (0 <= 0)) && ((16 - 1) >= (16 - 1))) && (v0 <= v0)) && (v0 >= v0)) && ((((((v1 % 4)*3) + v2)*4) + 0) <= ((((v1 % 4)*3) + v2)*4))) && ((((((v1 % 4)*3) + v2)*4) + 3) >= (((((v1 % 4)*3) + v2)*4) + 3)))
(((((((uint1)1 && (((0 + (((v0*64) + v1) + -9)) + 5) <= (((v0*64) + v1) + -4))) && (((3 + (((v0*64) + v1) + 132)) + 5) >= (((v0*64) + v1) + 68))) && (((v2 + v3) + 5) <= ((v2 + v3) + -4))) && (((v2 + v3) + 5) >= ((v2 + v3) + 5))) && (0 <= 0)) && (2 >= 2))
"(max(min(499, ((v1*2) + 65) - 1) + 1, min(max(0, v1*2), 65 + (v1*2))) <= min(max(0, v1*2), 65 + (v1*2)))"
((10 - ((v0 + v1)*2)) >= (509 - ((v0 + v1)*2)))
"(max(0, min(18 - ((v0 % 4)*5), (0 + 5) - 1) + 1) <= 0)"
"(max(min(2009 - ((v0*253) + v1), (0 + 253) - 1) + 1, min(max(10 - ((v0*253) + v1), 0), 253 + 0)) <= min(max(10 - ((v0*253) + v1), 0), 253 + 0))"
((((v0*2) + 29)/17) != 0)
(((((((uint1)1 && (((v0/2) + -1) <= ((((v0*4) + 0) + -5)/8))) && (((v0 + -1)/2) >= ((((v0*4) + ((4 + 0) - 1)) + -5)/8))) && (((((((v1/250)*2) + v2)*4) + 0) + -5) <= ((((((v1/250)*2) + v2)*4) + 0) + -5))) && (((((((v1/250)*2) + v2)*4) + 3) + -5) >= ((((((v1/250)*2) + v2)*4) + ((4 + 0) - 1)) + -5))) && (0 <= 0)) && (0 >= 0))
"(((min(min(v1*252, ((max(v1*-252, -248)/4)*-4) + 3), 248)/4)*4) == min(min(v1*252, ((max(v1*-252, -248)/4)*-4) + 3), 248))"
(((v0 + v1) + -6) < (((v0 + 1) + v1) + -6))
"(max(min(min(min(min(min(min(min(min(min(min(0, 0), 0), 0), (1748 - v4)/252), (1748 - v4)/252), (1999 - v4)/252), min(((min(v2 + v3, 2000) - v4) + -1)/252, 0)), min(((min(v2 + v3, 2000) - v4) + -1)/252, 0)), min((1999 - v4)/252, 0)), (0 + 2) - 1) + 1, min(max(max(max(max(0 - (v4/252), 0 - (v4/252)), max(((v3 - v4) + 251)/252, 0 - (v4/252))), max(((v3 - v4) + 251)/252, 0 - (v4/252))), 0), 2 + 0)) <= min(max(max(max(max(0 - (v4/252), 0 - (v4/252)), max(((v3 - v4) + 251)/252, 0 - (v4/252))), max(((v3 - v4) + 251)/252, 0 - (v4/252))), 0), 2 + 0))"
((((((v0*2) + v1)*4) + v2) + -5) < (((((v0*2) + v1)*4) + (v2 + 1)) + -5))
"(0 == ((0 + ((min(v0 - v1, -11)*2) + 26)) - 1))"
"(((((((uint1)1 && (((((0*4) + (min(v0, 16) + v1)) + 0) + -18) <= ((min(v0, 16) + v1) + -18))) && (((((0*4) + (max(min(v0, 16), v0 + 20) + v1)) + 3) + -18) >= ((v0 + v1) + 2))) && (((v2 + v3) + 3) <= ((v2 + v3) + -2))) && (((v2 + v3) + 3) >= ((v2 + v3) + 3))) && (0 <= 0)) && (0 >= 0))"
"(((((((uint1)1 && (((0 + ((min(v0, 500) + v1) + v2)) + -503) <= (((0 + (min(v0, 500) + v1)) + v2) + -503))) && (((3 + (((((max(v0, 500) + 9)/4)*4) + (min(v0, 500) + v1)) + v2)) + -503) >= (((((4 + 0) - 1) + ((((max(v0, 500) + 9)/4)*4) + (min(v0, 500) + v1))) + v2) + -503))) && ((-5 + (v3 + -3)) <= (-5 + (v3 + -3)))) && ((((6 + -5) - 1) + ((135 + (v3 + -3)) - 1)) >= (((6 + -5) - 1) + ((135 + (v3 + -3)) - 1)))) && (v4 <= v4)) && (v4 >= v4))"
(((v0 + v1) + -5) >= ((((v0 - 1) + v1) + 1) + 1))
"(max(min(248 - v0, (0 + 32) - 1) + 1, min(max(0 - v0, 0), 32 + 0)) <= min(max(0 - v0, 0), 32 + 0))"
(((v0*9) + 9) <= (v0*9))
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= ((v0*4) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + v1) + 3))) && ((v2/8) <= (v2/8))) && ((((v3 + v2) + 7)/8) >= (((v3 + v2) + 7)/8))) && (v4 <= v4)) && (v4 >= v4))
(((((((uint1)1 && (((((v0*4) + v1) + 0) + -4) <= ((((v0*4) + 0) + v1) + -4))) && (((((v0*4) + v1) + 3) + -4) >= ((((v0*4) + ((4 + 0) - 1)) + v1) + -4))) && (0 <= 0)) && (0 >= 0)) && (v2 <= v2)) && (v2 >= v2))
((((v0*-504)/4)*4) == (v0*-504))
((v0 + -10) == (((v0 + -10) + 8) - 1))
"(max(min(248, ((v1 + v2) + 3) - 1) + 1, min(max(0, v1 + v2), 3 + (v1 + v2))) <= min(max(0, v1 + v2), 3 + (v1 + v2)))"
((((v0*-16)/2)*2) == (v0*-16))
(((v0 + 21)/8) != 0)
"(0 == ((0 + ((max(min((((v0 + v1) + 3)/4) - v2, 1), -1)*4) + 4)) - 1))"
"(((((((uint1)1 && ((v0/8) <= (((min(0*8, 14) + 0) + v0)/8))) && (((v0 + 21)/8) >= (((min(((3 + 0) - 1)*8, 14) + ((8 + 0) - 1)) + v0)/8))) && (((v1*2) + v2) <= (((v1*2) + 0) + v2))) && ((((v1*2) + v2) + 1) >= (((v1*2) + ((2 + 0) - 1)) + v2))) && (0 <= (min(0*4, 133) + 0))) && (139 >= (min(((35 + 0) - 1)*4, 133) + ((4 + 0) - 1))))"
"(((((((uint1)1 && ((0 + ((((v3*2) + v4)*32) + v5)) <= (((v3*64) + (v4*32)) + v5))) && ((3 + (((((v3*2) + v4)*32) + v5) + 28)) >= (((v3*64) + ((v4*32) + 31)) + v5))) && (((min(v1*4, 7) + min(v2*11, 53)) + v6) <= ((min(v2*11, 53) + min(v1*4, 7)) + v6))) && ((((min(v2*11, 53) + min(v1*4, 7)) + v6) + 3) >= (((min(v2*11, 53) + min(v1*4, 7)) + 3) + v6))) && (((min(v7, 1)*9) + (min(v8*2, 7) + v9)) <= ((min(v7, 1)*9) + (min(v8*2, 7) + v9)))) && (((min(v7, 1)*9) + (min(v8*2, 7) + v9)) >= ((min(v7, 1)*9) + (min(v8*2, 7) + v9))))"
((((v0*-500)/20)*20) == (v0*-500))
"(max(min((((((v3 + v4) + 3)/4) - (v4/4)) + -31)/32, (0 + ((v2/32) + 1)) - 1) + 1, min(max((((((v3 + v4) + 3)/4) - (v4/4))/32) + 1, 0), ((v2/32) + 1) + 0)) <= min(max((((((v3 + v4) + 3)/4) - (v4/4))/32) + 1, 0), ((v2/32) + 1) + 0))"
((((v0*8) + ((v1*4) + v2)) + v3) < (((v0*8) + ((v1*4) + (v2 + 1))) + v3))
(((((((uint1)1 && ((((((v0*4) + v1) + -2) + 0) + -1) <= (((((v0*4) + v1) + 0) + -2) + -1))) && ((((((v0*4) + v1) + ((11 + -2) - 1)) + 3) + -1) >= (((((v0*4) + v1) + ((4 + 0) - 1)) + ((11 + -2) - 1)) + -1))) && (v2 <= v2)) && (v2 >= v2)) && (v3 <= v3)) && (v3 >= v3))
"(((((((uint1)1 && ((0 + ((min(max(v0*112, -9), (v0*112) + 108) + v1) + 5)) <= ((0 + (((v0*112) + v1) + -9)) + 5))) && ((3 + (min((((min(v0*112, -9)/4)*4) + (max(v0*112, -9) + v1)) + 12, (v0*112) + v1) + 113)) >= ((3 + (((v0*112) + v1) + 228)) + 5))) && ((v2 + -4) <= (v2 + -4))) && ((v2 + 12) >= (v2 + 12))) && (0 <= 0)) && (2 >= 2))"
"((((max(min(v1*8, 113), -11) + (max(min(v1*8, 125), 1)*-1))/2)*2) == (max(min(v1*8, 113), -11) + (max(min(v1*8, 125), 1)*-1)))"
(((((((uint1)1 && ((v0 + v1) <= (v0 + v1))) && ((v0 + v1) >= (v0 + v1))) && ((0 + ((v2*8) + v3)) <= ((v2*8) + v3))) && ((3 + (((v2*8) + v3) + 4)) >= (((v2*8) + 7) + v3))) && (0 <= 0)) && (0 >= 0))
"(((max(max(min(v0*2, 371), -128) - max(min(v0*2, 499), 0), max(min(v0*2, 243), -256) - max(min(v0*2, 371), -128))*4) + 523) <= 1024)"
(((v0 + v1) + 58) == ((((v0 + v1) + 58) + 75) - 1))
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (v2 <= (0 + v2))) && ((v2 + 124) >= (((125 + 0) - 1) + v2))) && (v3 <= v3)) && (((v4 + v3) + -1) >= ((v4 + v3) - 1)))
"(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && ((min(v2*32, 93) + v3) <= ((min(v2*32, 93) + 0) + v3))) && (((min(v2*32, 93) + v3) + 31) >= ((min(v2*32, 93) + ((32 + 0) - 1)) + v3))) && (v4 <= v4)) && (v4 >= v4))"
"(((((((uint1)1 && (((((v1*4) + v2)*4) + 0) <= (((0 + ((v1*4) + v2))*4) + 0))) && (((((((((min(((v0*16) + v1)*4, 122) + 3)/4) - (v0*16)) - v1)*4) + ((v1*4) + v2))*4) + 15) >= (((1 + (((((v1*-2) + ((min(((v0*16) + v1)*4, 122)/2) - (v0*32)))*2) + ((v1*4) + v2)) + 2))*4) + 3))) && (((v3*4) + 0) <= ((v3*4) + 0))) && (((v3*4) + ((4 + 0) - 1)) >= ((v3*4) + ((4 + 0) - 1)))) && (0 <= 0)) && (19 >= 19))"
((((v0*64) + 140)/36) != 0)
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (v2 <= v2)) && (v2 >= v2)) && (0 <= 0)) && (0 >= 0))
"((((max(v0, 3)*-8)/4)*4) == (max(v0, 3)*-8))"
((4 - (v0*2)) >= (509 - (v0*2)))
(((v0 + 255)/252) != 0)
"(0 == ((0 + (18 - (max(min(v0, 2), 1)*9))) - 1))"
"(max(min(1999, ((((v1*125) + v2)*4) + ((v3*4) + 8)) - 1) + 1, min(max(0, ((v1*125) + v2)*4), ((v3*4) + 8) + (((v1*125) + v2)*4))) <= min(max(0, ((v1*125) + v2)*4), ((v3*4) + 8) + (((v1*125) + v2)*4)))"
"(max(0, min((((min(v0*32, 93) + (min(v1*125, v2 + -125) + v3)) % 4) + 19)/16, (0 + ((((min(v0*32, 93) + v4) % 4) + 47)/16)) - 1) + 1) <= 0)"
((((v0*-144)/16)*16) == (v0*-144))
(((((((uint1)1 && (((v0*4) + 0) <= ((v0*4) + 0))) && (((v0*4) + ((4 + 0) - 1)) >= ((v0*4) + ((4 + 0) - 1)))) && (((((v1*4) + v2)*4) + 0) <= (((((v1*4) + v2) + 0)*4) + 0))) && (((((v1*4) + v2)*4) + 15) >= (((((v1*4) + v2) + 3)*4) + 3))) && (0 <= 0)) && (19 >= 19))
((((v0*64)/64)*64) == (v0*64))
(0 >= ((0 + ((((v0 + v1) % 8) + 539)/32)) - 1))
(0 == ((0 + ((((v0 + v1) % 4) + 78)/16)) - 1))
(((v0*4) + v1) < ((v0*4) + (v1 + 1)))
"(((((((uint1)1 && ((v0*2) <= ((v0*2) + 0))) && (((((((v1 - v0)/3)*3) + v0)*2) + 6) >= (((((((v1 - v0)/3)*3) + v0) + 2)*2) + 2))) && ((max(v2*2, ((v3 + v2)*2) + 1) + -10) <= ((((v3 + v2)*2) + 0) + -10))) && ((((v3 + v2)*2) + -8) >= ((((v3 + v2)*2) + 2) + -10))) && (((0*4) + 0) <= ((0*4) + 0))) && (((4*4) + 3) >= ((4*4) + 3)))"
"(max(min(min(min((((v4 - v5)/4) + (v6*-2)) + -1, ((((v2 + v3) - v5)/4) + (v6*-2)) + -1), (((min((v2 + v3) + 3, v4) - v5)/4) + (v6*-2)) + -1), (0 + ((v1 + 3)/4)) - 1) + 1, min(max(((v3 - ((v6*8) + v5)) + 3)/4, 0), ((v1 + 3)/4) + 0)) <= min(max(((v3 - ((v6*8) + v5)) + 3)/4, 0), ((v1 + 3)/4) + 0))"
((((v0*2) + 141)/129) != 0)
"(((((((uint1)1 && (((((0*4) + max((max(((v2*5) + v3)*8, 71) + min((v3*8) + ((v2*40) + v4), v4 + 71)) + -71, (v3*8) + ((v2*40) + v4))) + 0) + -10) <= (max(max(((v2*5) + v3)*8, 71) + -80, -2) + (((v3*8) + ((v2*40) + v4)) + -8)))) && (((((((min((min(((v2*5) + v3)*8, 71) - (v3*8)) - (v2*40), -10) + 10)/4)*4) + max(min((v3*8) + ((v2*40) + v4), v4 + 71) + 10, (v3*8) + ((v2*40) + v4))) + 3) + -10) >= (1 + (min(min(78 - (v2*40), (v3*8) + 7) + ((v2*40) + v4), v4 + 78) + -8)))) && ((-2 + v5) <= (-2 + v5))) && ((((4 + -2) - 1) + v5) >= (((4 + -2) - 1) + v5))) && (0 <= 0)) && (2 >= ((3 + 0) - 1)))"
"(((v0*8) + 11) < (min(max(v1*8, ((v0 + 1)*8) + 5), (v0 + 1)*8) + -1))"
"((((max(v0, 1)*-4)/4)*4) == (max(v0, 1)*-4))"
"(0 == ((0 + (6 - (max(v0, 1)*2))) - 1))"
((((v0*-16)/4)*4) == (v0*-16))
((v0 + -4) >= (((v0 + -4) + 6) - 1))
"(0 == ((0 + ((min((max(min((((v0 + v1) + -1)/125)*8, 113), -11) - (v2*32)) - max(min((v1/125)*8, 125), 1), 19)*4) + 52)) - 1))"
"(max(min(v0, 19), min(19, (min(v0, 19) + (20 - min(v0, 19))) - 1) + 1) <= min(v0, 19))"
"(((((((uint1)1 && (max(min((v0*4) + ((v1*2) + v2), 1999), (v0*4) + ((v1*2) + v2)) <= ((v0*4) + ((v1*2) + v2)))) && (((v0*4) + ((v1*2) + v2)) >= ((v0*4) + ((v1*2) + v2)))) && (((((0*4) + v3)*4) + 0) <= (((0 + v3)*4) + 0))) && ((((((7 - max(v4, 7))*4) + v3)*4) + 15) >= (((((max(v4, 7)*-4) + 31) + v3)*4) + 3))) && (0 <= 0)) && (19 >= 19))"
"(((v0*8) + -5) == ((((v0*8) + -5) + ((min(v1, 3)*8) + 8)) - 1))"
((((v0/4)*4) + -17) == (((((v0/4)*4) + -17) + ((v1*4) + 24)) - 1))
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= ((v0*4) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + v1) + 3))) && ((v2/8) <= (v2/8))) && (((v2 + 132)/8) >= ((v2 + 132)/8))) && (0 <= 0)) && (0 >= 0))
((1 - v0) > (125 - v0))
"(((max(min((v1*-1000) + (max(v2*4, -3) - min((v3/4)*4, 1999)), 996), -8)/4)*4) == max(min((v1*-1000) + (max(v2*4, -3) - min((v3/4)*4, 1999)), 996), -8))"
"((-6 - max(v0, 0)) == (((-6 - max(v0, 0)) + (max(v0, 0) + 8)) - 1))"
"(max(-270 - (v0*2), (v0*2) + 12) >= 0)"
"(((((((uint1)1 && ((0 + (min(v0*252, 248) + v1)) <= (min(v0*252, 248) + v1))) && ((127 + ((min(v0*252, 248) + v1) + 128)) >= ((min(v0*252, 248) + 251) + v1))) && ((((0*4) + v2) + 0) <= (0 + v2))) && ((((31*4) + v2) + 3) >= (((125 + 0) - 1) + v2))) && (v3 <= v3)) && (v3 >= v3))"
"(((((((uint1)1 && ((((((v0*16) + -5) + v1) + 0) + 3) <= (((v0*16) + v1) + -2))) && ((((((v0*16) + 15) + v1) + 3) + 3) >= (((v0*16) + v1) + 18))) && ((max(v2 + 9, min(v3, 4) + v4) + -6) <= (v2 + -2))) && ((v2 + 3) >= (v2 + 3))) && (0 <= 0)) && (0 >= 0))"
(v0 == ((v0 + 16) - 1))
(((((((uint1)1 && ((0 + ((v0*8) + v1)) <= ((v0*8) + v1))) && ((3 + (((v0*8) + v1) + 4)) >= (((v0*8) + 7) + v1))) && ((v2 + v3) <= (v2 + v3))) && ((v2 + v3) >= (v2 + v3))) && (v4 <= v4)) && (((v5 + v4) + -1) >= ((v5 + v4) - 1)))
((v0 + -4) >= (((v0 - 1) + 5) + 1))
"(max(((v0 + v1) + v2) + -1, v3 + v1) >= ((((v0 + v1) + (v2 - 1)) + -1) + 1))"
(((v0*4) + 128) <= (v0*4))
"(((((((uint1)1 && (((0 + (min(v0, 4) + v1)) + -4) <= (0 + ((min(v0, 4) + v1) + -4)))) && (((3 + ((((max(v0, 4) + -1)/4)*4) + (min(v0, 4) + v1))) + -4) >= (((4 + 0) - 1) + ((v0 + v1) + -4)))) && ((v2/125) <= (((min(0*32, 93) + 0) + v2)/125))) && (((v2 + 124)/125) >= (((min(((4 + 0) - 1)*32, 93) + ((32 + 0) - 1)) + v2)/125))) && (v3 <= v3)) && (v3 >= v3))"
((((v0*0)/128)*128) == (v0*0))
"(max(min(min(min(min(min(min(min(min(min(((v4 - v5)/4) + -1, ((min(((v2 + v3)/4) + 5, v4) - v5)/4) + -1), ((min(((v2 + v3) + 19)/4, v4) - v5)/4) + -1), ((min(((v2 + v3) + 21)/4, v4) - v5)/4) + -1), ((min(((v2 + v3) + 22)/4, v4) - v5)/4) + -1), ((((v2 + v3)/4) - v5) + -2)/4), (((((v2 + v3) + -17)/4) - v5) + 2)/4), (((((v2 + v3) + -15)/4) - v5) + 2)/4), (((((v2 + v3) + -14)/4) - v5) + 2)/4), (0 + ((((min((v6/4) + (((min((v7*252) + 251, v8) + 14)/4)*4), min(((v9 + v6) + -1)/4, ((v6/4) + (v7*252)) + 251) + 11) - (v7*252)) - (v6/4)) + 3)/4)) - 1) + 1, min(max(max(max(max((((v3/4) - v5) + 5)/4, ((((v3 + -1)/4) - v5) + 5)/4), ((((v3 + 1)/4) - v5) + 5)/4), ((((v3 + 2)/4) - v5) + 5)/4), 0), ((((min((v6/4) + (((min((v7*252) + 251, v8) + 14)/4)*4), min(((v9 + v6) + -1)/4, ((v6/4) + (v7*252)) + 251) + 11) - (v7*252)) - (v6/4)) + 3)/4) + 0)) <= min(max(max(max(max((((v3/4) - v5) + 5)/4, ((((v3 + -1)/4) - v5) + 5)/4), ((((v3 + 1)/4) - v5) + 5)/4), ((((v3 + 2)/4) - v5) + 5)/4), 0), ((((min((v6/4) + (((min((v7*252) + 251, v8) + 14)/4)*4), min(((v9 + v6) + -1)/4, ((v6/4) + (v7*252)) + 251) + 11) - (v7*252)) - (v6/4)) + 3)/4) + 0))"
"(max(0, min(((v0 % 8) + 983)/32, (0 + 32) - 1) + 1) <= 0)"
"(max(min(17 - (v0*9), (0 + 9) - 1) + 1, min(max(0 - (v0*9), 0), 9 + 0)) <= min(max(0 - (v0*9), 0), 9 + 0))"
(v0 >= ((v0 + 2) - 1))
(((((v0 + v1) + v2) + v3)/4) >= (((((((v0 - 1) + v1) + v2) + v3)/4) + 1) + 1))
((-6 - (((v0*4) + v1)*2)) > (499 - (((v0*4) + v1)*2)))
(((v0 + v1) + -4) >= ((((v0 - 1) + v1) + 5) + 1))
(((((((uint1)1 && ((((0*4) + v0) + 0) <= v0)) && ((((15*4) + v0) + 3) >= (v0 + 63))) && ((v1/4) <= (v1/4))) && (((v1/4) + 32) >= ((v1/4) + 32))) && (v2 <= v2)) && (v2 >= v2))
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && ((v2*4) <= (v2*4))) && ((v2*4) >= (v2*4))) && (0 <= 0)) && (2 >= ((3 + 0) - 1)))
((((v0*4) + 181)/126) != 0)
"(((((((uint1)1 && ((((v0*4) + 0) + v1) <= (((v0*4) + 0) + v1))) && ((((v0*4) + ((4 + 0) - 1)) + v1) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (((min(v2*3, 13) + v3) + v4) <= ((min(v2*3, 13) + v3) + v4))) && (((min(v2*3, 13) + v3) + v4) >= ((min(v2*3, 13) + v3) + v4))) && ((min(v5*4, 133) + 0) <= (min(v5*4, 133) + 0))) && ((min(v5*4, 133) + 3) >= (min(v5*4, 133) + ((4 + 0) - 1))))"
"((34 - max((v0 % 7)*5, 29)) >= (((34 - max((v0 % 7)*5, 29)) + (max((v0 % 7)*5, 29) + -29)) - 1))"
"(0 == ((0 + ((min(v0, -1)*2) + 6)) - 1))"
"(max(min(min(min(min(min(min(1999, 1999), 1999), min(v1 + v2, 2000) + -1), min(v1 + v2, 2000) + -1), min(v1 + v2, 2000) + -1), ((v3 + -2) + 130) - 1) + 1, min(max(max(max(max(max(max(max(max(max(0, 0), 0), 0), 0), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), v3 + -2), 130 + (v3 + -2))) <= min(max(max(max(max(max(max(max(max(max(0, 0), 0), 0), 0), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), v3 + -2), 130 + (v3 + -2)))"
(((((((uint1)1 && ((v0 + 0) <= (0 + v0))) && ((v0 + 3) >= (((4 + 0) - 1) + v0))) && (v1 <= v1)) && (v1 >= v1)) && (0 <= 0)) && (0 >= 0))
"(max(min(v0, 0), -127) >= ((max(min(v0, 0), -127) + (5 - max(min(v0, 0), -127))) - 1))"
(((v0 + v1) + -16) == ((((v0 + v1) + -16) + 143) - 1))
"((v0 + 3) < (min(max(v1*8, (v0 + 1) + 4) + 1, v0 + 1) + -2))"
(((v0 + v1) + -4) < (((v0 + 1) + v1) + -7))
"(((max(min((v0*-668) + v1, 668), 448)/4)*4) == max(min((v0*-668) + v1, 668), 448))"
"((((min(v0*42, 83) + (v1*3)) + v2) + 5) < (((min(v0*42, 83) + ((v1 + 1)*3)) + v2) + -2))"
"(max(min((114 - v0)/8, (-1 + 4) - 1) + 1, min(max(max(max(0, 0), (4 - v0)/8), -1), 4 + -1)) <= min(max(max(max(0, 0), (4 - v0)/8), -1), 4 + -1))"
"(0 == ((0 + ((max(min((((v0 + v1) + 31)/4) - v2, -1), -3)*4) + 12)) - 1))"
"(((((((uint1)1 && ((max(v0 + 4, v1) + -3) <= (-3 + v0))) && ((v0 + 1) >= (((5 + -3) - 1) + v0))) && (((((0*4) + v2) + -3) + 0) <= (-3 + v2))) && (((((((4 + 0) - 1)*4) + v2) + ((5 + -3) - 1)) + 3) >= (((5 + -3) - 1) + (v2 + 15)))) && (v3 <= v3)) && (v3 >= v3))"
((((v0 + v1)/4)*4) >= (((((v0 + v1)/4)*4) + 128) - 1))
(((((v0*503) + v1) + ((v2*16) + v3)) + -2) < ((((v2*16) + (v3 + 1)) + ((v0*503) + v1)) + -11))
(((v0 + 75)/63) != 0)
"(((((((uint1)1 && (((min(v0, 4) + v1) + -4) <= (0 + ((min(v0, 4) + v1) + -4)))) && (((v0 + v1) + -1) >= (((4 + 0) - 1) + ((v0 + v1) + -4)))) && ((0 + ((min(v2*16, 47) + (v3*8)) + v4)) <= ((min(v2*16, 47) + (v3*8)) + v4))) && ((3 + (((min(v2*16, 47) + (v3*8)) + v4) + 4)) >= (((min(v2*16, 47) + (v3*8)) + 7) + v4))) && (v5 <= v5)) && (((v6 + v5) + -1) >= ((v6 + v5) - 1)))"
(((((((uint1)1 && (((((0*4) + 0) + (v0/4)) + -2) <= ((0 + (v0/4)) + -2))) && (((((32*4) + 3) + ((v0/4) + 132)) + -2) >= ((3 + ((v0/4) + 260)) + -2))) && ((0 + (v1/4)) <= (v1/4))) && ((2 + ((v1/4) + 30)) >= ((33 + (v1/4)) - 1))) && ((v2*16) <= ((v2*16) + 0))) && (((v2*16) + 15) >= ((v2*16) + ((16 + 0) - 1))))
"(0 == ((0 + ((max(min(max(min((((v0 + v1) + -1)/125)*8, 113), -11) - v2, -5), -13)*2) + 26)) - 1))"
((((v0*2) + v1)*2) == (((((v0*2) + v1)*2) + 2) - 1))
(((((((uint1)1 && ((-2 + v0) <= (-2 + v0))) && ((((4 + -2) - 1) + v0) >= (((4 + -2) - 1) + v0))) && (((((0*4) + v1) + 0) + -7) <= (-2 + (v1 + -5)))) && (((((252*4) + v1) + 3) + -7) >= (((4 + -2) - 1) + (v1 + 1000)))) && (v2 <= v2)) && (v2 >= v2))
"(max(min(min((233 - v1)/16, (234 - v1)/16), (0 + 4) - 1) + 1, min(max(max(0 - (v1/16), (14 - v1)/16), 0), 4 + 0)) <= min(max(max(0 - (v1/16), (14 - v1)/16), 0), 4 + 0))"
"(((((((uint1)1 && (((((0*4) + v0)*4) + 0) <= (((((0*2) + v0) + 0)*4) + 0))) && (((((((16 - max(((v1*2) + v2)*4, 13))/4)*4) + v0)*4) + 15) >= (((((((((16 - max(((v1*2) + v2)*4, 13))/4)*2) + 1)*2) + v0) + 1)*4) + 3))) && ((((((min(v3, 1000) + v4)/4) + (v5*250))*4) + -1000) <= (((((min(v3, 1000) + v4)/4) + (v5*250))*4) + -1000))) && ((((((min(v3, 1000) + v4)/4) + (v5*250))*4) + -1) >= (((((min(v3, 1000) + v4)/4) + (v5*250))*4) + -1))) && (0 <= 0)) && (19 >= 19))"
"(((((((uint1)1 && ((((((v0*4) + v1) + -2) + 0) + -5) <= (-2 + (((v0*4) + v1) + -5)))) && ((((((v0*4) + v1) + ((4 + -2) - 1)) + 3) + -5) >= (((4 + -2) - 1) + (min(((v0*4) + v1) - max(v0*4, 1002), v1) + 1000)))) && (0 <= 0)) && ((4 - 1) >= (4 - 1))) && (v2 <= v2)) && (v2 >= v2))"
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((62*4) + v0) + 3) >= (((((63 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && ((((v1*500) + v2) + v3) <= (((v1*500) + v2) + v3))) && ((((v1*500) + v2) + v3) >= (((v1*500) + v2) + v3))) && (0 <= 0)) && (0 >= 0))
"(((((((uint1)1 && (((((((min(v0*8, (v1*8) + 4) + -5)/8)*2) + 0)*4) + 0) <= (((min(v0*8, (v1*8) + 4) + -5)/8)*8))) && (((((((min(v0*8, (v1*8) + 4) + -5)/8)*2) + ((v1 - ((min(v0*8, (v1*8) + 4) + -5)/8))*2))*4) + 3) >= ((v1*8) + 3))) && ((max(v2*8, v3 + 10) + -5) <= v3)) && ((v3 + 5) >= (v3 + 5))) && (0 <= 0)) && (0 >= 0))"
"((((max(min(min((v4*2) + (((v3 + min(v5*125, v6 + -125))/8) + -5), ((v3 + min(v5*125, v6 + -125)) + 124)/8)*2, 495), -4) + (max(min(min((v4*2) + (((v3 + min(v5*125, v6 + -125))/8) + -5), ((v3 + min(v5*125, v6 + -125)) + 124)/8)*2, 499), 0)*-1))/4)*4) == (max(min(min((v4*2) + (((v3 + min(v5*125, v6 + -125))/8) + -5), ((v3 + min(v5*125, v6 + -125)) + 124)/8)*2, 495), -4) + (max(min(min((v4*2) + (((v3 + min(v5*125, v6 + -125))/8) + -5), ((v3 + min(v5*125, v6 + -125)) + 124)/8)*2, 499), 0)*-1)))"
"(((((((uint1)1 && ((0 + ((min(v1*64, 436) + (((v2*4) + v3)*4)) + v4)) <= ((min(v1*64, 436) + (((v2*4) + v3)*4)) + v4))) && ((3 + ((min(v1*64, 436) + (((v2*4) + v3)*4)) + v4)) >= ((min(v1*64, 436) + ((((v2*4) + v3)*4) + 3)) + v4))) && ((((v5*250) + (min(v6*32, 218) + v7)) + v8) <= (((v5*250) + (min(v6*32, 218) + v7)) + v8))) && ((((v5*250) + (min(v6*32, 218) + v7)) + v8) >= (((v5*250) + (min(v6*32, 218) + v7)) + v8))) && (v9 <= v9)) && (v9 >= v9))"
"((((min(min(v0*8, 252) + v1, ((v2 + v3) + 15)/4)*4)/4)*4) == (min(min(v0*8, 252) + v1, ((v2 + v3) + 15)/4)*4))"
"((((((min(v0, 1000) + v1)/4) + (v2*250))*4) + -1) < (((((min(v0, 1000) + v1)/4) + ((v2 + 1)*250))*4) + -1000))"
"((max(min((v0*8) - v1, 5), -2) + -7) >= (((max(min((v0*8) - v1, 5), -2) + -7) + (9 - max(min((v0*8) - v1, 5), -2))) - 1))"
((0 - (v0*32)) > (63 - (v0*32)))
((((v0*-336)/4)*4) == (v0*-336))
"(max(0, min((((min(v0*64, v1 + -64) + v2) % 4) + 55)/16, (0 + 5) - 1) + 1) <= 0)"
"(((min(v0*32, 93) + ((v1*4) + v2)) + v3) < ((min(v0*32, 93) + ((v1*4) + (v2 + 1))) + v3))"
"(max(0, min(min(((((v0 + v1) - v2)/4) + (v3*-63)) + -1, ((max(min(min(v3*252, 248) + v2, 1748), -251) - max(min(min(v3*252, 248) + v2, 1999), 0))/4) + 62), (0 + ((v4 + 255)/4)) - 1) + 1) <= 0)"
"(-124 == ((-124 + (131 - max(v0*4, 3))) - 1))"
"(((((((uint1)1 && (((v0 + v1) % 16) <= ((v0 + v1) % 16))) && (((v0 + v1) % 16) >= ((v0 + v1) % 16))) && ((((0*4) + v2) + 0) <= (((0*4) + v2) + 0))) && ((((((32 - max(v3*4, 29))/4)*4) + v2) + 3) >= ((((((((29 - max(v3*4, 29)) + 7)/4) + 0) - 1)*4) + v2) + ((4 + 0) - 1)))) && (v4 <= v4)) && (v4 >= v4))"
"(0 == ((0 + (34 - max(v0*12, 21))) - 1))"
(((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && (((((v1*4) + v2) + 0) + -2) <= ((((v1*4) + 0) + v2) + -2))) && (((((v1*4) + v2) + 3) + -2) >= ((((v1*4) + ((4 + 0) - 1)) + v2) + -2))) && (v3 <= v3)) && (v3 >= v3))
"(((1999 - max((v0*3) + v1, 1999)) + (max((v0*3) + v1, 1999) + -1996)) <= (1999 - max((v0*3) + v1, 1999)))"
"(max(min(248 - v0, (0 + 64) - 1) + 1, min(max(0 - v0, 0), 64 + 0)) <= min(max(0 - v0, 0), 64 + 0))"
"(((((((uint1)1 && (((0 + (max(v0*32, -5) + v1)) + 3) <= ((0 + ((v0*32) + v1)) + -2))) && (((3 + ((((min(v0*32, -5)/4)*4) + (max(v0*32, -5) + v1)) + 36)) + 3) >= ((3 + (((v0*32) + v1) + 28)) + 3))) && (((v2*8) + -1) <= (-2 + ((v2*8) + 1)))) && (((v2*8) + 11) >= (3 + ((v2*8) + 8)))) && (v3 <= v3)) && (v3 >= v3))"
(((v0 + v1) + 58) >= ((((v0 + v1) + 58) + 75) - 1))
(((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && ((((0*4) + ((v1/125) + (v2*4))) + 0) <= (0 + ((v1/125) + (v2*4))))) && ((((0*4) + ((v1/125) + (v2*4))) + 3) >= (((4 + 0) - 1) + ((v1/125) + (v2*4))))) && (((v3*32) + 0) <= ((v3*32) + 0))) && (((v3*32) + ((32 + 0) - 1)) >= ((v3*32) + ((32 + 0) - 1))))
"(max(min(min(min(min(min(min(min(min(min(min(min(min(min(min(4, 4), 4), 4), (1988 - v4)/12), (1988 - v4)/12), (1992 - v4)/12), (1992 - v4)/12), (1996 - v4)/12), (1996 - v4)/12), (1999 - v4)/12), min(((min(v2 + v3, 2000) - v4) + -1)/12, 4)), min(((min(v2 + v3, 2000) - v4) + -1)/12, 4)), min((1999 - v4)/12, 4)), (0 + 6) - 1) + 1, min(max(max(max(max(max(max(0 - (v4/12), 0 - (v4/12)), (3 - v4)/12), (7 - v4)/12), max(((v3 - v4) + 11)/12, 0 - (v4/12))), max(((v3 - v4) + 11)/12, 0 - (v4/12))), 0), 6 + 0)) <= min(max(max(max(max(max(max(0 - (v4/12), 0 - (v4/12)), (3 - v4)/12), (7 - v4)/12), max(((v3 - v4) + 11)/12, 0 - (v4/12))), max(((v3 - v4) + 11)/12, 0 - (v4/12))), 0), 6 + 0))"
((((v0 + v1) + v2) + -4) >= (((((v0 - 1) + v1) + v2) + 5) + 1))
"(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((31*4) + v0) + 3) >= (((31*4) + ((4 + 0) - 1)) + v0))) && (((min(v1*8, 117) + v2) + v3) <= ((min(v1*8, 117) + v2) + v3))) && (((min(v1*8, 117) + v2) + v3) >= ((min(v1*8, 117) + v2) + v3))) && (v4 <= v4)) && (v4 >= v4))"
(((((((uint1)1 && ((0 + v0) <= (((0*4) + 0) + v0))) && ((3 + (v0 + 248)) >= (((((63 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (v3 <= v3)) && (((v4 + v3) + -1) >= ((v4 + v3) - 1)))
"(0 == ((0 + (35 - max(v0*18, 17))) - 1))"
"((((v0*68) + (v1 + v2)) + -10) == (((((v0*68) + (v1 + v2)) + -10) + (143 - max(v0*68, 67))) - 1))"
"(((min(v0*11, 53) + (min(v1*4, 7) + v2)) + v3) < ((min(v0*11, 53) + (min(v1*4, 7) + (v2 + 1))) + v3))"
(((((((uint1)1 && ((((((v0*16) + v1) + v2) + 0) + -2) <= ((((v0*16) + v1) + v2) + -11))) && ((((((v0*16) + v1) + v2) + 3) + -2) >= ((((v0*16) + v1) + v2) + -2))) && ((((v3*12) + v4) + -11) <= (((v3*12) + v4) + -11))) && ((((v3*12) + v4) + 9) >= (((v3*12) + v4) + 9))) && (0 <= 0)) && (2 >= 2))
"(max(min(min(min(1999, 1999), min(v1 + v2, 2000) + -1), ((((v3*70) + v4) + -10) + (146 - max(v3*70, 73))) - 1) + 1, min(max(max(max(0, 0), max(v2, 0)), ((v3*70) + v4) + -10), (146 - max(v3*70, 73)) + (((v3*70) + v4) + -10))) <= min(max(max(max(0, 0), max(v2, 0)), ((v3*70) + v4) + -10), (146 - max(v3*70, 73)) + (((v3*70) + v4) + -10)))"
"(max(min(min(min(min((min(min(2000 - v5, v4), (v7 + v6) - v5)/125) + -1, (min(min(2000 - v5, v4), (v7 + v6) - v5)/125) + -1), (min(min(2124 - v5, v4), ((v7 + v6) - v5) + 124)/125) + -1), (min(min(2124 - v5, v4), ((v7 + v6) - v5) + 124)/125) + -1), (0 + ((v4 + 124)/125)) - 1) + 1, min(max(max(max(max((0 - v5)/125, (0 - v5)/125), max(((v6 - v5) + 124)/125, 0 - (v5/125))), max(((v6 - v5) + 124)/125, 0 - (v5/125))), 0), ((v4 + 124)/125) + 0)) <= min(max(max(max(max((0 - v5)/125, (0 - v5)/125), max(((v6 - v5) + 124)/125, 0 - (v5/125))), max(((v6 - v5) + 124)/125, 0 - (v5/125))), 0), ((v4 + 124)/125) + 0))"
"(max(min(1999, ((v1*4) + 8) - 1) + 1, min(max(0, v1*4), 8 + (v1*4))) <= min(max(0, v1*4), 8 + (v1*4)))"
"(((((((uint1)1 && ((v0 + v1) <= (v0 + v1))) && ((v0 + v1) >= (v0 + v1))) && ((v2 + 0) <= (0 + v2))) && ((v2 + 3) >= (((4 + 0) - 1) + v2))) && (min(v3*3, 134) <= (min(v3*3, 134) + 0))) && ((min(v3*3, 134) + 2) >= (min(v3*3, 134) + ((3 + 0) - 1))))"
(((((((uint1)1 && (((((((v0*126) + v1) + v2) + v3) + -3) % 8) <= ((((((v0*126) + v1) + v2) + v3) + -3) % 8))) && (((((((v0*126) + v1) + v2) + v3) + -3) % 8) >= ((((((v0*126) + v1) + v2) + v3) + -3) % 8))) && ((v4 + -8) <= (((0 + v4) + -5) + -3))) && ((v4 + 60) >= (((((64 + 0) - 1) + v4) + ((6 + -5) - 1)) + -3))) && (((v5*4) + 0) <= ((v5*4) + 0))) && (((v5*4) + 3) >= ((v5*4) + ((4 + 0) - 1))))
(((((v0 + v1) + v2) + v3) + -2) >= ((((((v0 - 1) + v1) + v2) + v3) + 1) + 1))
"(((((((min((v0*125) + v1, (v2 + v1) + -125) % 8) + 132)/8)*2)/15)*15) == ((((min((v0*125) + v1, (v2 + v1) + -125) % 8) + 132)/8)*2))"
"(((max(min((v3*-64) + max(max(-127 - (((v1 + v2)/4)*4), (((v1 + v2)/4)*4) + -1999), 0), -64), -132)/4)*4) == max(min((v3*-64) + max(max(-127 - (((v1 + v2)/4)*4), (((v1 + v2)/4)*4) + -1999), 0), -64), -132))"
(((v0 + 64)/63) != 0)
(((((v0 + v1) + v2) + v3) + 3) <= ((((((v0 - 1) + v1) + v2) + v3) + -2) - 1))
"(max(min(124, (((v1*8) + -1) + 13) - 1) + 1, min(max(0, (v1*8) + -1), 13 + ((v1*8) + -1))) <= min(max(0, (v1*8) + -1), 13 + ((v1*8) + -1)))"
(((((((uint1)1 && ((0 + ((((v0*8) + v1)*8) + v2)) <= (((v0*64) + (v1*8)) + v2))) && ((3 + (((((v0*8) + v1)*8) + v2) + 4)) >= (((v0*64) + ((v1*8) + 7)) + v2))) && ((((v3*32) + v4) + v5) <= (((v3*32) + v4) + v5))) && ((((v3*32) + v4) + v5) >= (((v3*32) + v4) + v5))) && (0 <= 0)) && (0 >= 0))
(((v0 + 264)/251) != 0)
((((v0*4) + (v1 + v2)) + -2) >= (((((v0*4) + (v1 + v2)) + -2) + 9) - 1))
"((((min(min((v2*32) + (((v1/250)*2)*32), (min((v2*4) + (((v1/250)*2)*4), ((((v3 + v1) + -1)/250)*8) + 9)*8) + 33)*4, (v2*128) + ((((v1/250)*2)*128) + 3))*-1)/4)*4) == (min(min((v2*32) + (((v1/250)*2)*32), (min((v2*4) + (((v1/250)*2)*4), ((((v3 + v1) + -1)/250)*8) + 9)*8) + 33)*4, (v2*128) + ((((v1/250)*2)*128) + 3))*-1))"
(((((((uint1)1 && ((v0 + -5) <= (-5 + v0))) && ((v0 + 1000) >= (1 + (v0 + 999)))) && ((((v1 + v2) + 0) + 1) <= ((v1 + v2) + -5))) && ((((v1 + v2) + 3) + 1) >= ((v1 + v2) + 1))) && (0 <= 0)) && (1 >= 1))
"((-16 - max(min(v0, 116), -14)) == (((-16 - max(min(v0, 116), -14)) + (max(min(v0, 116), -14) + 18)) - 1))"
(((v0 + v1) + -2) == ((((v0 + v1) + -2) + 69) - 1))
"((max(v0, 4) + 8) >= 0)"
"((v0 + 3) < (min(max((v0 + 1) + 9, min(v1, 4) + v2), (v0 + 1) + 4) + -6))"
((((((v0*8) + v1) + v2)*2) + 2) < ((((v0*8) + v1) + (v2 + 1))*2))
"(((((((uint1)1 && ((((min(v0*48, 620) + (v1*16)) + v2) + -5) <= (-5 + ((min(v0*48, 620) + (v1*16)) + v2)))) && ((((min(v0*48, 620) + (v1*16)) + v2) + 16) >= (1 + (((min(v0*48, 620) + (v1*16)) + v2) + 15)))) && ((((v3 + v4) + 0) + 1) <= ((v3 + v4) + -5))) && ((((v3 + v4) + 3) + 1) >= ((v3 + v4) + 1))) && (0 <= 0)) && (1 >= 1))"
(v0 >= (((v0 - 1) + 5) + 1))
"((max((((max(v0*32, 968)/4)*-4) + ((v0*32) + v1)) - (min(v0*32, 968) + v1), -968) + 1000) <= 1024)"
(((((((uint1)1 && ((0 + ((v0/16) + -2)) <= ((0 + (v0/16)) + -2))) && ((3 + (((v0/16) + ((((v0 % 16) + 499)/64)*4)) + 3)) >= ((((4 + 0) - 1) + ((v0/16) + ((((v0 % 16) + 499)/64)*4))) + ((6 + -2) - 1)))) && ((-2 + v1) <= (-2 + v1))) && ((((6 + -2) - 1) + v1) >= (((6 + -2) - 1) + v1))) && (v2 <= v2)) && (v2 >= v2))
"(max(min(1999, ((((v1*63) + v2) + -2) + 63) - 1) + 1, min(max(0, ((v1*63) + v2) + -2), 63 + (((v1*63) + v2) + -2))) <= min(max(0, ((v1*63) + v2) + -2), 63 + (((v1*63) + v2) + -2)))"
"(max(min(min((((v1 + v2) - (max(min(v4/16, 126), 2)*16)) + -92)/128, ((min(max(min(((v3 + v4) + 47)/16, 124), 0)*16, (v1 + v2) + 115) - (max(min(v4/16, 126), 2)*16)) + -80)/128), (0 + ((v5 + 10)/8)) - 1) + 1, min(max(((v2 - (max(min(v4/16, 126), 2)*16)) + 163)/128, 0), ((v5 + 10)/8) + 0)) <= min(max(((v2 - (max(min(v4/16, 126), 2)*16)) + 163)/128, 0), ((v5 + 10)/8) + 0))"
"(max(min(124, (((((v1*2) + v2)*4) + -1) + 9) - 1) + 1, min(max(0, (((v1*2) + v2)*4) + -1), 9 + ((((v1*2) + v2)*4) + -1))) <= min(max(0, (((v1*2) + v2)*4) + -1), 9 + ((((v1*2) + v2)*4) + -1)))"
"(((((((uint1)1 && (((((0*4) + (((((((v0/8)*2) + v1)*32) + v2)*4) + 3)) + 0) + -20) <= (((((((v0/8)*2) + v1)*32)*4) + ((v2*4) + -5)) + -12))) && (((((3*4) + ((min(v2*4, 3) + ((((v0/8)*2) + v1)*128)) + 115)) + 3) + -20) >= ((((((((v0/8)*2) + v1)*32) + 31)*4) + (min(v2*4, 3) + -2)) + -12))) && (((((v3 + v4)*4) + -5) + -172) <= ((((v3 + v4)*4) + -5) + -172))) && (((((v3 + v4)*4) + ((7 + -5) - 1)) + -172) >= ((((v3 + v4)*4) + ((7 + -5) - 1)) + -172))) && (v5 <= v5)) && (v5 >= v5))"
"(0 == ((0 + ((max(min((min((((v0 + v1) + 3)/4) - (v2*126), (v1/4) + 125) - ((v1/4) + (v3*32)))*4, 122), -7) + 15)/4)) - 1))"
"((v0 + -10) >= (((v0 + -10) + (min(min(v1, 116) + v2, -16) + 17)) - 1))"
(((((((uint1)1 && (((v0*4) + v1) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && ((((v2*4) + v3) + 0) <= (((v2*4) + v3) + 0))) && ((((v2*4) + v3) + 3) >= (((v2*4) + v3) + 3))) && (0 <= 0)) && (2 >= 2))
"((((max(max(v1*64, 188) + (min(((max(v1*64, 188)*-1) + 273)/12, 6)*12), 257)*-1)/4)*4) == (max(max(v1*64, 188) + (min(((max(v1*64, 188)*-1) + 273)/12, 6)*12), 257)*-1))"
"(0 == ((0 + (106 - max(v0*56, 49))) - 1))"
((((v0*8) + 30)/18) != 0)
"(max(min(min(min(40, (((max(min(((v0 + v1) + 47)/16, 124), 0)*2) - v2)/3) + 1), 83 - (v2/3)), (0 + 42) - 1) + 1, min(max(((0 - v2)/3) + 2, 0), 42 + 0)) <= min(max(((0 - v2)/3) + 2, 0), 42 + 0))"
"((min(((v0/4)*4) - v1, 5) + -5) == (((min(((v0/4)*4) - v1, 5) + -5) + (8 - min(((v0/4)*4) - v1, 5))) - 1))"
(((v0*12) + v1) < ((v0*12) + (v1 + 1)))
"(max(-557 - (v0*4), (v0*4) + 55) >= 0)"
((((v0*1000) + v1) + v2) < (((v0*1000) + v1) + (v2 + 1)))
(((v0 + 15)/1008) == ((((v0 + 15)/1008) + ((((v0 + 15) % 1008) + 1007)/1008)) - 1))
"(((((((uint1)1 && ((0 + (min(v0*252, 748) + v1)) <= (min(v0*252, 748) + v1))) && ((3 + ((min(v0*252, 748) + v1) + 248)) >= ((min(v0*252, 748) + 251) + v1))) && ((v2 + v3) <= (v2 + v3))) && ((v2 + v3) >= (v2 + v3))) && (0 <= 0)) && (0 >= 0))"
"(0 == ((0 + ((max(v0, 0) + 138)/4)) - 1))"
"(max(min(min(min(min(((v1 + v2)/4) + 1, ((v1 + v2)/4) + 1), ((v1 + v2) + -2)/4), ((v1 + v2) + -2)/4), (((v3*64) + -43) + 105) - 1) + 1, min(max((v2/4) + 2, (v3*64) + -43), 105 + ((v3*64) + -43))) <= min(max((v2/4) + 2, (v3*64) + -43), 105 + ((v3*64) + -43)))"
((((v0*8) + v1) + 4) < (((v0*8) + (v1 + 1)) + -1))
(((((((uint1)1 && ((((v0*8) + 0) + -5) <= (((v0*8) + 0) + -5))) && ((((v0*8) + ((16 + 0) - 1)) + -5) >= (((v0*8) + ((16 + 0) - 1)) + -5))) && ((((v1*8) + ((v2*3) + v3)) + -5) <= (((v1*8) + ((v2*3) + v3)) + -5))) && ((((v1*8) + ((v2*3) + v3)) + -5) >= (((v1*8) + ((v2*3) + v3)) + -5))) && (((v4*4) + 0) <= ((v4*4) + 0))) && (((v4*4) + 3) >= ((v4*4) + ((4 + 0) - 1))))
((((v0*2) + 269)/257) != 0)
(((((v0*125) + v1) + v2) + -1) < ((((v0*125) + (v1 + 1)) + v2) + -1))
(((v0*2) + 2) < ((v0 + 1)*2))
"((34 - max((v0 % 5)*7, 27)) >= (((34 - max((v0 % 5)*7, 27)) + (max((v0 % 5)*7, 27) + -27)) - 1))"
"(((min(v0*64, 436)/4)*4) == min(v0*64, 436))"
(((((((uint1)1 && ((0 + v0) <= (((0*16) + v0) + 0))) && ((3 + (((((((v1*4) - v0) + 3)/16)*16) + v0) + 12)) >= (((((((v1*4) - v0) + 3)/16)*16) + v0) + ((16 + 0) - 1)))) && (v2 <= v2)) && (v2 >= v2)) && (((v3*2) + v4) <= ((v3*2) + v4))) && (((v3*2) + v4) >= ((v3*2) + v4)))
"(((((((uint1)1 && (((((0*4) + (((min(v0, 500) + v1)/4) + (v2*4))) + 0) + -125) <= ((0 + (((min(v0, 500) + v1)/4) + (v2*4))) + -125))) && (((((0*4) + (((min(v0, 500) + v1)/4) + (v2*4))) + 3) + -125) >= ((((4 + 0) - 1) + (((min(v0, 500) + v1)/4) + (v2*4))) + -125))) && (0 <= 0)) && (0 >= 0)) && (((v3*2) + 0) <= ((v3*2) + 0))) && (((v3*2) + ((2 + 0) - 1)) >= ((v3*2) + ((2 + 0) - 1))))"
(((((v0/4) + v1)*4) + -7) >= ((((((v0/4) + v1)*4) + -7) + 4) - 1))
"(max(0, min(8 - ((v0 % 2)*5), (0 + 5) - 1) + 1) <= 0)"
"(max(min(min(v1 + v2, 3) + -1, (v4 + v3) - 1) + 1, min(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(0, 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), v4), v3 + v4)) <= min(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(0, 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), max(v2, 0)), v4), v3 + v4))"
"(max(min(min(min(min(min(((((v2 + v3) + 55)/8) - v4) + 3, (((v0 + v1) + 18)/8) - v4), (((v0 + v1) + 18)/8) - v4), (((v0 + v1) + 28)/8) - v4), (((v0 + v1) + 28)/8) - v4), (0 + 17) - 1) + 1, min(max((((v1 + 28)/8) - v4) + 1, 0), 17 + 0)) <= min(max((((v1 + 28)/8) - v4) + 1, 0), 17 + 0))"
(((((v0 + v1) + v2) + v3)/4) <= ((((((v0 - 1) + v1) + v2) + v3)/4) - 1))
"(max(min(124, ((((v1/125)*8) + -1) + (((((v1 % 125) + 124)/125)*8) + 13)) - 1) + 1, min(max(0, ((v1/125)*8) + -1), (((((v1 % 125) + 124)/125)*8) + 13) + (((v1/125)*8) + -1))) <= min(max(0, ((v1/125)*8) + -1), (((((v1 % 125) + 124)/125)*8) + 13) + (((v1/125)*8) + -1)))"
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + v1) + 0))) && ((((v0*4) + v1) + 3) >= (((v0*4) + v1) + ((4 + 0) - 1)))) && (0 <= 0)) && (0 >= 0)) && (0 <= 0)) && (((19 + 0) - 1) >= ((19 + 0) - 1)))
"(((min(v0*42, 83) + ((v1*3) + v2)) + v3) < ((min(v0*42, 83) + ((v1*3) + (v2 + 1))) + v3))"
"(0 == ((0 + (500 - max(min((v0*4) + v1, 250)*2, 497))) - 1))"
"(((((((uint1)1 && ((0 + ((min(v0*32, 968) + (v1*4)) + v2)) <= ((min(v0*32, 968) + (v1*4)) + v2))) && ((3 + ((min(v0*32, 968) + (v1*4)) + v2)) >= (((min(v0*32, 968) + (v1*4)) + 3) + v2))) && ((v3 + v4) <= (v3 + v4))) && ((v3 + v4) >= (v3 + v4))) && (v5 <= v5)) && (v5 >= v5))"
((((v0*2) + v1)*4) == (((((v0*2) + v1)*4) + ((v2 - ((v0*2) + v1))*4)) - 1))
(((((((uint1)1 && (0 <= 0)) && (0 >= 0)) && ((v0 + -10) <= ((0 + v0) + -10))) && ((v0 + 4) >= ((((15 + 0) - 1) + v0) + -10))) && (((v1*4) + 0) <= ((v1*4) + 0))) && (((v1*4) + 3) >= ((v1*4) + ((4 + 0) - 1))))
"(((((((uint1)1 && ((0 + ((v0*8) + v1)) <= (0 + ((v0*8) + v1)))) && ((3 + (((v0*8) + v1) + 4)) >= (3 + (((v0*8) + v1) + 4)))) && ((((min(v2, 1000) + v3)/125) + -8) <= ((0 + ((min(v2, 1000) + v3) + -1000))/125))) && ((((v2 + v3) + -1)/125) >= ((((1000 + 0) - 1) + ((v2 + v3) + -1000))/125))) && (v4 <= v4)) && (((v5 + v4) + -1) >= ((v5 + v4) + -1)))"
"(max(min(1999, ((v1*4) + 128) - 1) + 1, min(max(0, v1*4), 128 + (v1*4))) <= min(max(0, v1*4), 128 + (v1*4)))"
"(max(min((v1 + v2) + -1, ((((v3*125) + v4) + -1) + 130) - 1) + 1, min(max(v2, ((v3*125) + v4) + -1), 130 + (((v3*125) + v4) + -1))) <= min(max(v2, ((v3*125) + v4) + -1), 130 + (((v3*125) + v4) + -1)))"
"(((((((uint1)1 && ((0 + ((min(v1*64, 436) + (v2*32)) + v3)) <= ((min(v1*64, 436) + (v2*32)) + v3))) && ((3 + (((min(v1*64, 436) + (v2*32)) + v3) + 28)) >= ((min(v1*64, 436) + ((v2*32) + 31)) + v3))) && ((0 + v4) <= (0 + v4))) && ((((32 + 0) - 1) + v4) >= (((32 + 0) - 1) + v4))) && (v5 <= v5)) && (v5 >= v5))"
(((v0*3) + 3) <= (v0*3))
(((((((uint1)1 && ((((v0*125) + 0) + v1) <= ((v0*125) + v1))) && ((((v0*125) + ((125 + 0) - 1)) + v1) >= (((v0*125) + v1) + 124))) && ((((v2*500) + v3) + v4) <= (((v2*500) + v3) + v4))) && ((((v2*500) + v3) + v4) >= (((v2*500) + v3) + v4))) && (((0*4) + 0) <= 0)) && (((3*4) + 3) >= 13))
"((((((min(v0*125, v1 + -125) + v2)/250)*8)/4)*4) == (((min(v0*125, v1 + -125) + v2)/250)*8))"
(((v0*8) + v1) >= ((((v0 - 1)*8) + v1) + 1))
"(max(min(min(1999, min(v1 + v2, 2000) + -1), ((((v3*672) + v4) + -10) + (v5 + 18)) - 1) + 1, min(max(max(0, max(v2, 0)), ((v3*672) + v4) + -10), (v5 + 18) + (((v3*672) + v4) + -10))) <= min(max(max(0, max(v2, 0)), ((v3*672) + v4) + -10), (v5 + 18) + (((v3*672) + v4) + -10)))"
"(0 == ((0 + ((min((max(min(((v0 + v1) + 47)/16, 124), 0) - (v2*8)) - max(min(v1/16, 126), 2), 5)*4) + 12)) - 1))"
"(max(min(126 - (v0/2), (0 + 65) - 1) + 1, min(max((6 - v0)/2, 0), 65 + 0)) <= min(max((6 - v0)/2, 0), 65 + 0))"
(((v0/24) + 1) != 0)
(((((((uint1)1 && ((((((v0*2) + 0)*4) + 0) + -8) <= (((0 + v0)*8) + -8))) && ((((((v0*2) + 6)*4) + 3) + -8) >= (((((4 + 0) - 1) + v0)*8) + -8))) && (((((v1*2) + v2) + v3) + -1) <= ((((v1*2) + v2) + v3) + -1))) && (((((v1*2) + v2) + v3) + -1) >= ((((v1*2) + v2) + v3) + -1))) && (v4 <= v4)) && (v4 >= v4))
(((v0/8) + 1) < ((v0 + 1)/8))
(((((((uint1)1 && ((((((v0*503) + v1) + v2) + -5) + -3) <= (((((v0*503) + v1) + v2) + -5) + -3))) && ((((((v0*503) + v1) + v2) + ((6 + -5) - 1)) + -3) >= (((((v0*503) + v1) + v2) + ((6 + -5) - 1)) + -3))) && (0 <= 0)) && ((8 - 1) >= (8 - 1))) && (((v3*4) + 0) <= ((v3*4) + 0))) && (((v3*4) + 3) >= ((v3*4) + ((4 + 0) - 1))))
"(((((((uint1)1 && ((0 + ((min(v0*4, 61) + v1) + -10)) <= (-10 + ((v0*4) + v1)))) && ((3 + ((min(v0*4, 61) + v1) + 2)) >= (((13 + -10) - 1) + (min(((v0*4) + v1) - max(v0*4, 61), v1) + 64)))) && (v2 <= v2)) && (v2 >= v2)) && (v3 <= v3)) && (v3 >= v3))"
"(((((((uint1)1 && ((0 + (min((v2/250)*256, (min((((v1 + v2) + -1)/250)*64, (((v2/250) + v3)*64) + 3)*4) + 355) + -273)) <= (((((v2/250)*64) + -67)*4) + -5))) && ((3 + ((min((((v1 + v2) + -1)/250)*64, (((v2/250) + v3)*64) + 3)*4) + 82)) >= (((min((((v1 + v2) + -1)/250)*64, (min(((((v1 + v2) + -1)/250) - (v2/250))*64, -85) + (min(((v1 + v2) + -1)/250, (v2/250) + v3)*64)) + 88) + 21)*4) + ((7 + -5) - 1)))) && (((v4*4) + -177) <= (((v4 + -43)*4) + -5))) && (((min(((((v5 + v6) + -1)/250)*64) + 70, v4)*4) + -35) >= (((min((((v5 + v6) + -1)/250)*64, v4 + -70) + 61)*4) + ((7 + -5) - 1)))) && (v7 <= v7)) && (v7 >= v7))"
(((((((uint1)1 && ((v0 + -4) <= (v0 + -4))) && ((v0 + 508) >= (v0 + 508))) && ((((v1 + v2) + 0) + 5) <= ((v1 + v2) + -4))) && ((((v1 + v2) + 3) + 5) >= ((v1 + v2) + 5))) && (0 <= 0)) && (2 >= 2))
"((v0 + 4) < min(max(((min(v1, 4) + v2) + -4)/8, (v0 + 1) + 4), v0 + 1))"
"(max(min(min(min(min(14, (1938 - v0)/64), min(1938 - max(v0, 991), ((v1 + v2) - v0) + -62)/64), min(2001 - max(v0, 1054), ((v1 + v2) - v0) + 1)/64), (0 + 16) - 1) + 1, min(max(max(max(((max(v2, 0) - v0) + 65)/64, (2 - v0)/64), (65 - v0)/64), 0), 16 + 0)) <= min(max(max(max(((max(v2, 0) - v0) + 65)/64, (2 - v0)/64), (65 - v0)/64), 0), 16 + 0))"
(((v0 + v1)*2) >= (((((v0 - 1) + v1)*2) + 2) + 1))
(((v0*4) + ((v1*2) + v2)) < ((v0*4) + ((v1*2) + (v2 + 1))))
"(max(min(499, (v2 + (min(v1, 124) + 1)) - 1) + 1, min(max(0, v2), (min(v1, 124) + 1) + v2)) <= min(max(0, v2), (min(v1, 124) + 1) + v2))"
"(max(min(min(min(min(min(min(min(min(min(30, 30), 30), (1970 - v1)/32), (1970 - v1)/32), (1970 - v1)/32), min(1970 - max(v1, 997), ((v2 + v3) - v1) + -30)/32), min(2001 - max(v1, 1028), ((v2 + v3) - v1) + 1)/32), min(2001 - max(v1, 1028), ((v2 + v3) - v1) + 1)/32), (0 + 32) - 1) + 1, min(max(max(max(max(max(((max(v3, 0) - v1) + 33)/32, ((max(v3, 0) - v1) + 33)/32), (2 - v1)/32), (33 - v1)/32), (33 - v1)/32), 0), 32 + 0)) <= min(max(max(max(max(max(((max(v3, 0) - v1) + 33)/32, ((max(v3, 0) - v1) + 33)/32), (2 - v1)/32), (33 - v1)/32), (33 - v1)/32), 0), 32 + 0))"
(((((((uint1)1 && ((((((v0*4) + v1) + -5) + 0) + -19) <= (((((v0*4) + 0) + v1) + -5) + -19))) && ((((((v0*4) + v1) + ((6 + -5) - 1)) + 3) + -19) >= (((((v0*4) + ((4 + 0) - 1)) + v1) + ((6 + -5) - 1)) + -19))) && (0 <= 0)) && ((8 - 1) >= (8 - 1))) && (v2 <= v2)) && (v2 >= v2))
"(((((((uint1)1 && ((0 + (min(v0*32, 968) + v1)) <= (min(v0*32, 968) + v1))) && ((3 + ((min(v0*32, 968) + v1) + 28)) >= ((min(v0*32, 968) + 31) + v1))) && ((v2 + v3) <= (v2 + v3))) && ((v2 + v3) >= (v2 + v3))) && (0 <= 0)) && (0 >= 0))"
(0 == ((0 + (((v0 - v1)*16) + 23)) - 1))
"(max(min(499, (((((v1*2) + v2)*2) + -10) + 5) - 1) + 1, min(max(0, (((v1*2) + v2)*2) + -10), 5 + ((((v1*2) + v2)*2) + -10))) <= min(max(0, (((v1*2) + v2)*2) + -10), 5 + ((((v1*2) + v2)*2) + -10)))"
"(((((((uint1)1 && ((((min(v0, 4) + v1) + -36)/16) <= (-2 + (((min(v0, 4) + v1) + -4)/16)))) && (((((min(v0, 4) + v1) + 44)/16) + v2) >= (((6 + -2) - 1) + (((v2 + 1) + (((min(v0, 4) + v1) + -4)/16)) - 1)))) && (((v3*8) + -1) <= ((((0*4) + (v3*8)) + 0) + -1))) && (((v3*8) + 11) >= ((((3*4) + ((v3*8) + 9)) + 3) + -1))) && (((((v4*2) + v5)*4) + 0) <= ((((v4*2) + v5)*4) + 0))) && (((((v4*2) + v5)*4) + 3) >= ((((v4*2) + v5)*4) + ((4 + 0) - 1))))"
(((((((uint1)1 && ((((((v0*2) + v1)*4) + 0) + -5) <= (((((v0*2) + v1)*4) + 0) + -5))) && ((((((v0*2) + v1)*4) + 3) + -5) >= (((((v0*2) + v1)*4) + ((4 + 0) - 1)) + -5))) && ((((((v2*2) + v3)*4) + v4) + -5) <= (((((v2*2) + v3)*4) + v4) + -5))) && ((((((v2*2) + v3)*4) + v4) + -5) >= (((((v2*2) + v3)*4) + v4) + -5))) && ((v5*69) <= ((v5*69) + 0))) && (((v5*69) + 68) >= ((v5*69) + ((69 + 0) - 1))))
"(((((((uint1)1 && (((min(v0*16, 984) + v1) + -7) <= (-2 + ((min(v0*16, 984) + v1) + -5)))) && (((min(v0*16, 984) + v1) + 17) >= (1 + ((min(v0*16, 984) + v1) + 16)))) && ((((v2 + v3) + 0) + 1) <= ((v2 + v3) + -2))) && ((((v2 + v3) + 3) + 1) >= ((v2 + v3) + 1))) && (0 <= 0)) && (1 >= 1))"
(((((v0*3) + v1)*3) + v2) < ((((v0*3) + v1)*3) + (v2 + 1)))
"(((((((uint1)1 && ((((((((v0*2) + v1)*64) + v2)*4) + 0) + -4) <= ((((((v0*2) + v1)*64) + v2)*4) + -4))) && (((((((((max(((v0*2) + v1)*64, 188)*-4)/16)*4) + ((((v0*2) + v1)*64) + v2)) + 248)*4) + 15) + -4) >= (((min(((v0*2) + v1)*64, 188) + v2)*4) + 251))) && (((v3/4)*4) <= ((v3/4)*4))) && ((((v3/4)*4) + 127) >= (((v3/4)*4) + 127))) && (0 <= 0)) && (19 >= 19))"
((((v0*4) + 507)/502) != 0)
(((((((uint1)1 && ((0 + (((v0/16) + (v1*4)) + -2)) <= ((0 + ((v0/16) + (v1*4))) + -2))) && ((3 + (((v0/16) + (v1*4)) + 3)) >= ((((4 + 0) - 1) + ((v0/16) + (v1*4))) + ((6 + -2) - 1)))) && (0 <= 0)) && ((8 - 1) >= (8 - 1))) && (v2 <= v2)) && (v2 >= v2))
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((15*4) + v0) + 3) >= (((((16 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (v3 <= v3)) && (((v4 + v3) + -1) >= ((v4 + v3) - 1)))
(((v0 % 1005) + 1004) >= 0)
"(max((v0 + -24)/1000, 0) >= ((max((v0 + -24)/1000, 0) + (((v0 + 999)/1000) - max((v0 + -24)/1000, 0))) - 1))"
(((((v0 % ((v1 + 34)/32))*-32)/2)*2) == ((v0 % ((v1 + 34)/32))*-32))
(((((((uint1)1 && (0 <= 0)) && ((4 - 1) >= (4 - 1))) && (((((((v0*2) + v1)*4) + -2) + 0) + 1) <= ((((((v0*2) + v1)*4) + 0) + -2) + 1))) && (((((((v0*2) + v1)*4) + ((6 + -2) - 1)) + 3) + 1) >= ((((((v0*2) + v1)*4) + ((4 + 0) - 1)) + ((6 + -2) - 1)) + 1))) && (v2 <= v2)) && (v2 >= v2))
"(((((((uint1)1 && ((((v0*68) + v1) + 0) <= (((v0*68) + v1) + 0))) && ((((v0*68) + v1) + ((68 + 0) - 1)) >= (((v0*68) + v1) + ((68 + 0) - 1)))) && ((((0*4) + v2) + 0) <= (((0*4) + v2) + 0))) && ((((((32 - max(v3*8, 25))/4)*4) + v2) + 3) >= ((((((((25 - max(v3*8, 25)) + 11)/4) + 0) - 1)*4) + v2) + ((4 + 0) - 1)))) && (v4 <= v4)) && (v4 >= v4))"
(((v0 + 9)/8) != 0)
(((((((uint1)1 && (0 <= 0)) && (0 >= 0)) && ((((0*4) + ((v0/4) + (v1*4))) + 0) <= (0 + ((v0/4) + (v1*4))))) && ((((0*4) + ((v0/4) + (v1*4))) + 3) >= (((4 + 0) - 1) + ((v0/4) + (v1*4))))) && (((v2*3) + v3) <= ((v2*3) + v3))) && (((v2*3) + v3) >= ((v2*3) + v3)))
"(((((min((v0*500) + v1, (v2 + v1) + -500)/8)*8)/4)*4) == ((min((v0*500) + v1, (v2 + v1) + -500)/8)*8))"
(((((((uint1)1 && (((((v0*2) + v1)*4) + v2) <= ((((v0*2) + v1)*4) + v2))) && ((((((v0*2) + v1)*4) + 3) + v2) >= (((((v0*2) + v1)*4) + 3) + v2))) && ((0 + v3) <= (0 + v3))) && ((3 + v3) >= (((4 + 0) - 1) + v3))) && (((v4*3) + v5) <= ((v4*3) + v5))) && (((v4*3) + v5) >= ((v4*3) + v5)))
"(max(min(248, ((v1 + -5) + 2) - 1) + 1, min(max(0, v1 + -5), 2 + (v1 + -5))) <= min(max(0, v1 + -5), 2 + (v1 + -5)))"
"(0 == ((0 + (12 - (max(min(v0, 3), 2)*4))) - 1))"
((((v0*8) + 29)/17) != 0)
"((v0 + 5) < min(max(v1*8, (v0 + 1) + 10) + -5, v0 + 1))"
"(((((((uint1)1 && ((v0 + 0) <= (0 + v0))) && ((v0 + 3) >= (((4 + 0) - 1) + v0))) && (((max(min(v1*2, 499), 0)*4) + -4) <= ((max(min(v1*2, 499), 0)*4) + -4))) && (((((v2*4) + 136) + ((max(min(v1*2, 499), 0)*4) + -4)) - 1) >= ((((v2*4) + 136) + ((max(min(v1*2, 499), 0)*4) + -4)) - 1))) && (v3 <= v3)) && (v3 >= v3))"
((((v0*64) + ((v1*4) + ((v2*2) + v3))) + v4) < (((v0*64) + ((v1*4) + ((v2*2) + (v3 + 1)))) + v4))
"((max(min(v0, -443), -506) + 441) == (((max(min(v0, -443), -506) + 441) + (-439 - max(min(v0, -443), -506))) - 1))"
"(max(min(min(min((v1 - ((((((min(v4, 251) + v5) + -1)/250)*16) + v6)*4)) + 3, (((v2 + v3) + 429)/4) - ((((((min(v4, 251) + v5) + -1)/250)*16) + v6)*4)), ((min(v1*4, (v2 + v3) + 417) + 15)/4) - ((((((min(v4, 251) + v5) + -1)/250)*16) + v6)*4)), (0 + (v7 + 5)) - 1) + 1, min(max(((v3/4) - ((((((min(v4, 251) + v5) + -1)/250)*16) + v6)*4)) + 109, 0), (v7 + 5) + 0)) <= min(max(((v3/4) - ((((((min(v4, 251) + v5) + -1)/250)*16) + v6)*4)) + 109, 0), (v7 + 5) + 0))"
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= ((v0*4) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + v1) + 3))) && ((v2/8) <= (v2/8))) && (((v2 + 70)/8) >= ((v2 + 70)/8))) && (v3 <= v3)) && (v3 >= v3))
(((((((uint1)1 && ((((((v0*4) + v1) + -5) + 0) + -19) <= (((((v0*4) + 0) + v1) + -5) + -19))) && ((((((v0*4) + v1) + ((6 + -5) - 1)) + 3) + -19) >= (((((v0*4) + ((4 + 0) - 1)) + v1) + ((6 + -5) - 1)) + -19))) && (((v2 + v3) % 8) <= ((v2 + v3) % 8))) && (((v2 + v3) % 8) >= ((v2 + v3) % 8))) && (v4 <= v4)) && (v4 >= v4))
((((v0*-20)/4)*4) == (v0*-20))
(((((((uint1)1 && ((v0 + 0) <= (0 + v0))) && ((v0 + 3) >= (((4 + 0) - 1) + v0))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (0 <= 0)) && (136 >= ((137 + 0) - 1)))
"(max(0, min(((((v0*500) + v1) % 8) + 259)/256, (0 + (((v2 % 8) + 763)/256)) - 1) + 1) <= 0)"
"(0 == ((0 + (382 - max(min(v0, 191)*2, 379))) - 1))"
(((((((uint1)1 && (((((0*4) + ((v0*4) + ((v1*12) + v2))) + 0) + -3) <= (((v0*4) + ((v1*12) + v2)) + -3))) && (((((0*4) + ((v0*4) + ((v1*12) + v2))) + 3) + -3) >= ((((v0*4) + ((v1*12) + v2)) + 3) + -3))) && (v3 <= v3)) && (v3 >= v3)) && (v4 <= v4)) && (v4 >= v4))
((0 - ((v0*3) + v1)) > (1999 - ((v0*3) + v1)))
((((v0*-512)/256)*256) == (v0*-512))
"((max(v0, 500) + 9) >= 0)"
(((v0 + 684)/667) != 0)
(((((((uint1)1 && (((v0*2) + v1) <= ((v0*2) + v1))) && (((v0*2) + v1) >= ((v0*2) + v1))) && ((((((0*2) + ((v2*2) + ((v3*16) + v4)))*2) + 0) + -2) <= ((((v2*2) + ((v3*16) + v4))*2) + -2))) && ((((((0*2) + ((v2*2) + ((v3*16) + v4)))*2) + 3) + -2) >= (((((v2*2) + ((v3*16) + v4))*2) + 3) + -2))) && (((v5*2) + v6) <= ((v5*2) + v6))) && (((v5*2) + v6) >= ((v5*2) + v6)))
"(((((min(v0*42, 83) + (v1*14)) + v2) + 17)/4) < (((min(v0*42, 83) + ((v1 + 1)*14)) + v2)/4))"
"((((v0*12) + (v1 + v2)) + -10) == (((((v0*12) + (v1 + v2)) + -10) + (143 - max(v0*12, 118))) - 1))"
((((v0*24)/4)*4) == (v0*24))
(((((v0*502) + v1) + v2) + -4) < ((((v0*502) + v1) + (v2 + 1)) + -7))
"(max(min(min((185 - v1)/64, (189 - v1)/64), (0 + 2) - 1) + 1, min(max(max(0 - (v1/64), (59 - v1)/64), 0), 2 + 0)) <= min(max(max(0 - (v1/64), (59 - v1)/64), 0), 2 + 0))"
"(((((((uint1)1 && (0 <= 0)) && ((4 - 1) >= (4 - 1))) && ((((v0*2) + v1) % 4) <= (((v0*2) + v1) % 4))) && ((((v0*2) + v1) % 4) >= (((v0*2) + v1) % 4))) && ((min(v2*4, 14) + 0) <= (min(v2*4, 14) + 0))) && ((min(v2*4, 14) + 3) >= (min(v2*4, 14) + ((4 + 0) - 1))))"
(((((v0 % ((v1 + 24)/18))*18)/2)*2) == ((v0 % ((v1 + 24)/18))*18))
((v0*4) == (((v0*4) + ((-11*4) + 48)) - 1))
(((v0 + v1)/4) >= (((((v0 - 1) + v1)/4) + 1) + 1))
"(((((((uint1)1 && ((((max(-3*4, -9) + v0) + 0) + 5) <= (v0 + -4))) && ((((max(63*4, -9) + v0) + 3) + 5) >= (v0 + 260))) && (((v1 + v2) + 5) <= ((v1 + v2) + -4))) && (((v1 + v2) + 5) >= ((v1 + v2) + 5))) && (0 <= 0)) && (2 >= 2))"
"(((((((uint1)1 && ((0 + ((min(v0*64, 440) + v1) + -10)) <= ((0 + (min(v0*64, 440) + v1)) + -10))) && ((3 + ((min(v0*64, 440) + v1) + 66)) >= ((((4 + 0) - 1) + ((min(v0*64, 440) + v1) + 64)) + ((13 + -10) - 1)))) && (v2 <= v2)) && (v2 >= v2)) && (v3 <= v3)) && (v3 >= v3))"
(((((v0*126) + v1) + v2) + -7) < ((((v0*126) + v1) + (v2 + 1)) + -10))
"(max(((v0 % 8) + 31)/8, ((((min(v1*16, 47) + v0) + 23)/8) - min((min(v1*16, 47) + v0)/8, ((v0 + 15)/8) + (v1*2))) + 1) <= 1024)"
"((min(v0*-4, 11) + -11) > 5)"
((((v0*4) + 73)/63) != 0)
"(max(min(1999, (((((((v1*8) + v2) + v3)*2) + v4)*2) + 2) - 1) + 1, min(max(0, (((((v1*8) + v2) + v3)*2) + v4)*2), 2 + ((((((v1*8) + v2) + v3)*2) + v4)*2))) <= min(max(0, (((((v1*8) + v2) + v3)*2) + v4)*2), 2 + ((((((v1*8) + v2) + v3)*2) + v4)*2)))"
(((((((uint1)1 && ((((v0*125) + v1) + v2) <= (((v0*125) + v1) + v2))) && ((((v0*125) + v1) + v2) >= (((v0*125) + v1) + v2))) && (0 <= 0)) && (0 >= 0)) && (((0*4) + 0) <= 0)) && (((3*4) + 3) >= 13))
"((((max(min((v0*16) + ((((0 - max(min(v1/8, 0), -8))*8) + v1)*2), 499), 0)*2)/2)*2) == (max(min((v0*16) + ((((0 - max(min(v1/8, 0), -8))*8) + v1)*2), 499), 0)*2))"
((v0 + v1) <= ((v0 + v1) - 1))
(((((((uint1)1 && ((v0 + -3) <= (v0 + -3))) && ((v0 + 250) >= ((254 + (v0 + -3)) - 1))) && ((0 + v1) <= (((0*4) + 0) + v1))) && ((3 + (v1 + 60)) >= (((((16 + 0) - 1)*4) + ((4 + 0) - 1)) + v1))) && (v2 <= v2)) && (v2 >= v2))
(((((v0 % ((v1 + 34)/32))*32)/4)*4) == ((v0 % ((v1 + 34)/32))*32))
((((v0*8) + 32)/20) != 0)
"(((min(min((v3*126) + ((v2/4) + 125), ((v1 + v2) + 3)/4)*4, ((((((min((v3*-126) + ((((v1 + v2) + 3)/4) - (v2/4)), 125) + 1)/32)*32) + (v3*126)) + (v2/4))*4) + 122)/4)*4) == min(min((v3*126) + ((v2/4) + 125), ((v1 + v2) + 3)/4)*4, ((((((min((v3*-126) + ((((v1 + v2) + 3)/4) - (v2/4)), 125) + 1)/32)*32) + (v3*126)) + (v2/4))*4) + 122))"
((((v0 + v1)/4)*4) == (((((v0 + v1)/4)*4) + 128) - 1))
(((((v0 % ((v1 + 34)/32))*-32)/4)*4) == ((v0 % ((v1 + 34)/32))*-32))
(((v0 + 15)/16) != 0)
(((v0*2) + v1) >= (((v0*2) + (v1 - 1)) + 1))
(((((v0*63) + v1) + v2) + 1) < ((((v0*63) + v1) + (v2 + 1)) + -3))
(((((((uint1)1 && ((-2 + v0) <= (-2 + v0))) && ((((6 + -2) - 1) + v0) >= (((6 + -2) - 1) + v0))) && ((((((v1*2) + 0)*4) + 0) + -1) <= ((((((v1*2) + 0)*4) + 0) + -2) + 1))) && ((((((v1*2) + 3)*4) + 3) + -1) >= ((((((v1*2) + ((2 + 0) - 1))*4) + ((4 + 0) - 1)) + ((6 + -2) - 1)) + 1))) && (v2 <= v2)) && (v2 >= v2))
"(((((((uint1)1 && (((v0 + v1) + 5) <= ((v0 + v1) + -4))) && (((v0 + v1) + 5) >= ((v0 + v1) + 5))) && ((((max(-3*4, -9) + v2) + 0) + 5) <= (v2 + -4))) && ((((max(15*4, -9) + v2) + 3) + 5) >= (v2 + 68))) && (0 <= 0)) && (2 >= 2))"
"(max(0, min(((((v0 % 250) + 999)/250)*2) + 1, (0 + (((((v0 % 250) + 999)/250)*2) + 2)) - 1) + 1) <= 0)"
((v0 + -3) == (((v0 + -3) + 2) - 1))
"(max(min(1999, (v2 + (min(v3 - (max(((v4*16) - (((v5 + v6) + -1)/4)) + v7, -15)*4), 0) + 1)) - 1) + 1, min(max(0, v2), (min(v3 - (max(((v4*16) - (((v5 + v6) + -1)/4)) + v7, -15)*4), 0) + 1) + v2)) <= min(max(0, v2), (min(v3 - (max(((v4*16) - (((v5 + v6) + -1)/4)) + v7, -15)*4), 0) + 1) + v2))"
(((v0 + v1) + -13) < (((v0 + 1) + v1) + -25))
(0 == ((0 + (((v0 - v1)*2) + 52)) - 1))
"(max(0, min(((v0 % 8) + 46)/32, (0 + 3) - 1) + 1) <= 0)"
"((((min(v0*32, 973) + v1) + v2) + 5) < (((min(v0*32, 973) + (v1 + 1)) + v2) + -4))"
(v0 >= ((v0 + 3) - 1))
((((v0*32)/2)*2) == (v0*32))
"(max(min((185 - v0)/64, (0 + 2) - 1) + 1, min(max(0 - (v0/64), 0), 2 + 0)) <= min(max(0 - (v0/64), 0), 2 + 0))"
(((((v0 % ((v1 + 499)/500))*-500)/4)*4) == ((v0 % ((v1 + 499)/500))*-500))
"(((max((max(v0, v1) + min(v1 - v0, 0)) - v1, 0)*4) + 4) <= 1024)"
"(max(min(min(min(min((v4/125) + -1, (min(min(2134 - v1, v4), ((v2 + v3) - v1) + 134)/125) + -1), (min((v2 + v3) - v1, min(1992 - v1, v4) + 8) + -133)/125), (1867 - v1)/125), (0 + ((v4 + 124)/125)) - 1) + 1, min(max(max(max(((max(v3, 0) - v1) + 134)/125, (-8 - v1)/125), (134 - v1)/125), 0), ((v4 + 124)/125) + 0)) <= min(max(max(max(((max(v3, 0) - v1) + 134)/125, (-8 - v1)/125), (134 - v1)/125), 0), ((v4 + 124)/125) + 0))"
"(((min((max(v0*12, 20)*-1) + (20 - (v1*4)), -8)/4)*4) == min((max(v0*12, 20)*-1) + (20 - (v1*4)), -8))"
(((v0*16) + 16) <= (v0*16))
(((v0 + 127)/126) != 0)
"(max(min(min(min((v3 - v4) + 55, ((min((v3*4) + 47, v1 + v2)/4) - v4) + 44), (((v1 + v2) + 173)/4) - v4), (0 + (106 - max(v5*56, 49))) - 1) + 1, min(max(((v2/4) - v4) + 45, 0), (106 - max(v5*56, 49)) + 0)) <= min(max(((v2/4) - v4) + 45, 0), (106 - max(v5*56, 49)) + 0))"
((v0 + 5) <= (((v0 - 1) + -4) - 1))
"(((v0*4) + -273) == ((((v0*4) + -273) + ((min((((((v1 + v2) + -1)/250)*64) - (v3*34)) - ((v2/250)*64), -55)*4) + 359)) - 1))"
(((((v0*2) + v1)*2) + v2) < ((((v0*2) + v1)*2) + (v2 + 1)))
(((v0 + v1) + -8) == ((((v0 + v1) + -8) + 140) - 1))
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && ((((v2*250) + 0) + v3) <= (((v2*250) + 0) + v3))) && ((((v2*250) + ((250 + 0) - 1)) + v3) >= (((v2*250) + ((250 + 0) - 1)) + v3))) && (v4 <= v4)) && (v4 >= v4))
(((((((uint1)1 && ((((((0*4) + ((v0*4) + ((v1*64) + v2)))*4) + 0) + -4) <= ((((0 + ((v0*4) + ((v1*64) + v2)))*4) + 0) + -4))) && ((((((0*4) + ((v0*4) + ((v1*64) + v2)))*4) + 15) + -4) >= ((((3 + ((v0*4) + ((v1*64) + v2)))*4) + 3) + -4))) && (((v3*4) + v4) <= ((v3*4) + v4))) && (((v3*4) + v4) >= ((v3*4) + v4))) && (((0*2) + 0) <= 0)) && (((9*2) + 1) >= 19))
"((v0 + 8) == (((v0 + 8) + (min(v1*16, -10) + 26)) - 1))"
"(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + v1) + 0))) && ((((v0*4) + v1) + 3) >= (((v0*4) + v1) + 3))) && ((v2/125) <= (((min(0*8, 117) + 0) + v2)/125))) && (((v2 + 124)/125) >= (((min(((16 + 0) - 1)*8, 117) + ((8 + 0) - 1)) + v2)/125))) && (0 <= 0)) && (0 >= 0))"
(((((((uint1)1 && ((0 + ((v0*16) + v1)) <= (((v0*16) + v1) + 0))) && ((3 + (((v0*16) + v1) + 12)) >= (((v0*16) + v1) + ((16 + 0) - 1)))) && (v2 <= v2)) && (v2 >= v2)) && (0 <= 0)) && (0 >= 0))
"(max(0, min(((v0 % 4) + 503)/4, (0 + (((v0 % 4) + 511)/4)) - 1) + 1) <= 0)"
(((((v0 % ((v1/128) + 1))*-128)/4)*4) == ((v0 % ((v1/128) + 1))*-128))
(((((((uint1)1 && ((0 + ((v0*32) + v1)) <= ((v0*32) + v1))) && ((3 + (((v0*32) + v1) + 28)) >= (((v0*32) + v1) + 31))) && ((v2 + v3) <= (v2 + v3))) && ((v2 + v3) >= (v2 + v3))) && (0 <= 0)) && (2 >= 2))
(((v0*16) + 15) < ((v0 + 1)*16))
((((v0*8) + 29)/22) != 0)
"(max(min(63, ((v1*8) + 8) - 1) + 1, min(max(0, v1*8), 8 + (v1*8))) <= min(max(0, v1*8), 8 + (v1*8)))"
"(max(0, min((((min(v0*63, 62) + v1) % 4) + 50)/16, (0 + ((((min(v0*63, 62) + v1) % 4) + 78)/16)) - 1) + 1) <= 0)"
((((v0*12)/4)*4) == (v0*12))
"(((((((uint1)1 && ((((v0 + v1) + 0) + 504) <= (v1 + v0))) && ((((v0 + v1) + 3) + 504) >= (v1 + (v0 + 504)))) && (((v2*18) + v3) <= ((v2*18) + v3))) && ((((v2*18) + v3) + 17) >= (min(((v2*18) + v3) - (max(v2, 1)*18), v3) + 35))) && (0 <= 0)) && (2 >= ((3 + 0) - 1)))"
"(max(0, min(((v0 % 250) + 249)/1000, (0 + (((v0 % 250) + 1999)/1000)) - 1) + 1) <= 0)"
(((((((uint1)1 && (((((v0*3) + 0) + v1) + -3) <= (((v0*3) + v1) + -3))) && (((((v0*3) + ((3 + 0) - 1)) + v1) + -3) >= (((v0*3) + v1) + -1))) && (((((0*4) + v2) + 0) + -5) <= (v2 + -5))) && (((((126*4) + v2) + 3) + -5) >= (v2 + 501))) && (v3 <= v3)) && (v3 >= v3))
"(((((max(((min(((v0 % ((v1/2) + 1))*16) + (((v2/250)*8) + -5), ((((v3 + v2) + -1)/250)*8) + -13)/8)*8) + 1, min(((v0 % ((v1/2) + 1))*16) + (((v2/250)*8) + -5), ((((v3 + v2) + -1)/250)*8) + -13)) - ((min(((v0 % ((v1/2) + 1))*16) + (((v2/250)*8) + -5), ((((v3 + v2) + -1)/250)*8) + -13)/8)*8))*8)/12)*12) == ((max(((min(((v0 % ((v1/2) + 1))*16) + (((v2/250)*8) + -5), ((((v3 + v2) + -1)/250)*8) + -13)/8)*8) + 1, min(((v0 % ((v1/2) + 1))*16) + (((v2/250)*8) + -5), ((((v3 + v2) + -1)/250)*8) + -13)) - ((min(((v0 % ((v1/2) + 1))*16) + (((v2/250)*8) + -5), ((((v3 + v2) + -1)/250)*8) + -13)/8)*8))*8))"
"(((min(v0*2, 251)*8) + -20) == ((((min(v0*2, 251)*8) + -20) + ((v1*8) + 128)) - 1))"
(((((((uint1)1 && (v0 <= v0)) && ((v0 + 35) >= (v0 + 35))) && (((0 + (v1/8)) + -2) <= ((v1/8) + -2))) && (((3 + ((v1/8) + 20)) + -2) >= ((v1/8) + (((v1 % 8) + 148)/8)))) && ((v2*55) <= (v2*55))) && (((v2*55) + 54) >= ((v2*55) + 54)))
"(((((((uint1)1 && ((0 + ((min(v0*4, 61) + v1) + -10)) <= (-10 + ((v0*4) + v1)))) && ((3 + ((min(v0*4, 61) + v1) + 2)) >= (((13 + -10) - 1) + (min(((v0*4) + v1) - max(v0*4, 61), v1) + 64)))) && (0 <= 0)) && (0 >= 0)) && (v2 <= v2)) && (v2 >= v2))"
((((v0*2) + 68)/63) != 0)
(((v0 + 256)/251) != 0)
"(((((((uint1)1 && ((0 + ((min(v0*64, 188) + (v1*4)) + v2)) <= ((min(v0*64, 188) + (v1*4)) + v2))) && ((3 + ((min(v0*64, 188) + (v1*4)) + v2)) >= (((min(v0*64, 188) + (v1*4)) + 3) + v2))) && (0 <= 0)) && (0 >= 0)) && (v3 <= v3)) && (v3 >= v3))"
"(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((62*4) + v0) + 3) >= (((62*4) + ((4 + 0) - 1)) + v0))) && (((min(v1*32, 93) + v2) + v3) <= ((min(v1*32, 93) + v2) + v3))) && (((min(v1*32, 93) + v2) + v3) >= ((min(v1*32, 93) + v2) + v3))) && (v4 <= v4)) && (v4 >= v4))"
(((((v0 % (((v1*64) + 140)/36))*-144)/16)*16) == ((v0 % (((v1*64) + 140)/36))*-144))
((((v0*0)/33)*33) == (v0*0))
((0 + ((((((v0 % 8) + 132)/8)*2) + 27)/15)) <= 0)
(((((((uint1)1 && ((((v0*8) + v1) + -5) <= (((v0*8) + v1) + -5))) && ((((v0*8) + v1) + -5) >= (((v0*8) + v1) + -5))) && (0 <= 0)) && (0 >= 0)) && (((v2*4) + 0) <= ((v2*4) + 0))) && (((v2*4) + 3) >= ((v2*4) + ((4 + 0) - 1))))
(((((((uint1)1 && ((0 + (v0/4)) <= (0 + (v0/4)))) && ((3 + ((v0/4) + 248)) >= (((4 + 0) - 1) + ((v0/4) + 248)))) && (v1 <= v1)) && (v1 >= v1)) && (((v2*16) + 0) <= ((v2*16) + 0))) && (((v2*16) + ((16 + 0) - 1)) >= ((v2*16) + ((16 + 0) - 1))))
(((((((uint1)1 && (v0 <= (0 + v0))) && ((v0 + 37) >= (((38 + 0) - 1) + v0))) && ((((v1*4) + v2) + 0) <= (((v1*4) + 0) + v2))) && ((((v1*4) + v2) + 3) >= (((v1*4) + ((4 + 0) - 1)) + v2))) && (v3 <= v3)) && (v3 >= v3))
(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((7*4) + v0) + 3) >= (((((8 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (0 <= 0)) && (0 >= 0))
"(((((((uint1)1 && (v4 <= v4)) && ((min(max(min(v5, 1936), -63) + 32, v4) + 31) >= (min(max(min(v5, 1936), -63) + 32, v4) + 31))) && ((0 + max(min(v2, 1999), 0)) <= max(min(v2, 1999), 0))) && ((3 + (max(min(v2, 1999), 0) + (((min(((v3 + 3)/4)*4, max(min(v1 + v2, 2000), 1) - max(min(v2, 1999), 0)) + -1)/4)*4))) >= (min(max(min(v1 + v2, 2000), 1), min(max(min(v2, 1999), 0) + (((v3 + -1)/4)*4), max(min(v1 + v2, 2000), 1) + -1) + min(max(min(v1 + v2, 2000), 1) - max(min(v2, 1999), 0), 4)) + -1))) && (v6 <= v6)) && (v6 >= v6))"
"(((((((uint1)1 && ((v0 + 0) <= v0)) && ((v0 + 3) >= (v0 + 3))) && ((max(min(v1*4, 1999), v2 + 6) + -5) <= (v2 + -2))) && ((v2 + 1) >= (v2 + 1))) && (v3 <= v3)) && (v3 >= v3))"
"(((((((uint1)1 && ((-5 + v0) <= (-5 + v0))) && ((((6 + -5) - 1) + v0) >= (((6 + -5) - 1) + v0))) && (0 <= 0)) && ((8 - 1) >= (8 - 1))) && (((v1*4) + 0) <= (v1*4))) && (((v1*4) + 3) >= (min(v1*4, 5) + 3)))"
"((((max(v0, 1)*-16)/4)*4) == (max(v0, 1)*-16))"
"(max(min(min(min((v4 - v5) + 5, ((min((v4*4) + 4, v2 + v3)/4) - v5) + 4), (((v2 + v3) + 13)/4) - v5), (0 + (min(((((v6 + v7) + 3)/4) - (v8*72)) - (v7/4), 71) + 6)) - 1) + 1, min(max(((v3/4) - v5) + 5, 0), (min(((((v6 + v7) + 3)/4) - (v8*72)) - (v7/4), 71) + 6) + 0)) <= min(max(((v3/4) - v5) + 5, 0), (min(((((v6 + v7) + 3)/4) - (v8*72)) - (v7/4), 71) + 6) + 0))"
(((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && ((((((v1*8) + v2)*4) + v3) + 0) <= ((((v1*8) + v2)*4) + v3))) && ((((((v1*8) + v2)*4) + v3) + 3) >= (((((v1*8) + v2)*4) + 3) + v3))) && (0 <= 0)) && (2 >= ((3 + 0) - 1)))
(((v0 + v1) + 5) <= ((((v0 - 1) + v1) + -4) - 1))
"(max(min(min(min(104, (min((v1 + v2) - (v3*256), 243)/4) + 44), (((v1 + v2) + 173)/4) - (v3*64)), (0 + 106) - 1) + 1, min(max(((v2/4) - (v3*64)) + 45, 0), 106 + 0)) <= min(max(((v2/4) - (v3*64)) + 45, 0), 106 + 0))"
"(max(min((241 - v0)/8, (0 + 8) - 1) + 1, min(max(0 - (v0/8), 0), 8 + 0)) <= min(max(0 - (v0/8), 0), 8 + 0))"
"(((((((uint1)1 && ((v0 + -4) <= (v0 + -4))) && ((v0 + 40) >= (v0 + 40))) && (((((min(v1*32, 973) + v2) + v3) + 0) + 5) <= (((min(v1*32, 973) + v2) + v3) + -4))) && (((((min(v1*32, 973) + v2) + v3) + 3) + 5) >= (((min(v1*32, 973) + v2) + v3) + 5))) && (0 <= 0)) && (2 >= 2))"
"(((v0*4) + -8) == ((((v0*4) + -8) + ((min(v1, 245)*4) + 40)) - 1))"
((0 + (((v0 % 8) + 167)/56)) <= 0)
"(max(min(min(min((((v1 + v2) - max(min(v3, 2001), 2)) + -2)/4, ((min(max(min(v3, 1745), -254) + 252, v1 + v2) - max(min(v3, 2001), 2)) + 1)/4), ((max(min(v3, 1745), -254) - max(min(v3, 2001), 2)) + 253)/4), (0 + ((v4/4) + 65)) - 1) + 1, min(max(((v2 - max(min(v3, 2001), 2)) + 5)/4, 0), ((v4/4) + 65) + 0)) <= min(max(((v2 - max(min(v3, 2001), 2)) + 5)/4, 0), ((v4/4) + 65) + 0))"
(((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && ((0 + (v1 + -3)) <= (v1 + -2))) && ((3 + (v1 + 33)) >= (v1 + 36))) && (v2 <= v2)) && (v2 >= v2))
"(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + v0) + 0))) && ((((3*4) + v0) + 3) >= (((3*4) + v0) + 3))) && (((min(v1*42, 83) + ((v2*21) + ((v3*3) + v4))) + v5) <= ((min(v1*42, 83) + ((v2*21) + ((v3*3) + v4))) + v5))) && (((min(v1*42, 83) + ((v2*21) + ((v3*3) + v4))) + v5) >= ((min(v1*42, 83) + ((v2*21) + ((v3*3) + v4))) + v5))) && (0 <= 0)) && (24 >= 24))"
((((v0/4)*4) + -19) == (((((v0/4)*4) + -19) + ((v1*4) + 24)) - 1))
(((((((uint1)1 && (((v0 + v1) + -2) <= ((v0 + v1) + -2))) && (((v0 + v1) + ((11 + -2) - 1)) >= ((v0 + v1) + ((11 + -2) - 1)))) && (v2 <= v2)) && (v2 >= v2)) && ((((((v3 % 4)*3) + 0)*4) + 0) <= ((v3 % 4)*12))) && ((((((v3 % 4)*3) + 2)*4) + 3) >= (((v3 % 4)*12) + 11)))
"((-16 - max(min(v0, 116), -14)) >= (((-16 - max(min(v0, 116), -14)) + (max(min(v0, 116), -14) + 18)) - 1))"
((((v0*256) + v1) + 244) < (((v0*256) + (v1 + 1)) + -172))
"(((((((uint1)1 && ((((0*4) + 0) + ((min(max(v0*16, -5), (v0*16) + 8) + v1) + 3)) <= (((((v0*16) + -5) + v1) + 0) + 3))) && ((((1*4) + 3) + (min((((min(v0*16, -5) + 20)/8)*8) + (max(v0*16, -5) + v1), ((v0*16) + v1) + 8) + 3)) >= (((((v0*16) + 15) + v1) + 3) + 3))) && ((0 + ((min(v2, 4) + v3) + -6)) <= ((min(v2, 4) + v3) + -6))) && ((2 + ((max(v2, 4) + (min(v2, 4) + v3)) + -4)) >= ((v2 + v3) + 2))) && (0 <= 0)) && (0 >= 0))"
((((v0*-128)/64)*64) == (v0*-128))
(((((((uint1)1 && (((((((v0*8) + ((v1*4) + v2))*4) + v3)*2) + 0) <= ((((((v0*8) + ((v1*4) + v2))*4) + v3)*2) + 0))) && ((((((((v0*8) + ((v1*4) + v2))*4) + v3) + 4)*2) + 3) >= (((((((v0*8) + ((v1*4) + v2))*4) + v3) + 3)*2) + 2))) && ((0 + (v4*2)) <= (((((0*4) + v4) + 0)*2) + 0))) && ((8 + ((v4*2) + 9)) >= (((((1*4) + v4) + 3)*2) + 2))) && (((v5*2) + v6) <= ((v5*2) + v6))) && (((v5*2) + v6) >= ((v5*2) + v6)))
"(((((((uint1)1 && ((0 + (((min(v0, 4) + v1) + -36)/16)) <= (((-65 + (((min(v0, 4) + v1) + -4)/16)) + 0) + 63))) && ((3 + ((((min(v0, 4) + v1) + -36)/16) + ((((((((min(v0, 4) + v1) + 44)/16) + ((v2/4)*4)) - (((min(v0, 4) + v1) + -36)/16)) + 3)/4)*4))) >= (((3 + ((((min(v0, 4) + v1) + -4)/16) + (((((((min(v0, 4) + v1) + 44)/16) + ((v2/4)*4)) - (((min(v0, 4) + v1) + -4)/16))/64)*64))) + 3) + 63))) && ((max(v3*8, (v4*8) + 5) + -1) <= (((v4*8) + -9) + 8))) && (((v4*8) + 11) >= (((v4*8) + 3) + 8))) && (0 <= 0)) && (((64 + 0) - 1) >= ((64 + 0) - 1)))"
(((((((uint1)1 && ((v0 + 0) <= (0 + v0))) && ((v0 + 3) >= (((4 + 0) - 1) + v0))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (0 <= 0)) && (0 >= 0))
"(((((((uint1)1 && ((max(v0*2, -1) + v1) <= (((v0*2) + v1) + -1))) && ((((v0*2) + v1) + 1) >= (((v0*2) + v1) + 1))) && ((0 + (v2 + -1)) <= (v2 + -1))) && ((3 + (v2 + 998)) >= (v2 + 1001))) && (0 <= 0)) && (2 >= 2))"
"(((((((uint1)1 && (((max(v0*4, -5) + v1) + 3) <= ((((v0*4) + 0) + v1) + -2))) && ((((v0*4) + v1) + 6) >= ((((v0*4) + ((4 + 0) - 1)) + v1) + ((6 + -2) - 1)))) && (((v2*8) + -1) <= ((((v2*8) + 0) + -2) + 1))) && (((v2*8) + 35) >= ((((v2*8) + 31) + ((6 + -2) - 1)) + 1))) && (((0*4) + 0) <= 0)) && (((15*4) + 3) >= ((64 + 0) - 1)))"
"((((min((v0*84) + ((v1*12) + ((v2 + min((v3 + v4)*1000, v5 + -1000))/4)), ((v2 + min((v3 + v4)*1000, v5 + -1000)) + 1003)/4)*-4)/4)*4) == (min((v0*84) + ((v1*12) + ((v2 + min((v3 + v4)*1000, v5 + -1000))/4)), ((v2 + min((v3 + v4)*1000, v5 + -1000)) + 1003)/4)*-4))"
"(max(min(min((min(v0 + v1, 2000) - v2) + -1, 1999 - v2), (0 + 250) - 1) + 1, min(max(max(max(max(0 - v2, 0 - v2), max(v1, 0) - v2), max(v1, 0) - v2), 0), 250 + 0)) <= min(max(max(max(max(0 - v2, 0 - v2), max(v1, 0) - v2), max(v1, 0) - v2), 0), 250 + 0))"
"(((((((uint1)1 && ((-2 + v0) <= (-2 + v0))) && ((((6 + -2) - 1) + v0) >= (((6 + -2) - 1) + v0))) && (((((0*4) + (v1*8)) + 0) + -1) <= ((((((v1*2) + max(-2, 0))*4) + 0) + -2) + 1))) && (((((3*4) + ((v1*8) + 9)) + 3) + -1) >= ((((((v1*2) + 1)*4) + ((4 + 0) - 1)) + ((6 + -2) - 1)) + 1))) && (0 <= 0)) && (0 >= 0))"
(((v0 + 1017)/1000) != 0)
(((((((uint1)1 && ((((v0 + v1) + 0) + -1002) <= ((v0 + v1) + -1011))) && ((((v0 + v1) + 3) + -1002) >= ((v0 + v1) + -1002))) && ((v2 + -11) <= (v2 + -11))) && ((v2 + 41) >= (v2 + 41))) && (0 <= 0)) && (2 >= 2))
(((((((uint1)1 && (0 <= 0)) && ((16 - 1) >= (16 - 1))) && ((((0*4) + ((v0/4) + (v1*4))) + 0) <= (0 + ((v0/4) + (v1*4))))) && ((((0*4) + ((v0/4) + (v1*4))) + 3) >= (((4 + 0) - 1) + ((v0/4) + (v1*4))))) && (v2 <= v2)) && (v2 >= v2))
"(((max(min((v1*-64) + ((((v5 + 1)*-64) + max(max(-127 - (((v3 + v4)/4)*4), (((v3 + v4)/4)*4) + -1999), 0)) + (v2*-32)), -96), -132)/4)*4) == max(min((v1*-64) + ((((v5 + 1)*-64) + max(max(-127 - (((v3 + v4)/4)*4), (((v3 + v4)/4)*4) + -1999), 0)) + (v2*-32)), -96), -132))"
(((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && ((0 + (v1*4)) <= ((0 + v1)*4))) && ((3 + ((v1*4) + 9)) >= ((((4 + 0) - 1) + v1)*4))) && (v2 <= v2)) && (v2 >= v2))
"(max(0, min(15 - ((v0 % 3)*6), (0 + 6) - 1) + 1) <= 0)"
"(max(min(13, (((v1/125) + v2) + (((v1 % 125) + 249)/125)) - 1) + 1, min(max(1, (v1/125) + v2), (((v1 % 125) + 249)/125) + ((v1/125) + v2))) <= min(max(1, (v1/125) + v2), (((v1 % 125) + 249)/125) + ((v1/125) + v2)))"
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && ((v2/125) <= ((0 + v2)/125))) && (((v2 + 249)/125) >= ((((250 + 0) - 1) + v2)/125))) && (v3 <= v3)) && (v3 >= v3))
"(0 >= ((0 + ((((0 - max((max(min((v0/8)*2, 509), 10)*4) - v1, (v2*4) + 52))/4) + v2) + 14)) - 1))"
"(max(min((v1 + v2) + -1, (((v4*4) + -8) + ((min(v3, 0)*4) + 12)) - 1) + 1, min(max(v2, (v4*4) + -8), ((min(v3, 0)*4) + 12) + ((v4*4) + -8))) <= min(max(v2, (v4*4) + -8), ((min(v3, 0)*4) + 12) + ((v4*4) + -8)))"
"(((((((uint1)1 && ((((max(v0*4, -6) + v1) + 0) + 1) <= (-5 + ((v0*4) + v1)))) && ((((max(v0*4, -6) + v1) + 3) + 1) >= (1 + (((v0*4) + v1) + 3)))) && ((((v2*2) + v3) + -5) <= ((((v2*2) + 0) + v3) + -5))) && ((((v2*2) + v3) + 2) >= ((((v2*2) + ((2 + 0) - 1)) + v3) + 1))) && (0 <= 0)) && (1 >= 1))"
(((((v0*65) + v1) + v2) + -11) < ((((v0*65) + v1) + (v2 + 1)) + -14))
"((min(v0*4, 1999) + -6) >= (((min(v0*4, 1999) + -6) + (max(v1, 0) + 11)) - 1))"
(((v0*8) + 9) != 0)
((((v0 + v1)/4) + 1) < (((v0 + 1) + v1)/4))
"(max(0, min((((min(v0*1000, v1 + -1000) + v2) % 4) + 1027)/16, (0 + (((v3 % 4) + 1055)/16)) - 1) + 1) <= 0)"
"(max(min(min(min(1999, 1999), min(v1 + v2, 2000) + -1), ((v3 + -10) + 143) - 1) + 1, min(max(max(max(0, 0), max(v2, 0)), v3 + -10), 143 + (v3 + -10))) <= min(max(max(max(0, 0), max(v2, 0)), v3 + -10), 143 + (v3 + -10)))"
(0 == ((0 + ((v0*8) + 34)) - 1))
"(((((max(min(v0*8, 125), 1) + v1)*2) + v2) + -2) < ((((max(min(v0*8, 125), 1) + v1)*2) + (v2 + 1)) + -2))"
"(max(min(min(min((((v1 + v2) - max(min(v3, 1999), 0))/4) + -1, ((max(min(v3, 1988), -11) - max(min(v3, 1999), 0))/4) + 2), ((min(max(min(v3, 1988), -11) + 9, v1 + v2) - max(min(v3, 1999), 0)) + -1)/4), (0 + ((v4 + 15)/4)) - 1) + 1, min(max(((v2 - max(min(v3, 1999), 0)) + 3)/4, 0), ((v4 + 15)/4) + 0)) <= min(max(((v2 - max(min(v3, 1999), 0)) + 3)/4, 0), ((v4 + 15)/4) + 0))"
(((((v0 + -5)/8)*256) + -17) == ((((((v0 + -5)/8)*256) + -17) + ((((v0 + 3) % 8)*32) + 135)) - 1))
"(((v0*4) + 3) < (min(max(max(min(v1, 499), 0) + -1, v0 + 1), (v0 + 1) + -1)*4))"
"(max(min(min(min((((v1 + v2) - max(min(v3, 2001), 2)) + -2)/4, ((min(max(min(v3, 1869), -130) + 128, v1 + v2) - max(min(v3, 2001), 2)) + 1)/4), ((max(min(v3, 1869), -130) - max(min(v3, 2001), 2)) + 129)/4), (0 + ((v4/4) + 34)) - 1) + 1, min(max(((v2 - max(min(v3, 2001), 2)) + 5)/4, 0), ((v4/4) + 34) + 0)) <= min(max(((v2 - max(min(v3, 2001), 2)) + 5)/4, 0), ((v4/4) + 34) + 0))"
"(max(0, min(((max(min(v0*2, 371), -128) - max(min(v0*2, 499), 0)) + 114)/15, (0 + ((v1 + 143)/15)) - 1) + 1) <= 0)"
((v0 + v1) < (((v0 + 1) + v1) + -5))
"(max(-500 - v0, v0 + -1) >= 0)"
"(((((((max(v0*16, -23) + (v0*-16)) + (v1 + 7))/4)*-4)/4)*4) == ((((max(v0*16, -23) + (v0*-16)) + (v1 + 7))/4)*-4))"
"(0 == ((0 + ((max(min(v0 - v1, -11), -13)*2) + 26)) - 1))"
"(max(min(min(1999, min(v1 + v2, 2000) + -1), ((min(v3*63, 62) + v4) + 63) - 1) + 1, min(max(max(0, max(v2, 0)), min(v3*63, 62) + v4), 63 + (min(v3*63, 62) + v4))) <= min(max(max(0, max(v2, 0)), min(v3*63, 62) + v4), 63 + (min(v3*63, 62) + v4)))"
"(((((((uint1)1 && (((((0*4) + 0) + (min(v0, 4) + v1)) + -4) <= (0 + ((min(v0, 4) + v1) + -4)))) && (((((7*4) + 3) + ((((max(v0, 4) + -1)/32)*32) + (min(v0, 4) + v1))) + -4) >= (((4 + 0) - 1) + ((v0 + v1) + -4)))) && ((min(v2*63, 62) + v3) <= ((min(v2*63, 62) + 0) + v3))) && (((min(v2*63, 62) + v3) + 62) >= ((min(v2*63, 62) + ((63 + 0) - 1)) + v3))) && (v4 <= v4)) && (v4 >= v4))"
"(((((((uint1)1 && (((((0*4) + (((v0*116) + v1) + -9)) + 0) + 5) <= (((v0*116) + v1) + -4))) && (((((0*4) + (((v0*116) + v1) + 112)) + 3) + 5) >= (((v0*116) + v1) + 120))) && ((max(v2 + 16, v3) + -11) <= (v2 + -4))) && ((v2 + 5) >= (v2 + 5))) && (0 <= 0)) && (2 >= 2))"
(((((((uint1)1 && (((((0*4) + v0) + 0) + -2) <= ((((0*4) + v0) + -2) + 0))) && (((((5*4) + v0) + 3) + -2) >= ((((3*4) + v0) + ((6 + -2) - 1)) + 3))) && (((v1*8) + -1) <= ((((v1*8) + 0) + -2) + 1))) && (((v1*8) + 67) >= ((((v1*8) + ((64 + 0) - 1)) + ((6 + -2) - 1)) + 1))) && (((v2*4) + v3) <= ((v2*4) + v3))) && (((v2*4) + v3) >= ((v2*4) + v3)))
(((v0*4) + -177) >= ((((v0*4) + -177) + 63) - 1))
"(max(min(126 - v0, (0 + 17) - 1) + 1, min(max(2 - v0, 0), 17 + 0)) <= min(max(2 - v0, 0), 17 + 0))"
"(max(min((v1 + v2) + -1, ((((v3/8)*256) + -17) + (((v3 % 8)*32) + 135)) - 1) + 1, min(max(v2, ((v3/8)*256) + -17), (((v3 % 8)*32) + 135) + (((v3/8)*256) + -17))) <= min(max(v2, ((v3/8)*256) + -17), (((v3 % 8)*32) + 135) + (((v3/8)*256) + -17)))"
"(max(min(((2006 - v1)/4) + (v2*-64), (0 + 64) - 1) + 1, min(max((((9 - v1)/4) + (v2*-64)) + 1, 0), 64 + 0)) <= min(max((((9 - v1)/4) + (v2*-64)) + 1, 0), 64 + 0))"
"(((((min(v0*32, 218) + v1) + v2)/4) + 1) < (((min(v0*32, 218) + (v1 + 1)) + v2)/4))"
"(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((3*4) + v0) + 3) >= (((3*4) + ((4 + 0) - 1)) + v0))) && (((min(v1*16, 109) + v2) + v3) <= ((min(v1*16, 109) + v2) + v3))) && (((min(v1*16, 109) + v2) + v3) >= ((min(v1*16, 109) + v2) + v3))) && (v4 <= v4)) && (v4 >= v4))"
"(max(min(124, ((v2 + 3) + (min(v1*63, -5) + 68)) - 1) + 1, min(max(0, v2 + 3), (min(v1*63, -5) + 68) + (v2 + 3))) <= min(max(0, v2 + 3), (min(v1*63, -5) + 68) + (v2 + 3)))"
(((((v0*1000) + v1) + v2) + 3) < ((((v0*1000) + v1) + (v2 + 1)) + -2))
"(max(min(124, (((v1*8) + -1) + 21) - 1) + 1, min(max(0, (v1*8) + -1), 21 + ((v1*8) + -1))) <= min(max(0, (v1*8) + -1), 21 + ((v1*8) + -1)))"
(((v0 + 690)/673) != 0)
"(((max(((v5*3) + v6) + v9, max(((v5*3) + v6) + v9, v10)) + (((v2*4) + v3) + v1)) + -5) >= ((min(((v0 + v1) + (((v2 - 1)*4) + v3)) + -1, v4) + min(((v5*3) + v6) + v7, min(((v5*3) + v6) + v7, v8))) + 1))"
"(max(min(min(min(min(min((((v6 + v5) - max(min(v3, 1999), 0))/4) + -1, (((v6 + v5) - max(min(v3, 1999), 0))/4) + -1), ((max(min(v2 + v3, 2000), 1) - max(min(v3, 1999), 0))/4) + -1), (((v6 + v5) - max(min(v3, 1999), 0)) + -1)/4), (((v6 + v5) - max(min(v3, 1999), 0)) + -1)/4), (0 + ((v4 + 3)/4)) - 1) + 1, min(max(((v5 - max(min(v3, 1999), 0)) + 3)/4, 0), ((v4 + 3)/4) + 0)) <= min(max(((v5 - max(min(v3, 1999), 0)) + 3)/4, 0), ((v4 + 3)/4) + 0))"
"(((((((uint1)1 && ((0 + v0) <= (0 + v0))) && ((((64 + 0) - 1) + v0) >= (((64 + 0) - 1) + v0))) && ((((v1*64) + ((v2*4) + ((v3*2) + v4))) + v5) <= (((v1*64) + ((v2*4) + ((v3*2) + v4))) + v5))) && ((((v1*64) + ((v2*4) + ((v3*2) + v4))) + v5) >= (((v1*64) + ((v2*4) + ((v3*2) + v4))) + v5))) && ((min((v6 % 5)*4, 14) + 0) <= (min((v6 % 5)*4, 14) + 0))) && ((min((v6 % 5)*4, 14) + 3) >= (min((v6 % 5)*4, 14) + ((4 + 0) - 1))))"
(((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && (((((v1/4) + 0)*4) + 0) <= (((v1/4)*4) + 0))) && ((((((v1/4) + 28) + 3)*4) + 3) >= ((((v1/4) + 28)*4) + ((16 + 0) - 1)))) && ((v2*2) <= ((v2*2) + 0))) && (((v2*2) + 1) >= ((v2*2) + ((2 + 0) - 1))))
"(((min((v0*2) + v1, 249)*8) + -4) >= ((((min((v0*2) + v1, 249)*8) + -4) + 8) - 1))"
(((v0 + 259)/252) != 0)
"(max(0, min(((v0 % 4) + 247)/256, (0 + 2) - 1) + 1) <= 0)"
"(((((((uint1)1 && (((0 + (min(v0, 4) + v1)) + -4) <= (0 + ((min(v0, 4) + v1) + -4)))) && (((3 + ((((max(v0, 4) + -1)/4)*4) + (min(v0, 4) + v1))) + -4) >= (((4 + 0) - 1) + ((v0 + v1) + -4)))) && ((min(v2*63, 62) + v3) <= ((min(v2*63, 62) + 0) + v3))) && (((min(v2*63, 62) + v3) + 62) >= ((min(v2*63, 62) + ((63 + 0) - 1)) + v3))) && (v4 <= v4)) && (v4 >= v4))"
((((v0 + v1)*4) + -1) < (((v0 + (v1 + 1))*4) + -4))
"(max(min(min(min((1992 - v3)/8, (1996 - v3)/8), min((((v1 + v2) - v3) + -1)/8, 249 - (v3/8))), (0 + 2) - 1) + 1, min(max(max(max(0 - (v3/8), (3 - v3)/8), max(((v2 - v3) + 7)/8, 0 - (v3/8))), 0), 2 + 0)) <= min(max(max(max(0 - (v3/8), (3 - v3)/8), max(((v2 - v3) + 7)/8, 0 - (v3/8))), 0), 2 + 0))"
(((((((uint1)1 && (0 <= 0)) && (0 >= 0)) && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (0 <= 0)) && (2 >= ((3 + 0) - 1)))
"(((((((uint1)1 && (((((0*4) + v0) + 0) + -2) <= (v0 + -2))) && (((((((min((min(v1*12, 988) + v2) - v0, -16)/4) + 4)*4) + max((min(v1*12, 988) + v2) + 16, v0)) + 3) + -2) >= ((min(v1*12, 988) + v2) + 14))) && ((((min(v3*32, 31) + ((v4*8) + v5)) + v6) + 3) <= (((min(v3*32, 31) + ((v4*8) + v5)) + v6) + -2))) && ((((min(v3*32, 31) + ((v4*8) + v5)) + v6) + 3) >= (((min(v3*32, 31) + ((v4*8) + v5)) + v6) + 3))) && (0 <= 0)) && (0 >= 0))"
"(((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((124*4) + v0) + 3) >= (((((125 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && (((min(v1*2, 123) + v2) + v3) <= ((min(v1*2, 123) + v2) + v3))) && (((min(v1*2, 123) + v2) + v3) >= ((min(v1*2, 123) + v2) + v3))) && (v4 <= v4)) && (v4 >= v4))"
(((((((uint1)1 && ((((v0*4) + 0) + v1) <= (((v0*4) + 0) + v1))) && ((((v0*4) + ((4 + 0) - 1)) + v1) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && ((((v2*4) + v3) + 0) <= (((v2*4) + 0) + v3))) && ((((v2*4) + v3) + 3) >= (((v2*4) + ((4 + 0) - 1)) + v3))) && (((v4*3) + v5) <= ((v4*3) + v5))) && (((v4*3) + v5) >= ((v4*3) + v5)))
"(((max(max(min(v0*2, 491), -8) - max(min(v0*2, 499), 0), max(min(v0*2, 483), -16) - max(min(v0*2, 491), -8))*4) + 40) <= 1024)"
(v0 <= (v0 - 1))
(0 >= ((0 + ((((v0 + v1) % 8) + 188)/16)) - 1))
((4 - (v0*2)) == (509 - (v0*2)))
((((((v0*250) + v1) + v2)/4) + 1) < ((((v0*250) + (v1 + 1)) + v2)/4))
(((((((uint1)1 && ((((((v0*125) + v1)*4) + v2) + 0) <= ((((v0*125) + v1)*4) + v2))) && ((((((v0*125) + v1)*4) + v2) + 3) >= (((((v0*125) + v1)*4) + 3) + v2))) && (0 <= 0)) && (0 >= 0)) && (v3 <= v3)) && (v3 >= v3))
"(max(0, min(0, (0 + (((v0 % 4) + 203)/68)) - 1) + 1) <= 0)"
((((v0*-126)/63)*63) == (v0*-126))
"((max(min(((v0*4) + v1) - max(v0*4, 506), v1) - ((v0*4) + v1), -506) + 515) <= 1024)"
"(max(((v0*32) + v1) + v4, max(((v0*32) + v1) + v4, v5)) >= (min((((v0 - 1)*32) + v1) + v2, min((((v0 - 1)*32) + v1) + v2, v3)) + 1))"
"(((((((uint1)1 && ((((((v0*3) + 0)*4) + v1) + 0) <= ((v0*12) + v1))) && ((((((v0*3) + 2)*4) + v1) + 3) >= (((v0*12) + 11) + v1))) && ((v2 + v3) <= (v2 + v3))) && ((v2 + v3) >= (v2 + v3))) && ((min(v4*69, 68) + v5) <= (min(v4*69, 68) + v5))) && ((min(v4*69, 68) + v5) >= (min(v4*69, 68) + v5)))"
"(((((((uint1)1 && ((v0 + 0) <= (0 + v0))) && ((v0 + 3) >= (((4 + 0) - 1) + v0))) && ((((min(v1, 250) + v2)/125) + -2) <= (((min(v1, 250) + v2)/125) + -2))) && (((((min(v1, 250) + v2)/125) + v3) + -1) >= (((v3 + 2) + (((min(v1, 250) + v2)/125) + -2)) - 1))) && (v4 <= v4)) && (v4 >= v4))"
((0 - (v0*2)) > (999 - (v0*2)))
(((v0*69) + v1) < ((v0*69) + (v1 + 1)))
"(max(min(min(min(min((v2 + 1)/4, (min(min(2000 - v1, v2), (v3 + v4) - v1) + 1)/4), (1998 - v1)/4), (1998 - v1)/4), (0 + ((v2/4) + 2)) - 1) + 1, min(max(max(((max(v4, 0) - v1) + 5)/4, (5 - v1)/4), 0), ((v2/4) + 2) + 0)) <= min(max(max(((max(v4, 0) - v1) + 5)/4, (5 - v1)/4), 0), ((v2/4) + 2) + 0))"
"((((max(min((v0*64) + ((((((0 - max(min(v1/32, 0), -2))*4) + v2)*8) + v1)*2), 499), 0)*4)/4)*4) == (max(min((v0*64) + ((((((0 - max(min(v1/32, 0), -2))*4) + v2)*8) + v1)*2), 499), 0)*4))"
"(max(min(min(min((((v4 + v5)/4) - (v3*4)) + 8, ((min(v2*16, (v4 + v5) + 7)/4) - (v3*4)) + 7), ((v2 - v3)*4) + 7), (0 + ((min((max(min(((v6 + v7) + 47)/16, 124), 0) - (v8*2)) - max(min(v7/16, 126), 2), -1)*4) + 12)) - 1) + 1, min(max((((v5 + 35)/4) - (v3*4)) + 1, 0), ((min((max(min(((v6 + v7) + 47)/16, 124), 0) - (v8*2)) - max(min(v7/16, 126), 2), -1)*4) + 12) + 0)) <= min(max((((v5 + 35)/4) - (v3*4)) + 1, 0), ((min((max(min(((v6 + v7) + 47)/16, 124), 0) - (v8*2)) - max(min(v7/16, 126), 2), -1)*4) + 12) + 0))"
(((v0*4) + 16) <= (v0*4))
(((((((uint1)1 && (((v0*4) + -5) <= ((v0*4) + -5))) && (((v0*4) + ((7 + -5) - 1)) >= ((v0*4) + ((7 + -5) - 1)))) && ((0 + ((v1*32) + -17)) <= ((((v1*8) + -3)*4) + -5))) && ((3 + ((v1*32) + 274)) >= ((((v1*8) + 69)*4) + ((7 + -5) - 1)))) && (v2 <= v2)) && (v2 >= v2))
(((((v0/(((v1*4) + 507)/502))*-502)/251)*251) == ((v0/(((v1*4) + 507)/502))*-502))
"(((((((uint1)1 && ((0 + ((min(max(v0*16, -9), (v0*16) + 12) + v1) + 5)) <= ((0 + (((v0*16) + v1) + -9)) + 5))) && ((3 + (min((((min(v0*16, -9)/4)*4) + (max(v0*16, -9) + v1)) + 12, (v0*16) + v1) + 17)) >= ((3 + (((v0*16) + v1) + 36)) + 5))) && (((min(v2, 494) + v3) + -505) <= ((-9 + ((min(v2, 494) + v3) + -501)) + 5))) && (((v2 + v3) + 6) >= ((502 + ((v2 + v3) + -501)) + 5))) && (0 <= 0)) && (2 >= 2))"
((v0 + -7) >= (((v0 + -7) + 3) - 1))
"((v0 + 8) < (min(max((min(v1, 4) + v2)/4, (v0 + 1) + 11), (v0 + 1) + 1) + -3))"
"(((v0*4) + -8) == ((((v0*4) + -8) + ((min(v1, 61)*4) + 12)) - 1))"
"(((((((uint1)1 && ((0 + ((min(v0*252, 248) + (v1*4)) + v2)) <= ((min(v0*252, 248) + (v1*4)) + v2))) && ((3 + ((min(v0*252, 248) + (v1*4)) + v2)) >= (((min(v0*252, 248) + (v1*4)) + 3) + v2))) && (v3 <= (0 + v3))) && ((v3 + 124) >= (((125 + 0) - 1) + v3))) && (v4 <= v4)) && (((v5 + v4) + -1) >= ((v5 + v4) - 1)))"
"((71 - max((v0 % 8)*9, 62)) >= (((71 - max((v0 % 8)*9, 62)) + (max((v0 % 8)*9, 62) + -62)) - 1))"
"((max((max(v0 + 4, v1) + ((min(v0 - v1, -4)/4)*4)) - v0, 0) + 8) <= 1024)"
"(((v0*4) + -7) == ((((v0*4) + -7) + ((((min(((v1 + v2) + 3)/4, (min((min((v3*32) + 31, v4)/8)*8, (v3*32) + 24) + (v2/4)) + 7) - (v3*32)) - (v2/4))*4) + 12)) - 1))"
"(max(min(min(min(min(((v1 + v2) + -22)/32, ((v1 + v2) + -22)/32), ((v1 + v2) + 16)/32), ((v1 + v2) + 16)/32), (v3 + 21) - 1) + 1, min(max((v2 + 48)/32, v3), 21 + v3)) <= min(max((v2 + 48)/32, v3), 21 + v3))"
(((((((uint1)1 && ((((v0*4) + v1)/8) <= ((((v0*4) + v1) + 0)/8))) && (((((v0*4) + v1) + 3)/8) >= ((((v0*4) + v1) + ((4 + 0) - 1))/8))) && (v2 <= v2)) && (v2 >= v2)) && ((((0*4) + v3) + 0) <= (((0*4) + 0) + v3))) && ((((2*4) + v3) + 3) >= (((((3 + 0) - 1)*4) + ((4 + 0) - 1)) + v3)))
(((((((uint1)1 && (0 <= 0)) && (0 >= 0)) && (((((0*4) + ((v0*4) + ((v1*128) + v2))) + 0) + -10) <= (((v0*4) + ((v1*128) + v2)) + -10))) && (((((0*4) + ((v0*4) + ((v1*128) + v2))) + 3) + -10) >= ((((v0*4) + ((v1*128) + v2)) + 3) + -10))) && (v3 <= v3)) && (v3 >= v3))
"(max(min((v1 + v2) + -1, ((((((v3*2) + v4)*16) + v5)*4) + 64) - 1) + 1, min(max(v2, ((((v3*2) + v4)*16) + v5)*4), 64 + (((((v3*2) + v4)*16) + v5)*4))) <= min(max(v2, ((((v3*2) + v4)*16) + v5)*4), 64 + (((((v3*2) + v4)*16) + v5)*4)))"
"(max(((((min(v0*46, 45) + (v1*91)) + v2) % 4) + 23)/4, ((((((v1*91) + (min(v0*46, 45) + min(v3*16, 30))) + v2) + 19)/4) - ((((v1*91) + (min(v3*16, 30) + min(v0*46, 45))) + v2)/4)) + 1) <= 1024)"
((((v0*128)/4)*4) == (v0*128))
"(((min(((v0*2) + v1)*2, 251)*8) + -20) == ((((min(((v0*2) + v1)*2, 251)*8) + -20) + ((v2*8) + 32)) - 1))"
(((((v0 % (((v1*8) + 48)/36))*36)/4)*4) == ((v0 % (((v1*8) + 48)/36))*36))
((((v0*8) + 48)/36) != 0)
(((((((uint1)1 && ((0 + ((v0*128) + v1)) <= ((v0*128) + v1))) && ((3 + (((v0*128) + v1) + 124)) >= (((v0*128) + 127) + v1))) && (v2 <= (0 + v2))) && ((v2 + 501) >= (((502 + 0) - 1) + v2))) && (0 <= 0)) && (2 >= ((3 + 0) - 1)))
(((v0 + 264)/252) != 0)
(((((((uint1)1 && ((v0 + -4) <= (v0 + -4))) && ((v0 + 132) >= (v0 + 132))) && ((((v1 + v2) + 0) + 5) <= ((v1 + v2) + -4))) && ((((v1 + v2) + 3) + 5) >= ((v1 + v2) + 5))) && (0 <= 0)) && (2 >= 2))
(((((((uint1)1 && (((v0 + v1) + -3) <= ((v0 + v1) + -3))) && (((v0 + v1) + -3) >= ((v0 + v1) + -3))) && (((((0*4) + ((v2*12) + v3)) + 0) + -1) <= (((v2*12) + v3) + -1))) && (((((0*4) + (((v2*12) + v3) + 8)) + 3) + -1) >= ((((v2*12) + v3) + 11) + -1))) && (v4 <= v4)) && (v4 >= v4))
"(max(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min((v5/125) + -1, (v5/125) + -1), (v5/125) + -1), (v5/125) + -1), (v5/125) + -1), (v5/125) + -1), (v5/125) + -1), (v5/125) + -1), (v5/125) + -1), (v5/125) + -1), (v5/125) + -1), (v5/125) + -1), (v5/125) + -1), (v5/125) + -1), (v5/125) + -1), (min(((((min(v3 + v4, 1997) + 6)/4)*4) - v2) + 124, v5)/125) + -1), (min((((min(v3 + v4, 1995)/4)*4) - v2) + 132, v5)/125) + -1), (1859 - v2)/125), (1859 - v2)/125), (1859 - v2)/125), (1859 - v2)/125), (1859 - v2)/125), (1859 - v2)/125), (1859 - v2)/125), (1859 - v2)/125), (1859 - v2)/125), (1859 - v2)/125), (1859 - v2)/125), (1859 - v2)/125), (1859 - v2)/125), (1859 - v2)/125), (1859 - v2)/125), min(min(15 - (v2/125), (v5/125) + -1), ((((((v3 + v4) + 5)/4)*4) - v2) + -1)/125)), min(min(15 - (v2/125), (v5/125) + -1), ((((((v3 + v4) + 7)/4)*4) - v2) + -1)/125)), (0 + ((v5 + 124)/125)) - 1) + 1, min(max(max(max(max(max(0 - (v2/125), ((((v4/4)*4) - v2) + 132)/125), (((((v4 + 5)/4)*4) - v2) + 124)/125), (((((v4 + 6)/4)*4) - v2) + 124)/125), (((((v4 + 7)/4)*4) - v2) + 124)/125), 0), ((v5 + 124)/125) + 0)) <= min(max(max(max(max(max(0 - (v2/125), ((((v4/4)*4) - v2) + 132)/125), (((((v4 + 5)/4)*4) - v2) + 124)/125), (((((v4 + 6)/4)*4) - v2) + 124)/125), (((((v4 + 7)/4)*4) - v2) + 124)/125), 0), ((v5 + 124)/125) + 0))"
"(((((((uint1)1 && ((((((v0*4) + v1) + -5) + 0) + -3) <= (-5 + (((v0*4) + v1) + -3)))) && ((((((v0*4) + v1) + ((6 + -5) - 1)) + 3) + -3) >= (((6 + -5) - 1) + (min(((v0*4) + v1) - max(v0*4, 506), v1) + 506)))) && (0 <= 0)) && ((8 - 1) >= (8 - 1))) && (v2 <= v2)) && (v2 >= v2))"
"(((((((uint1)1 && ((max(v0/4, v1 + 10) + -2) <= (v1 + -2))) && ((v1 + 8) >= (v1 + 8))) && ((((0*4) + (v2/4)) + 0) <= (((0*4) + (v2/4)) + 0))) && ((((2*4) + ((v2/4) + 60)) + 3) >= (((2*4) + ((v2/4) + 60)) + 3))) && (((v3*2) + v4) <= ((v3*2) + v4))) && (((v3*2) + v4) >= ((v3*2) + v4)))"
(((((((uint1)1 && ((((v0 + v1) + 0) + 63) <= ((((0*4) + 0) + v1) + v0))) && ((((v0 + v1) + 3) + 63) >= ((((((16 + 0) - 1)*4) + ((4 + 0) - 1)) + v1) + v0))) && (((v2*8) + -1) <= ((((v2*8) + 0) + -2) + 1))) && (((v2*8) + 67) >= ((((v2*8) + ((64 + 0) - 1)) + ((6 + -2) - 1)) + 1))) && ((v3*8) <= ((v3*8) + 0))) && (((v3*8) + 7) >= ((v3*8) + ((8 + 0) - 1))))
"((min(v0, 5) + -10) >= (((min(v0, 5) + -10) + (11 - min(v0, 5))) - 1))"
"(max(0, min(((v0 % 4) + 27)/8, (0 + (((v0 % 4) + 39)/8)) - 1) + 1) <= 0)"
"(max(0, min((((min(v0*63, 62) + (min(v1*125, v2 + -125) + v3)) % 4) + 66)/4, (0 + ((((min(v0*63, 62) + v4) % 4) + 70)/4)) - 1) + 1) <= 0)"
"((((min(v0*32, 31) + ((v1*8) + v2)) + v3) + 3) < (((min(v0*32, 31) + ((v1*8) + (v2 + 1))) + v3) + -2))"
"(max(min(124, (((max(v1*4, -5) + v2) + 3) + (min(v1*4, -5) + 9)) - 1) + 1, min(max(0, (max(v1*4, -5) + v2) + 3), (min(v1*4, -5) + 9) + ((max(v1*4, -5) + v2) + 3))) <= min(max(0, (max(v1*4, -5) + v2) + 3), (min(v1*4, -5) + 9) + ((max(v1*4, -5) + v2) + 3)))"
(((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (0 <= 0)) && (0 >= 0)) && (v2 <= v2)) && (v2 >= v2))
(((((v0 % ((v1 + 6)/4))*-4)/4)*4) == ((v0 % ((v1 + 6)/4))*-4))
(((((((uint1)1 && (((((0*4) + v0) + 0) + -7) <= (((((0*4) + v0) + -2) + 0) + -5))) && (((((252*4) + v0) + 3) + -7) >= (((((((252 + 0) - 1)*4) + v0) + ((4 + -2) - 1)) + 3) + -5))) && ((v1 + -7) <= (-2 + (v1 + -5)))) && ((v1 + 126) >= (((4 + -2) - 1) + ((131 + (v1 + -5)) - 1)))) && (v2 <= v2)) && (v2 >= v2))
((((v0*2) + v1) + -4) < (((v0*2) + (v1 + 1)) + -4))
"(((((((uint1)1 && ((((min(v0*16, 110) + v1) + v2) + 5) <= (((min(v0*16, 110) + v1) + v2) + -4))) && ((((min(v0*16, 110) + v1) + v2) + 5) >= (((min(v0*16, 110) + v1) + v2) + 5))) && ((((max(-3*4, -9) + v3) + 0) + 5) <= (v3 + -4))) && ((((max(31*4, -9) + v3) + 3) + 5) >= (v3 + 132))) && (0 <= 0)) && (2 >= 2))"
"(((((((uint1)1 && ((((v0*68) + v1) + v2) <= (((v0*68) + v1) + v2))) && ((((v0*68) + v1) + v2) >= (((v0*68) + v1) + v2))) && ((((0*4) + v3) + 0) <= (((0*4) + v3) + 0))) && ((((((32 - max(v4*8, 25))/4)*4) + v3) + 3) >= ((((((((25 - max(v4*8, 25)) + 11)/4) + 0) - 1)*4) + v3) + ((4 + 0) - 1)))) && (0 <= 0)) && (0 >= 0))"