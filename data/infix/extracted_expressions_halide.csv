" (((v0*4) + 3) < ((v0 + 1)*4))"
" ((((((((v0*8) + v1) + v2) + -3)*v3) + v4) - (v3/2)) == (((((((v0*8) + v1) + v2) + -3)*v3) + v4) - (v3/2)))"
" ((((v0*v1) + v2) - (v1/2)) == (((v0*v1) + v2) - (v1/2)))"
" ((v0 - ((v1*8) + v2)) == (v0 - ((v1*8) + v2)))"
" (max(0, min((((min(v0*256, v1 + -256) + v2) % 8) + 239)/64, (0 + 5) - 1) + 1) <= 0)"
" ((((v0/8) + -2) + (((v0 % 8) + 303)/8)) <= ((v0/8) + -2))"
" (min(v0*256, v1 + -256) == min(v0*256, v1 + -256))"
" ((((v0 + v1)/8) + (v2*8)) == (((v0 + v1)/8) + (v2*8)))"
" ((3 - max(((-272 - ((min(v0*256, v1 + -256) + v2) % 8))/8) + (v3*8), -5)) == (3 - max(((-272 - ((min(v0*256, v1 + -256) + v2) % 8))/8) + (v3*8), -5)))"
" ((((v0*-64)/8)*8) == (v0*-64))"
" ((v0 + v1) >= ((((v0 - 1) + v1) + 2) + 1))"
" (((v0 + v1) + 2) <= (((v0 - 1) + v1) - 1))"
" (((v0 + v1) + 2) < ((v0 + 1) + v1))"
" (max(0, min((64 - (v0 % 2))/8, (0 + 9) - 1) + 1) <= 0)"
" (v0 == v0)"
" (((v0 + 1)/2) == ((v0 + 1)/2))"
" (((v0 + v1) + -1) >= ((((v0 - 1) + v1) + 1) + 1))"
" (((v0 + v1) + 1) <= ((((v0 - 1) + v1) + -1) - 1))"
" (((v0 + v1) + 1) < (((v0 + 1) + v1) + -1))"
" (v0 > v0)"
" ((((v0*128) + v1) + 127) < (((v0 + 1)*128) + v1))"
" ((((((1 && (((v0*128) + v1) <= ((v0*128) + v1))) && ((((v0*128) + v1) + 127) >= ((((v0*128) + v1) + 128) - 1))) && (((v2*32) + v3) <= ((v2*32) + v3))) && ((((v2*32) + v3) + 31) >= ((((v2*32) + v3) + 32) - 1))) && (0 <= 0)) && (3 >= ((0 + 4) - 1)))"
" ((((v0*64) + v1) + 63) < (((v0 + 1)*64) + v1))"
" ((v0 - (v1*4)) == (v0 - (v1*4)))"
" ((max(v0, 1) - (v1*8)) == (max(v0, 1) - (v1*8)))"
" ((((v0 + v1)*2) + -1) >= (((((v0 - 1) + v1)*2) + 1) + 1))"
" ((((v0 + v1)*2) + 1) <= (((((v0 - 1) + v1)*2) + -1) - 1))"
" (((v0 + v1)/512) >= (((((v0 - 1) + v1) + 511)/512) + 1))"
" ((((v0 + v1) + 255)/256) <= ((((v0 - 1) + v1)/256) - 1))"
" ((((v0 + v1) + 127)/128) <= ((((v0 - 1) + v1)/128) - 1))"
" (((v0 + v1)/64) >= (((((v0 - 1) + v1) + 63)/64) + 1))"
" (((v0 + v1)/32) >= (((((v0 - 1) + v1) + 31)/32) + 1))"
" (((v0 + v1)/8) >= (((((v0 - 1) + v1) + 7)/8) + 1))"
" ((((v0 + v1) + 1)/2) <= ((((v0 - 1) + v1)/2) - 1))"
" (max(0, min(((v0 % 8) + 78)/64, (0 + 3) - 1) + 1) <= 0)"
" (max(0, min(((v0 % 4) + 102)/32, (0 + 5) - 1) + 1) <= 0)"
" !((1 && ((v0 + v1) == (v0 + v1))) && ((v2 + v3) == (v2 + v3)))"
" ((((v0*8)/2)*2) == (v0*8))"
" !((1 && (v0 == v0)) && (v1 == v1))"
" (min(((((v0 - v1) + 7)/8)*8) + v1, v0) == min(((((v0 - v1) + 7)/8)*8) + v1, v0))"
" (((v0/2) + (v1*8)) == ((v0/2) + (v1*8)))"
" ((((min(v0 - (v1*16), v2 + 16) + 9)/4) - ((v2 + -6)/4)) == (((min(v0 - (v1*16), v2 + 16) + 9)/4) - ((v2 + -6)/4)))"
" ((((v0 + 5)/4) - ((v1 + -6)/4)) == (((v0 + 5)/4) - ((v1 + -6)/4)))"
" (min((v0 + -23)/4, ((v1 + -6)/4) + (v2*8)) == min((v0 + -23)/4, ((v1 + -6)/4) + (v2*8)))"
" (min(max((v0 + -3)/2, 0), ((v0 + -3)/2) + v1) == min(max((v0 + -3)/2, 0), ((v0 + -3)/2) + v1))"
" (min(max((37 - v0)/32, 0), (v1/8) + 1) == min(max((37 - v0)/32, 0), (v1/8) + 1))"
" (max(min(max((37 - v0)/32, 0), (v1/8) + 1), (min(min(min(((v2 + -23)/4) - ((v0 + -6)/4), ((v3/4) - ((v0 + -6)/4)) + -8), ((min(v3 + 19, v2) + -23)/4) - ((v0 + -6)/4)), v1)/8) + 1) == max(min(max((37 - v0)/32, 0), (v1/8) + 1), (min(min(min(((v2 + -23)/4) - ((v0 + -6)/4), ((v3/4) - ((v0 + -6)/4)) + -8), ((min(v3 + 19, v2) + -23)/4) - ((v0 + -6)/4)), v1)/8) + 1))"
" (min(max((v0 + -3)/2, v1/4), ((v0 + -3)/2) + v2) == min(max((v0 + -3)/2, v1/4), ((v0 + -3)/2) + v2))"
" ((((v0 + 1)/2) - (v1/2)) == (((v0 + 1)/2) - (v1/2)))"
" (min((v0 + -13)/2, ((v1/2) + (v2*8)) + -1) == min((v0 + -13)/2, ((v1/2) + (v2*8)) + -1))"
" (min(max(v0, 1) + -1, (((min(v1 - (v2*16), v3 + 16) + 3)/2) - (v3/2)) + v0) == min(max(v0, 1) + -1, (((min(v1 - (v2*16), v3 + 16) + 3)/2) - (v3/2)) + v0))"
" (min(max(max(0 - (v0/16), ((0 - (v0/2))/8) + 1), 0), (v1 + 9)/8) == min(max(max(0 - (v0/16), ((0 - (v0/2))/8) + 1), 0), (v1 + 9)/8))"
" (max(min(max(max(0 - (v0/16), ((0 - (v0/2))/8) + 1), 0), (v1 + 9)/8), (min(min(min((v2/2) - (v0/2), (((min(v2 + 11, v3) + -13)/2) - (v0/2)) + 8), min((v2/2) - (v0/2), (((v3 + -13)/2) - (v0/2)) + 2) + 6), v1 + 8) + 1)/8) == max(min(max(max(0 - (v0/16), ((0 - (v0/2))/8) + 1), 0), (v1 + 9)/8), (min(min(min((v2/2) - (v0/2), (((min(v2 + 11, v3) + -13)/2) - (v0/2)) + 8), min((v2/2) - (v0/2), (((v3 + -13)/2) - (v0/2)) + 2) + 6), v1 + 8) + 1)/8))"
" (min(max(v0/2, max(v1, 1) + -1), (((min(v2 - (v3*16), v4 + 16) + 3)/2) - (v4/2)) + v1) == min(max(v0/2, max(v1, 1) + -1), (((min(v2 - (v3*16), v4 + 16) + 3)/2) - (v4/2)) + v1))"
" ((v0 - (v1*16)) == (v0 - (v1*16)))"
" ((v0 - ((v1*16) + v2)) == (v0 - ((v1*16) + v2)))"
" (((v0*8) + (v1 - v2)) == ((v0*8) + (v1 - v2)))"
" ((((v0 + v1) + 15)/16) <= ((((v0 - 1) + v1)/16) - 1))"
" (((v0 + v1)/4) >= (((((v0 - 1) + v1) + 3)/4) + 1))"
" ((((v0 + v1) + 3)/4) <= ((((v0 - 1) + v1)/4) - 1))"
" (((v0 + v1)/2) >= (((((v0 - 1) + v1) + 1)/2) + 1))"
" ((((v0 + v1) + 1)/2) < (((v0 + 1) + v1)/2))"
" (max(0, min(((v0 % 4) + 230)/32, (0 + 9) - 1) + 1) <= 0)"
" ((max(v0 - 16, 0) < 0) && (max(v0 - 16, 0) > -32))"
" (((v0 + v1) + -20) >= ((((v0 - 1) + v1) + 20) + 1))"
" (((v0 + v1) + 20) <= ((((v0 - 1) + v1) + -20) - 1))"
" (((v0 + v1) + -18) >= ((((v0 - 1) + v1) + 18) + 1))"
" (((v0 + v1) + 18) <= ((((v0 - 1) + v1) + -18) - 1))"
" (((v0 + v1) + -16) >= ((((v0 - 1) + v1) + 16) + 1))"
" (((v0 + v1) + 16) <= ((((v0 - 1) + v1) + -16) - 1))"
" (((v0 + v1) + -14) >= ((((v0 - 1) + v1) + 14) + 1))"
" (((v0 + v1) + -12) >= ((((v0 - 1) + v1) + 12) + 1))"
" (((v0 + v1) + 12) <= ((((v0 - 1) + v1) + -12) - 1))"
" (((v0 + v1) + -10) >= ((((v0 - 1) + v1) + 10) + 1))"
" (((v0 + v1) + 8) <= ((((v0 - 1) + v1) + -8) - 1))"
" (((v0 + v1) + 6) <= ((((v0 - 1) + v1) + -6) - 1))"
" (((v0 + v1) + -4) >= ((((v0 - 1) + v1) + 4) + 1))"
" (((v0 + v1) + 2) <= ((((v0 - 1) + v1) + -2) - 1))"
" (((v0 + v1) + -8) >= ((((v0 - 1) + v1) + 8) + 1))"
" (((v0 + v1) + -6) >= ((((v0 - 1) + v1) + 6) + 1))"
" (((v0 + v1) + 4) <= ((((v0 - 1) + v1) + -4) - 1))"
" (((v0 + v1) + -2) >= ((((v0 - 1) + v1) + 2) + 1))"
" (((v0 + v1) + 14) <= ((((v0 - 1) + v1) + -14) - 1))"
" (((v0 + v1) + 10) <= ((((v0 - 1) + v1) + -10) - 1))"
" (((v0 + 493)/406) == ((v0 + 493)/406))"
" (((v0 + 438)/395) == ((v0 + 438)/395))"
" (((v0 + 383)/384) == ((v0 + 383)/384))"
" (((v0 + v1) + 2) < (((v0 + 1) + v1) + -2))"
" (((v0 + v1) + 3) <= ((((v0 - 1) + v1) + -3) - 1))"
" ((v0 + v1) >= (((v0 - 1) + v1) + 1))"
" ((v0 + v1) < ((v0 + 1) + v1))"
